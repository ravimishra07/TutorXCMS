import {
  require_jsx_runtime
} from "./chunk-4MC7CHVX.js";
import {
  require_react_dom
} from "./chunk-VNKJSTVO.js";
import {
  __commonJS,
  __export,
  __toESM,
  require_react
} from "./chunk-BXKINJMQ.js";

// ../../../node_modules/react-compiler-runtime/dist/index.js
var require_dist = __commonJS({
  "../../../node_modules/react-compiler-runtime/dist/index.js"(exports, module) {
    "use no memo";
    "use strict";
    var __create = Object.create;
    var __defProp = Object.defineProperty;
    var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames = Object.getOwnPropertyNames;
    var __getProtoOf = Object.getPrototypeOf;
    var __hasOwnProp = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))
          if (!__hasOwnProp.call(to, key) && key !== except)
            __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
      }
      return to;
    };
    var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
      // If the importer is in node compatibility mode or this is not an ESM
      // file that has been converted to a CommonJS file using a Babel-
      // compatible transform (i.e. "__esModule" has not been set), then set
      // "default" to the CommonJS "module.exports" for node compatibility.
      isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
    var index_exports = {};
    __export2(index_exports, {
      $dispatcherGuard: () => $dispatcherGuard,
      $makeReadOnly: () => $makeReadOnly,
      $reset: () => $reset,
      $structuralCheck: () => $structuralCheck,
      c: () => c2,
      clearRenderCounterRegistry: () => clearRenderCounterRegistry,
      renderCounterRegistry: () => renderCounterRegistry,
      useRenderCounter: () => useRenderCounter
    });
    module.exports = __toCommonJS(index_exports);
    var React55 = __toESM2(require_react());
    var { useRef: useRef34, useEffect: useEffect35, isValidElement: isValidElement3 } = React55;
    var _a2;
    var ReactSecretInternals = (
      //@ts-ignore
      (_a2 = React55.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE) != null ? _a2 : React55.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
    );
    var $empty = Symbol.for("react.memo_cache_sentinel");
    var _a22;
    var c2 = (
      // @ts-expect-error
      typeof ((_a22 = React55.__COMPILER_RUNTIME) == null ? void 0 : _a22.c) === "function" ? (
        // @ts-expect-error
        React55.__COMPILER_RUNTIME.c
      ) : function c22(size4) {
        return React55.useMemo(() => {
          const $ = new Array(size4);
          for (let ii = 0; ii < size4; ii++) {
            $[ii] = $empty;
          }
          $[$empty] = true;
          return $;
        }, []);
      }
    );
    var LazyGuardDispatcher = {};
    [
      "readContext",
      "useCallback",
      "useContext",
      "useEffect",
      "useImperativeHandle",
      "useInsertionEffect",
      "useLayoutEffect",
      "useMemo",
      "useReducer",
      "useRef",
      "useState",
      "useDebugValue",
      "useDeferredValue",
      "useTransition",
      "useMutableSource",
      "useSyncExternalStore",
      "useId",
      "unstable_isNewReconciler",
      "getCacheSignal",
      "getCacheForType",
      "useCacheRefresh"
    ].forEach((name) => {
      LazyGuardDispatcher[name] = () => {
        throw new Error(
          `[React] Unexpected React hook call (${name}) from a React compiled function. Check that all hooks are called directly and named according to convention ('use[A-Z]') `
        );
      };
    });
    var originalDispatcher = null;
    LazyGuardDispatcher["useMemoCache"] = (count3) => {
      if (originalDispatcher == null) {
        throw new Error(
          "React Compiler internal invariant violation: unexpected null dispatcher"
        );
      } else {
        return originalDispatcher.useMemoCache(count3);
      }
    };
    function setCurrent(newDispatcher) {
      ReactSecretInternals.ReactCurrentDispatcher.current = newDispatcher;
      return ReactSecretInternals.ReactCurrentDispatcher.current;
    }
    var guardFrames = [];
    function $dispatcherGuard(kind) {
      const curr = ReactSecretInternals.ReactCurrentDispatcher.current;
      if (kind === 0) {
        guardFrames.push(curr);
        if (guardFrames.length === 1) {
          originalDispatcher = curr;
        }
        if (curr === LazyGuardDispatcher) {
          throw new Error(
            `[React] Unexpected call to custom hook or component from a React compiled function. Check that (1) all hooks are called directly and named according to convention ('use[A-Z]') and (2) components are returned as JSX instead of being directly invoked.`
          );
        }
        setCurrent(LazyGuardDispatcher);
      } else if (kind === 1) {
        const lastFrame = guardFrames.pop();
        if (lastFrame == null) {
          throw new Error(
            "React Compiler internal error: unexpected null in guard stack"
          );
        }
        if (guardFrames.length === 0) {
          originalDispatcher = null;
        }
        setCurrent(lastFrame);
      } else if (kind === 2) {
        guardFrames.push(curr);
        setCurrent(originalDispatcher);
      } else if (kind === 3) {
        const lastFrame = guardFrames.pop();
        if (lastFrame == null) {
          throw new Error(
            "React Compiler internal error: unexpected null in guard stack"
          );
        }
        setCurrent(lastFrame);
      } else {
        throw new Error("React Compiler internal error: unreachable block" + kind);
      }
    }
    function $reset($) {
      for (let ii = 0; ii < $.length; ii++) {
        $[ii] = $empty;
      }
    }
    function $makeReadOnly() {
      throw new Error("TODO: implement $makeReadOnly in react-compiler-runtime");
    }
    var renderCounterRegistry = /* @__PURE__ */ new Map();
    function clearRenderCounterRegistry() {
      for (const counters of renderCounterRegistry.values()) {
        counters.forEach((counter) => {
          counter.count = 0;
        });
      }
    }
    function registerRenderCounter(name, val) {
      let counters = renderCounterRegistry.get(name);
      if (counters == null) {
        counters = /* @__PURE__ */ new Set();
        renderCounterRegistry.set(name, counters);
      }
      counters.add(val);
    }
    function removeRenderCounter(name, val) {
      const counters = renderCounterRegistry.get(name);
      if (counters == null) {
        return;
      }
      counters.delete(val);
    }
    function useRenderCounter(name) {
      const val = useRef34(null);
      if (val.current != null) {
        val.current.count += 1;
      }
      useEffect35(() => {
        if (val.current == null) {
          const counter = { count: 0 };
          registerRenderCounter(name, counter);
          val.current = counter;
        }
        return () => {
          if (val.current !== null) {
            removeRenderCounter(name, val.current);
          }
        };
      });
    }
    var seenErrors = /* @__PURE__ */ new Set();
    function $structuralCheck(oldValue, newValue, variableName, fnName, kind, loc) {
      function error2(l, r2, path, depth) {
        const str = `${fnName}:${loc} [${kind}] ${variableName}${path} changed from ${l} to ${r2} at depth ${depth}`;
        if (seenErrors.has(str)) {
          return;
        }
        seenErrors.add(str);
        console.error(str);
      }
      const depthLimit = 2;
      function recur(oldValue2, newValue2, path, depth) {
        if (depth > depthLimit) {
          return;
        } else if (oldValue2 === newValue2) {
          return;
        } else if (typeof oldValue2 !== typeof newValue2) {
          error2(`type ${typeof oldValue2}`, `type ${typeof newValue2}`, path, depth);
        } else if (typeof oldValue2 === "object") {
          const oldArray = Array.isArray(oldValue2);
          const newArray = Array.isArray(newValue2);
          if (oldValue2 === null && newValue2 !== null) {
            error2("null", `type ${typeof newValue2}`, path, depth);
          } else if (newValue2 === null) {
            error2(`type ${typeof oldValue2}`, "null", path, depth);
          } else if (oldValue2 instanceof Map) {
            if (!(newValue2 instanceof Map)) {
              error2(`Map instance`, `other value`, path, depth);
            } else if (oldValue2.size !== newValue2.size) {
              error2(
                `Map instance with size ${oldValue2.size}`,
                `Map instance with size ${newValue2.size}`,
                path,
                depth
              );
            } else {
              for (const [k2, v] of oldValue2) {
                if (!newValue2.has(k2)) {
                  error2(
                    `Map instance with key ${k2}`,
                    `Map instance without key ${k2}`,
                    path,
                    depth
                  );
                } else {
                  recur(v, newValue2.get(k2), `${path}.get(${k2})`, depth + 1);
                }
              }
            }
          } else if (newValue2 instanceof Map) {
            error2("other value", `Map instance`, path, depth);
          } else if (oldValue2 instanceof Set) {
            if (!(newValue2 instanceof Set)) {
              error2(`Set instance`, `other value`, path, depth);
            } else if (oldValue2.size !== newValue2.size) {
              error2(
                `Set instance with size ${oldValue2.size}`,
                `Set instance with size ${newValue2.size}`,
                path,
                depth
              );
            } else {
              for (const v of newValue2) {
                if (!oldValue2.has(v)) {
                  error2(
                    `Set instance without element ${v}`,
                    `Set instance with element ${v}`,
                    path,
                    depth
                  );
                }
              }
            }
          } else if (newValue2 instanceof Set) {
            error2("other value", `Set instance`, path, depth);
          } else if (oldArray || newArray) {
            if (oldArray !== newArray) {
              error2(
                `type ${oldArray ? "array" : "object"}`,
                `type ${newArray ? "array" : "object"}`,
                path,
                depth
              );
            } else if (oldValue2.length !== newValue2.length) {
              error2(
                `array with length ${oldValue2.length}`,
                `array with length ${newValue2.length}`,
                path,
                depth
              );
            } else {
              for (let ii = 0; ii < oldValue2.length; ii++) {
                recur(oldValue2[ii], newValue2[ii], `${path}[${ii}]`, depth + 1);
              }
            }
          } else if (isValidElement3(oldValue2) || isValidElement3(newValue2)) {
            if (isValidElement3(oldValue2) !== isValidElement3(newValue2)) {
              error2(
                `type ${isValidElement3(oldValue2) ? "React element" : "object"}`,
                `type ${isValidElement3(newValue2) ? "React element" : "object"}`,
                path,
                depth
              );
            } else if (oldValue2.type !== newValue2.type) {
              error2(
                `React element of type ${oldValue2.type}`,
                `React element of type ${newValue2.type}`,
                path,
                depth
              );
            } else {
              recur(
                oldValue2.props,
                newValue2.props,
                `[props of ${path}]`,
                depth + 1
              );
            }
          } else {
            for (const key in newValue2) {
              if (!(key in oldValue2)) {
                error2(
                  `object without key ${key}`,
                  `object with key ${key}`,
                  path,
                  depth
                );
              }
            }
            for (const key in oldValue2) {
              if (!(key in newValue2)) {
                error2(
                  `object with key ${key}`,
                  `object without key ${key}`,
                  path,
                  depth
                );
              } else {
                recur(oldValue2[key], newValue2[key], `${path}.${key}`, depth + 1);
              }
            }
          }
        } else if (typeof oldValue2 === "function") {
          return;
        } else if (isNaN(oldValue2) || isNaN(newValue2)) {
          if (isNaN(oldValue2) !== isNaN(newValue2)) {
            error2(
              `${isNaN(oldValue2) ? "NaN" : "non-NaN value"}`,
              `${isNaN(newValue2) ? "NaN" : "non-NaN value"}`,
              path,
              depth
            );
          }
        } else if (oldValue2 !== newValue2) {
          error2(oldValue2, newValue2, path, depth);
        }
      }
      recur(oldValue, newValue, "", 0);
    }
  }
});

// ../../../node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "../../../node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment15 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal7 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement2(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment15;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal7;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement2;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// ../../../node_modules/react-is/index.js
var require_react_is = __commonJS({
  "../../../node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// ../../../node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "../../../node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// ../../../node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "../../../node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// ../../../node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "../../../node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// ../../../node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "../../../node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has2 = require_has();
      printWarning = function(text2) {
        var message = "Warning: " + text2;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has2;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has2(typeSpecs, typeSpecName)) {
            var error2;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error2 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error2 = ex;
            }
            if (error2 && !(error2 instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error2 + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error2 instanceof Error && !(error2.message in loggedTypeFailures)) {
              loggedTypeFailures[error2.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error2.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// ../../../node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "../../../node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign3 = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has2 = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text2) {
        var message = "Warning: " + text2;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement3, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error2 = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error2 instanceof Error) {
              return error2;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement3(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has2(propValue, key)) {
              var error2 = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error2 instanceof Error) {
                return error2;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has2(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode3(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error2 = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error2) {
              return error2;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign3({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has2(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error2 = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error2) {
              return error2;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode3(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode3);
            }
            if (propValue === null || isValidElement3(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode3(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode3(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// ../../../node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "../../../node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// ../../../node_modules/attr-accept/dist/es/index.js
var require_es = __commonJS({
  "../../../node_modules/attr-accept/dist/es/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = function(file, acceptedFiles) {
      if (file && acceptedFiles) {
        var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(",");
        if (acceptedFilesArray.length === 0) {
          return true;
        }
        var fileName = file.name || "";
        var mimeType = (file.type || "").toLowerCase();
        var baseMimeType = mimeType.replace(/\/.*$/, "");
        return acceptedFilesArray.some(function(type) {
          var validType = type.trim().toLowerCase();
          if (validType.charAt(0) === ".") {
            return fileName.toLowerCase().endsWith(validType);
          } else if (validType.endsWith("/*")) {
            return baseMimeType === validType.replace(/\/.*$/, "");
          }
          return mimeType === validType;
        });
      }
      return true;
    };
  }
});

// ../../../node_modules/react-fast-compare/index.js
var require_react_fast_compare = __commonJS({
  "../../../node_modules/react-fast-compare/index.js"(exports, module) {
    var hasElementType = typeof Element !== "undefined";
    var hasMap = typeof Map === "function";
    var hasSet = typeof Set === "function";
    var hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
    function equal2(a2, b) {
      if (a2 === b) return true;
      if (a2 && b && typeof a2 == "object" && typeof b == "object") {
        if (a2.constructor !== b.constructor) return false;
        var length, i, keys;
        if (Array.isArray(a2)) {
          length = a2.length;
          if (length != b.length) return false;
          for (i = length; i-- !== 0; )
            if (!equal2(a2[i], b[i])) return false;
          return true;
        }
        var it;
        if (hasMap && a2 instanceof Map && b instanceof Map) {
          if (a2.size !== b.size) return false;
          it = a2.entries();
          while (!(i = it.next()).done)
            if (!b.has(i.value[0])) return false;
          it = a2.entries();
          while (!(i = it.next()).done)
            if (!equal2(i.value[1], b.get(i.value[0]))) return false;
          return true;
        }
        if (hasSet && a2 instanceof Set && b instanceof Set) {
          if (a2.size !== b.size) return false;
          it = a2.entries();
          while (!(i = it.next()).done)
            if (!b.has(i.value[0])) return false;
          return true;
        }
        if (hasArrayBuffer && ArrayBuffer.isView(a2) && ArrayBuffer.isView(b)) {
          length = a2.length;
          if (length != b.length) return false;
          for (i = length; i-- !== 0; )
            if (a2[i] !== b[i]) return false;
          return true;
        }
        if (a2.constructor === RegExp) return a2.source === b.source && a2.flags === b.flags;
        if (a2.valueOf !== Object.prototype.valueOf && typeof a2.valueOf === "function" && typeof b.valueOf === "function") return a2.valueOf() === b.valueOf();
        if (a2.toString !== Object.prototype.toString && typeof a2.toString === "function" && typeof b.toString === "function") return a2.toString() === b.toString();
        keys = Object.keys(a2);
        length = keys.length;
        if (length !== Object.keys(b).length) return false;
        for (i = length; i-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
        if (hasElementType && a2 instanceof Element) return false;
        for (i = length; i-- !== 0; ) {
          if ((keys[i] === "_owner" || keys[i] === "__v" || keys[i] === "__o") && a2.$$typeof) {
            continue;
          }
          if (!equal2(a2[keys[i]], b[keys[i]])) return false;
        }
        return true;
      }
      return a2 !== a2 && b !== b;
    }
    module.exports = function isEqual(a2, b) {
      try {
        return equal2(a2, b);
      } catch (error2) {
        if ((error2.message || "").match(/stack|recursion/i)) {
          console.warn("react-fast-compare cannot handle circular refs");
          return false;
        }
        throw error2;
      }
    };
  }
});

// ../../../node_modules/@firecms/ui/dist/index.es.js
var import_jsx_runtime29 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime = __toESM(require_dist());
var React54 = __toESM(require_react());
var import_react22 = __toESM(require_react());

// ../../../node_modules/@radix-ui/react-collapsible/dist/index.mjs
var React10 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/primitive/dist/index.mjs
function composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {
  return function handleEvent(event) {
    originalEventHandler == null ? void 0 : originalEventHandler(event);
    if (checkForDefaultPrevented === false || !event.defaultPrevented) {
      return ourEventHandler == null ? void 0 : ourEventHandler(event);
    }
  };
}

// ../../../node_modules/@radix-ui/react-context/dist/index.mjs
var React = __toESM(require_react(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
function createContext2(rootComponentName, defaultContext) {
  const Context = React.createContext(defaultContext);
  const Provider2 = (props) => {
    const { children, ...context } = props;
    const value = React.useMemo(() => context, Object.values(context));
    return (0, import_jsx_runtime.jsx)(Context.Provider, { value, children });
  };
  Provider2.displayName = rootComponentName + "Provider";
  function useContext22(consumerName) {
    const context = React.useContext(Context);
    if (context) return context;
    if (defaultContext !== void 0) return defaultContext;
    throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
  }
  return [Provider2, useContext22];
}
function createContextScope(scopeName, createContextScopeDeps = []) {
  let defaultContexts = [];
  function createContext32(rootComponentName, defaultContext) {
    const BaseContext = React.createContext(defaultContext);
    const index2 = defaultContexts.length;
    defaultContexts = [...defaultContexts, defaultContext];
    const Provider2 = (props) => {
      var _a2;
      const { scope, children, ...context } = props;
      const Context = ((_a2 = scope == null ? void 0 : scope[scopeName]) == null ? void 0 : _a2[index2]) || BaseContext;
      const value = React.useMemo(() => context, Object.values(context));
      return (0, import_jsx_runtime.jsx)(Context.Provider, { value, children });
    };
    Provider2.displayName = rootComponentName + "Provider";
    function useContext22(consumerName, scope) {
      var _a2;
      const Context = ((_a2 = scope == null ? void 0 : scope[scopeName]) == null ? void 0 : _a2[index2]) || BaseContext;
      const context = React.useContext(Context);
      if (context) return context;
      if (defaultContext !== void 0) return defaultContext;
      throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
    }
    return [Provider2, useContext22];
  }
  const createScope = () => {
    const scopeContexts = defaultContexts.map((defaultContext) => {
      return React.createContext(defaultContext);
    });
    return function useScope(scope) {
      const contexts = (scope == null ? void 0 : scope[scopeName]) || scopeContexts;
      return React.useMemo(
        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),
        [scope, contexts]
      );
    };
  };
  createScope.scopeName = scopeName;
  return [createContext32, composeContextScopes(createScope, ...createContextScopeDeps)];
}
function composeContextScopes(...scopes) {
  const baseScope = scopes[0];
  if (scopes.length === 1) return baseScope;
  const createScope = () => {
    const scopeHooks = scopes.map((createScope2) => ({
      useScope: createScope2(),
      scopeName: createScope2.scopeName
    }));
    return function useComposedScopes(overrideScopes) {
      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {
        const scopeProps = useScope(overrideScopes);
        const currentScope = scopeProps[`__scope${scopeName}`];
        return { ...nextScopes2, ...currentScope };
      }, {});
      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);
    };
  };
  createScope.scopeName = baseScope.scopeName;
  return createScope;
}

// ../../../node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs
var React4 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs
var React2 = __toESM(require_react(), 1);
var useLayoutEffect2 = (globalThis == null ? void 0 : globalThis.document) ? React2.useLayoutEffect : () => {
};

// ../../../node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs
var React22 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-use-effect-event/dist/index.mjs
var React3 = __toESM(require_react(), 1);
var useReactEffectEvent = React3[" useEffectEvent ".trim().toString()];
var useReactInsertionEffect = React3[" useInsertionEffect ".trim().toString()];

// ../../../node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs
var useInsertionEffect = React4[" useInsertionEffect ".trim().toString()] || useLayoutEffect2;
function useControllableState({
  prop,
  defaultProp,
  onChange = () => {
  },
  caller
}) {
  const [uncontrolledProp, setUncontrolledProp, onChangeRef] = useUncontrolledState({
    defaultProp,
    onChange
  });
  const isControlled = prop !== void 0;
  const value = isControlled ? prop : uncontrolledProp;
  if (true) {
    const isControlledRef = React4.useRef(prop !== void 0);
    React4.useEffect(() => {
      const wasControlled = isControlledRef.current;
      if (wasControlled !== isControlled) {
        const from = wasControlled ? "controlled" : "uncontrolled";
        const to = isControlled ? "controlled" : "uncontrolled";
        console.warn(
          `${caller} is changing from ${from} to ${to}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`
        );
      }
      isControlledRef.current = isControlled;
    }, [isControlled, caller]);
  }
  const setValue = React4.useCallback(
    (nextValue) => {
      var _a2;
      if (isControlled) {
        const value2 = isFunction(nextValue) ? nextValue(prop) : nextValue;
        if (value2 !== prop) {
          (_a2 = onChangeRef.current) == null ? void 0 : _a2.call(onChangeRef, value2);
        }
      } else {
        setUncontrolledProp(nextValue);
      }
    },
    [isControlled, prop, setUncontrolledProp, onChangeRef]
  );
  return [value, setValue];
}
function useUncontrolledState({
  defaultProp,
  onChange
}) {
  const [value, setValue] = React4.useState(defaultProp);
  const prevValueRef = React4.useRef(value);
  const onChangeRef = React4.useRef(onChange);
  useInsertionEffect(() => {
    onChangeRef.current = onChange;
  }, [onChange]);
  React4.useEffect(() => {
    var _a2;
    if (prevValueRef.current !== value) {
      (_a2 = onChangeRef.current) == null ? void 0 : _a2.call(onChangeRef, value);
      prevValueRef.current = value;
    }
  }, [value, prevValueRef]);
  return [value, setValue, onChangeRef];
}
function isFunction(value) {
  return typeof value === "function";
}
var SYNC_STATE = Symbol("RADIX:SYNC_STATE");

// ../../../node_modules/@radix-ui/react-compose-refs/dist/index.mjs
var React5 = __toESM(require_react(), 1);
function setRef(ref, value) {
  if (typeof ref === "function") {
    return ref(value);
  } else if (ref !== null && ref !== void 0) {
    ref.current = value;
  }
}
function composeRefs(...refs) {
  return (node) => {
    let hasCleanup = false;
    const cleanups = refs.map((ref) => {
      const cleanup = setRef(ref, node);
      if (!hasCleanup && typeof cleanup == "function") {
        hasCleanup = true;
      }
      return cleanup;
    });
    if (hasCleanup) {
      return () => {
        for (let i = 0; i < cleanups.length; i++) {
          const cleanup = cleanups[i];
          if (typeof cleanup == "function") {
            cleanup();
          } else {
            setRef(refs[i], null);
          }
        }
      };
    }
  };
}
function useComposedRefs(...refs) {
  return React5.useCallback(composeRefs(...refs), refs);
}

// ../../../node_modules/@radix-ui/react-primitive/dist/index.mjs
var React7 = __toESM(require_react(), 1);
var ReactDOM = __toESM(require_react_dom(), 1);

// ../../../node_modules/@radix-ui/react-slot/dist/index.mjs
var React6 = __toESM(require_react(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
function createSlot(ownerName) {
  const SlotClone = createSlotClone(ownerName);
  const Slot22 = React6.forwardRef((props, forwardedRef) => {
    const { children, ...slotProps } = props;
    const childrenArray = React6.Children.toArray(children);
    const slottable = childrenArray.find(isSlottable);
    if (slottable) {
      const newElement = slottable.props.children;
      const newChildren = childrenArray.map((child) => {
        if (child === slottable) {
          if (React6.Children.count(newElement) > 1) return React6.Children.only(null);
          return React6.isValidElement(newElement) ? newElement.props.children : null;
        } else {
          return child;
        }
      });
      return (0, import_jsx_runtime2.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children: React6.isValidElement(newElement) ? React6.cloneElement(newElement, void 0, newChildren) : null });
    }
    return (0, import_jsx_runtime2.jsx)(SlotClone, { ...slotProps, ref: forwardedRef, children });
  });
  Slot22.displayName = `${ownerName}.Slot`;
  return Slot22;
}
var Slot = createSlot("Slot");
function createSlotClone(ownerName) {
  const SlotClone = React6.forwardRef((props, forwardedRef) => {
    const { children, ...slotProps } = props;
    const childrenRef = React6.isValidElement(children) ? getElementRef(children) : void 0;
    const ref = useComposedRefs(childrenRef, forwardedRef);
    if (React6.isValidElement(children)) {
      const props2 = mergeProps(slotProps, children.props);
      if (children.type !== React6.Fragment) {
        props2.ref = ref;
      }
      return React6.cloneElement(children, props2);
    }
    return React6.Children.count(children) > 1 ? React6.Children.only(null) : null;
  });
  SlotClone.displayName = `${ownerName}.SlotClone`;
  return SlotClone;
}
var SLOTTABLE_IDENTIFIER = Symbol("radix.slottable");
function createSlottable(ownerName) {
  const Slottable22 = ({ children }) => {
    return (0, import_jsx_runtime2.jsx)(import_jsx_runtime2.Fragment, { children });
  };
  Slottable22.displayName = `${ownerName}.Slottable`;
  Slottable22.__radixId = SLOTTABLE_IDENTIFIER;
  return Slottable22;
}
var Slottable = createSlottable("Slottable");
function isSlottable(child) {
  return React6.isValidElement(child) && typeof child.type === "function" && "__radixId" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;
}
function mergeProps(slotProps, childProps) {
  const overrideProps = { ...childProps };
  for (const propName in childProps) {
    const slotPropValue = slotProps[propName];
    const childPropValue = childProps[propName];
    const isHandler = /^on[A-Z]/.test(propName);
    if (isHandler) {
      if (slotPropValue && childPropValue) {
        overrideProps[propName] = (...args) => {
          const result = childPropValue(...args);
          slotPropValue(...args);
          return result;
        };
      } else if (slotPropValue) {
        overrideProps[propName] = slotPropValue;
      }
    } else if (propName === "style") {
      overrideProps[propName] = { ...slotPropValue, ...childPropValue };
    } else if (propName === "className") {
      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(" ");
    }
  }
  return { ...slotProps, ...overrideProps };
}
function getElementRef(element) {
  var _a2, _b;
  let getter = (_a2 = Object.getOwnPropertyDescriptor(element.props, "ref")) == null ? void 0 : _a2.get;
  let mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
  if (mayWarn) {
    return element.ref;
  }
  getter = (_b = Object.getOwnPropertyDescriptor(element, "ref")) == null ? void 0 : _b.get;
  mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
  if (mayWarn) {
    return element.props.ref;
  }
  return element.props.ref || element.ref;
}

// ../../../node_modules/@radix-ui/react-primitive/dist/index.mjs
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
var NODES = [
  "a",
  "button",
  "div",
  "form",
  "h2",
  "h3",
  "img",
  "input",
  "label",
  "li",
  "nav",
  "ol",
  "p",
  "select",
  "span",
  "svg",
  "ul"
];
var Primitive = NODES.reduce((primitive, node) => {
  const Slot6 = createSlot(`Primitive.${node}`);
  const Node2 = React7.forwardRef((props, forwardedRef) => {
    const { asChild, ...primitiveProps } = props;
    const Comp = asChild ? Slot6 : node;
    if (typeof window !== "undefined") {
      window[Symbol.for("radix-ui")] = true;
    }
    return (0, import_jsx_runtime3.jsx)(Comp, { ...primitiveProps, ref: forwardedRef });
  });
  Node2.displayName = `Primitive.${node}`;
  return { ...primitive, [node]: Node2 };
}, {});
function dispatchDiscreteCustomEvent(target, event) {
  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));
}

// ../../../node_modules/@radix-ui/react-presence/dist/index.mjs
var React23 = __toESM(require_react(), 1);
var React8 = __toESM(require_react(), 1);
function useStateMachine(initialState2, machine) {
  return React8.useReducer((state, event) => {
    const nextState = machine[state][event];
    return nextState ?? state;
  }, initialState2);
}
var Presence = (props) => {
  const { present, children } = props;
  const presence = usePresence(present);
  const child = typeof children === "function" ? children({ present: presence.isPresent }) : React23.Children.only(children);
  const ref = useComposedRefs(presence.ref, getElementRef2(child));
  const forceMount = typeof children === "function";
  return forceMount || presence.isPresent ? React23.cloneElement(child, { ref }) : null;
};
Presence.displayName = "Presence";
function usePresence(present) {
  const [node, setNode] = React23.useState();
  const stylesRef = React23.useRef(null);
  const prevPresentRef = React23.useRef(present);
  const prevAnimationNameRef = React23.useRef("none");
  const initialState2 = present ? "mounted" : "unmounted";
  const [state, send] = useStateMachine(initialState2, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: {
      MOUNT: "mounted"
    }
  });
  React23.useEffect(() => {
    const currentAnimationName = getAnimationName(stylesRef.current);
    prevAnimationNameRef.current = state === "mounted" ? currentAnimationName : "none";
  }, [state]);
  useLayoutEffect2(() => {
    const styles2 = stylesRef.current;
    const wasPresent = prevPresentRef.current;
    const hasPresentChanged = wasPresent !== present;
    if (hasPresentChanged) {
      const prevAnimationName = prevAnimationNameRef.current;
      const currentAnimationName = getAnimationName(styles2);
      if (present) {
        send("MOUNT");
      } else if (currentAnimationName === "none" || (styles2 == null ? void 0 : styles2.display) === "none") {
        send("UNMOUNT");
      } else {
        const isAnimating = prevAnimationName !== currentAnimationName;
        if (wasPresent && isAnimating) {
          send("ANIMATION_OUT");
        } else {
          send("UNMOUNT");
        }
      }
      prevPresentRef.current = present;
    }
  }, [present, send]);
  useLayoutEffect2(() => {
    if (node) {
      let timeoutId;
      const ownerWindow = node.ownerDocument.defaultView ?? window;
      const handleAnimationEnd = (event) => {
        const currentAnimationName = getAnimationName(stylesRef.current);
        const isCurrentAnimation = currentAnimationName.includes(event.animationName);
        if (event.target === node && isCurrentAnimation) {
          send("ANIMATION_END");
          if (!prevPresentRef.current) {
            const currentFillMode = node.style.animationFillMode;
            node.style.animationFillMode = "forwards";
            timeoutId = ownerWindow.setTimeout(() => {
              if (node.style.animationFillMode === "forwards") {
                node.style.animationFillMode = currentFillMode;
              }
            });
          }
        }
      };
      const handleAnimationStart = (event) => {
        if (event.target === node) {
          prevAnimationNameRef.current = getAnimationName(stylesRef.current);
        }
      };
      node.addEventListener("animationstart", handleAnimationStart);
      node.addEventListener("animationcancel", handleAnimationEnd);
      node.addEventListener("animationend", handleAnimationEnd);
      return () => {
        ownerWindow.clearTimeout(timeoutId);
        node.removeEventListener("animationstart", handleAnimationStart);
        node.removeEventListener("animationcancel", handleAnimationEnd);
        node.removeEventListener("animationend", handleAnimationEnd);
      };
    } else {
      send("ANIMATION_END");
    }
  }, [node, send]);
  return {
    isPresent: ["mounted", "unmountSuspended"].includes(state),
    ref: React23.useCallback((node2) => {
      stylesRef.current = node2 ? getComputedStyle(node2) : null;
      setNode(node2);
    }, [])
  };
}
function getAnimationName(styles2) {
  return (styles2 == null ? void 0 : styles2.animationName) || "none";
}
function getElementRef2(element) {
  var _a2, _b;
  let getter = (_a2 = Object.getOwnPropertyDescriptor(element.props, "ref")) == null ? void 0 : _a2.get;
  let mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
  if (mayWarn) {
    return element.ref;
  }
  getter = (_b = Object.getOwnPropertyDescriptor(element, "ref")) == null ? void 0 : _b.get;
  mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
  if (mayWarn) {
    return element.props.ref;
  }
  return element.props.ref || element.ref;
}

// ../../../node_modules/@radix-ui/react-id/dist/index.mjs
var React9 = __toESM(require_react(), 1);
var useReactId = React9[" useId ".trim().toString()] || (() => void 0);
var count = 0;
function useId(deterministicId) {
  const [id, setId] = React9.useState(useReactId());
  useLayoutEffect2(() => {
    if (!deterministicId) setId((reactId) => reactId ?? String(count++));
  }, [deterministicId]);
  return deterministicId || (id ? `radix-${id}` : "");
}

// ../../../node_modules/@radix-ui/react-collapsible/dist/index.mjs
var import_jsx_runtime4 = __toESM(require_jsx_runtime(), 1);
var COLLAPSIBLE_NAME = "Collapsible";
var [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);
var [CollapsibleProvider, useCollapsibleContext] = createCollapsibleContext(COLLAPSIBLE_NAME);
var Collapsible = React10.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeCollapsible,
      open: openProp,
      defaultOpen,
      disabled,
      onOpenChange,
      ...collapsibleProps
    } = props;
    const [open, setOpen] = useControllableState({
      prop: openProp,
      defaultProp: defaultOpen ?? false,
      onChange: onOpenChange,
      caller: COLLAPSIBLE_NAME
    });
    return (0, import_jsx_runtime4.jsx)(
      CollapsibleProvider,
      {
        scope: __scopeCollapsible,
        disabled,
        contentId: useId(),
        open,
        onOpenToggle: React10.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),
        children: (0, import_jsx_runtime4.jsx)(
          Primitive.div,
          {
            "data-state": getState(open),
            "data-disabled": disabled ? "" : void 0,
            ...collapsibleProps,
            ref: forwardedRef
          }
        )
      }
    );
  }
);
Collapsible.displayName = COLLAPSIBLE_NAME;
var TRIGGER_NAME = "CollapsibleTrigger";
var CollapsibleTrigger = React10.forwardRef(
  (props, forwardedRef) => {
    const { __scopeCollapsible, ...triggerProps } = props;
    const context = useCollapsibleContext(TRIGGER_NAME, __scopeCollapsible);
    return (0, import_jsx_runtime4.jsx)(
      Primitive.button,
      {
        type: "button",
        "aria-controls": context.contentId,
        "aria-expanded": context.open || false,
        "data-state": getState(context.open),
        "data-disabled": context.disabled ? "" : void 0,
        disabled: context.disabled,
        ...triggerProps,
        ref: forwardedRef,
        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)
      }
    );
  }
);
CollapsibleTrigger.displayName = TRIGGER_NAME;
var CONTENT_NAME = "CollapsibleContent";
var CollapsibleContent = React10.forwardRef(
  (props, forwardedRef) => {
    const { forceMount, ...contentProps } = props;
    const context = useCollapsibleContext(CONTENT_NAME, props.__scopeCollapsible);
    return (0, import_jsx_runtime4.jsx)(Presence, { present: forceMount || context.open, children: ({ present }) => (0, import_jsx_runtime4.jsx)(CollapsibleContentImpl, { ...contentProps, ref: forwardedRef, present }) });
  }
);
CollapsibleContent.displayName = CONTENT_NAME;
var CollapsibleContentImpl = React10.forwardRef((props, forwardedRef) => {
  const { __scopeCollapsible, present, children, ...contentProps } = props;
  const context = useCollapsibleContext(CONTENT_NAME, __scopeCollapsible);
  const [isPresent, setIsPresent] = React10.useState(present);
  const ref = React10.useRef(null);
  const composedRefs = useComposedRefs(forwardedRef, ref);
  const heightRef = React10.useRef(0);
  const height = heightRef.current;
  const widthRef = React10.useRef(0);
  const width = widthRef.current;
  const isOpen = context.open || isPresent;
  const isMountAnimationPreventedRef = React10.useRef(isOpen);
  const originalStylesRef = React10.useRef(void 0);
  React10.useEffect(() => {
    const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);
    return () => cancelAnimationFrame(rAF);
  }, []);
  useLayoutEffect2(() => {
    const node = ref.current;
    if (node) {
      originalStylesRef.current = originalStylesRef.current || {
        transitionDuration: node.style.transitionDuration,
        animationName: node.style.animationName
      };
      node.style.transitionDuration = "0s";
      node.style.animationName = "none";
      const rect = node.getBoundingClientRect();
      heightRef.current = rect.height;
      widthRef.current = rect.width;
      if (!isMountAnimationPreventedRef.current) {
        node.style.transitionDuration = originalStylesRef.current.transitionDuration;
        node.style.animationName = originalStylesRef.current.animationName;
      }
      setIsPresent(present);
    }
  }, [context.open, present]);
  return (0, import_jsx_runtime4.jsx)(
    Primitive.div,
    {
      "data-state": getState(context.open),
      "data-disabled": context.disabled ? "" : void 0,
      id: context.contentId,
      hidden: !isOpen,
      ...contentProps,
      ref: composedRefs,
      style: {
        [`--radix-collapsible-content-height`]: height ? `${height}px` : void 0,
        [`--radix-collapsible-content-width`]: width ? `${width}px` : void 0,
        ...props.style
      },
      children: isOpen && children
    }
  );
});
function getState(open) {
  return open ? "open" : "closed";
}
var Root = Collapsible;
var Trigger = CollapsibleTrigger;
var Content = CollapsibleContent;

// ../../../node_modules/clsx/dist/clsx.mjs
function r(e) {
  var t2, f, n = "";
  if ("string" == typeof e || "number" == typeof e) n += e;
  else if ("object" == typeof e) if (Array.isArray(e)) {
    var o = e.length;
    for (t2 = 0; t2 < o; t2++) e[t2] && (f = r(e[t2])) && (n && (n += " "), n += f);
  } else for (f in e) e[f] && (n && (n += " "), n += f);
  return n;
}
function clsx() {
  for (var e, t2, f = 0, n = "", o = arguments.length; f < o; f++) (e = arguments[f]) && (t2 = r(e)) && (n && (n += " "), n += t2);
  return n;
}
var clsx_default = clsx;

// ../../../node_modules/tailwind-merge/dist/bundle-mjs.mjs
var CLASS_PART_SEPARATOR = "-";
var createClassGroupUtils = (config2) => {
  const classMap = createClassMap(config2);
  const {
    conflictingClassGroups,
    conflictingClassGroupModifiers
  } = config2;
  const getClassGroupId = (className) => {
    const classParts = className.split(CLASS_PART_SEPARATOR);
    if (classParts[0] === "" && classParts.length !== 1) {
      classParts.shift();
    }
    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);
  };
  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {
    const conflicts = conflictingClassGroups[classGroupId] || [];
    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {
      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];
    }
    return conflicts;
  };
  return {
    getClassGroupId,
    getConflictingClassGroupIds
  };
};
var getGroupRecursive = (classParts, classPartObject) => {
  var _a2;
  if (classParts.length === 0) {
    return classPartObject.classGroupId;
  }
  const currentClassPart = classParts[0];
  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);
  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : void 0;
  if (classGroupFromNextClassPart) {
    return classGroupFromNextClassPart;
  }
  if (classPartObject.validators.length === 0) {
    return void 0;
  }
  const classRest = classParts.join(CLASS_PART_SEPARATOR);
  return (_a2 = classPartObject.validators.find(({
    validator
  }) => validator(classRest))) == null ? void 0 : _a2.classGroupId;
};
var arbitraryPropertyRegex = /^\[(.+)\]$/;
var getGroupIdForArbitraryProperty = (className) => {
  if (arbitraryPropertyRegex.test(className)) {
    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];
    const property = arbitraryPropertyClassName == null ? void 0 : arbitraryPropertyClassName.substring(0, arbitraryPropertyClassName.indexOf(":"));
    if (property) {
      return "arbitrary.." + property;
    }
  }
};
var createClassMap = (config2) => {
  const {
    theme,
    prefix
  } = config2;
  const classMap = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  const prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config2.classGroups), prefix);
  prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {
    processClassesRecursively(classGroup, classMap, classGroupId, theme);
  });
  return classMap;
};
var processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {
  classGroup.forEach((classDefinition) => {
    if (typeof classDefinition === "string") {
      const classPartObjectToEdit = classDefinition === "" ? classPartObject : getPart(classPartObject, classDefinition);
      classPartObjectToEdit.classGroupId = classGroupId;
      return;
    }
    if (typeof classDefinition === "function") {
      if (isThemeGetter(classDefinition)) {
        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);
        return;
      }
      classPartObject.validators.push({
        validator: classDefinition,
        classGroupId
      });
      return;
    }
    Object.entries(classDefinition).forEach(([key, classGroup2]) => {
      processClassesRecursively(classGroup2, getPart(classPartObject, key), classGroupId, theme);
    });
  });
};
var getPart = (classPartObject, path) => {
  let currentClassPartObject = classPartObject;
  path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {
    if (!currentClassPartObject.nextPart.has(pathPart)) {
      currentClassPartObject.nextPart.set(pathPart, {
        nextPart: /* @__PURE__ */ new Map(),
        validators: []
      });
    }
    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);
  });
  return currentClassPartObject;
};
var isThemeGetter = (func) => func.isThemeGetter;
var getPrefixedClassGroupEntries = (classGroupEntries, prefix) => {
  if (!prefix) {
    return classGroupEntries;
  }
  return classGroupEntries.map(([classGroupId, classGroup]) => {
    const prefixedClassGroup = classGroup.map((classDefinition) => {
      if (typeof classDefinition === "string") {
        return prefix + classDefinition;
      }
      if (typeof classDefinition === "object") {
        return Object.fromEntries(Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]));
      }
      return classDefinition;
    });
    return [classGroupId, prefixedClassGroup];
  });
};
var createLruCache = (maxCacheSize) => {
  if (maxCacheSize < 1) {
    return {
      get: () => void 0,
      set: () => {
      }
    };
  }
  let cacheSize = 0;
  let cache = /* @__PURE__ */ new Map();
  let previousCache = /* @__PURE__ */ new Map();
  const update = (key, value) => {
    cache.set(key, value);
    cacheSize++;
    if (cacheSize > maxCacheSize) {
      cacheSize = 0;
      previousCache = cache;
      cache = /* @__PURE__ */ new Map();
    }
  };
  return {
    get(key) {
      let value = cache.get(key);
      if (value !== void 0) {
        return value;
      }
      if ((value = previousCache.get(key)) !== void 0) {
        update(key, value);
        return value;
      }
    },
    set(key, value) {
      if (cache.has(key)) {
        cache.set(key, value);
      } else {
        update(key, value);
      }
    }
  };
};
var IMPORTANT_MODIFIER = "!";
var createParseClassName = (config2) => {
  const {
    separator,
    experimentalParseClassName
  } = config2;
  const isSeparatorSingleCharacter = separator.length === 1;
  const firstSeparatorCharacter = separator[0];
  const separatorLength = separator.length;
  const parseClassName = (className) => {
    const modifiers = [];
    let bracketDepth = 0;
    let modifierStart = 0;
    let postfixModifierPosition;
    for (let index2 = 0; index2 < className.length; index2++) {
      let currentCharacter = className[index2];
      if (bracketDepth === 0) {
        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index2, index2 + separatorLength) === separator)) {
          modifiers.push(className.slice(modifierStart, index2));
          modifierStart = index2 + separatorLength;
          continue;
        }
        if (currentCharacter === "/") {
          postfixModifierPosition = index2;
          continue;
        }
      }
      if (currentCharacter === "[") {
        bracketDepth++;
      } else if (currentCharacter === "]") {
        bracketDepth--;
      }
    }
    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);
    const hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);
    const baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;
    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : void 0;
    return {
      modifiers,
      hasImportantModifier,
      baseClassName,
      maybePostfixModifierPosition
    };
  };
  if (experimentalParseClassName) {
    return (className) => experimentalParseClassName({
      className,
      parseClassName
    });
  }
  return parseClassName;
};
var sortModifiers = (modifiers) => {
  if (modifiers.length <= 1) {
    return modifiers;
  }
  const sortedModifiers = [];
  let unsortedModifiers = [];
  modifiers.forEach((modifier) => {
    const isArbitraryVariant = modifier[0] === "[";
    if (isArbitraryVariant) {
      sortedModifiers.push(...unsortedModifiers.sort(), modifier);
      unsortedModifiers = [];
    } else {
      unsortedModifiers.push(modifier);
    }
  });
  sortedModifiers.push(...unsortedModifiers.sort());
  return sortedModifiers;
};
var createConfigUtils = (config2) => ({
  cache: createLruCache(config2.cacheSize),
  parseClassName: createParseClassName(config2),
  ...createClassGroupUtils(config2)
});
var SPLIT_CLASSES_REGEX = /\s+/;
var mergeClassList = (classList, configUtils) => {
  const {
    parseClassName,
    getClassGroupId,
    getConflictingClassGroupIds
  } = configUtils;
  const classGroupsInConflict = [];
  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);
  let result = "";
  for (let index2 = classNames.length - 1; index2 >= 0; index2 -= 1) {
    const originalClassName = classNames[index2];
    const {
      modifiers,
      hasImportantModifier,
      baseClassName,
      maybePostfixModifierPosition
    } = parseClassName(originalClassName);
    let hasPostfixModifier = Boolean(maybePostfixModifierPosition);
    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);
    if (!classGroupId) {
      if (!hasPostfixModifier) {
        result = originalClassName + (result.length > 0 ? " " + result : result);
        continue;
      }
      classGroupId = getClassGroupId(baseClassName);
      if (!classGroupId) {
        result = originalClassName + (result.length > 0 ? " " + result : result);
        continue;
      }
      hasPostfixModifier = false;
    }
    const variantModifier = sortModifiers(modifiers).join(":");
    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;
    const classId = modifierId + classGroupId;
    if (classGroupsInConflict.includes(classId)) {
      continue;
    }
    classGroupsInConflict.push(classId);
    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);
    for (let i = 0; i < conflictGroups.length; ++i) {
      const group = conflictGroups[i];
      classGroupsInConflict.push(modifierId + group);
    }
    result = originalClassName + (result.length > 0 ? " " + result : result);
  }
  return result;
};
function twJoin() {
  let index2 = 0;
  let argument;
  let resolvedValue;
  let string = "";
  while (index2 < arguments.length) {
    if (argument = arguments[index2++]) {
      if (resolvedValue = toValue(argument)) {
        string && (string += " ");
        string += resolvedValue;
      }
    }
  }
  return string;
}
var toValue = (mix) => {
  if (typeof mix === "string") {
    return mix;
  }
  let resolvedValue;
  let string = "";
  for (let k2 = 0; k2 < mix.length; k2++) {
    if (mix[k2]) {
      if (resolvedValue = toValue(mix[k2])) {
        string && (string += " ");
        string += resolvedValue;
      }
    }
  }
  return string;
};
function createTailwindMerge(createConfigFirst, ...createConfigRest) {
  let configUtils;
  let cacheGet;
  let cacheSet;
  let functionToCall = initTailwindMerge;
  function initTailwindMerge(classList) {
    const config2 = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());
    configUtils = createConfigUtils(config2);
    cacheGet = configUtils.cache.get;
    cacheSet = configUtils.cache.set;
    functionToCall = tailwindMerge;
    return tailwindMerge(classList);
  }
  function tailwindMerge(classList) {
    const cachedResult = cacheGet(classList);
    if (cachedResult) {
      return cachedResult;
    }
    const result = mergeClassList(classList, configUtils);
    cacheSet(classList, result);
    return result;
  }
  return function callTailwindMerge() {
    return functionToCall(twJoin.apply(null, arguments));
  };
}
var fromTheme = (key) => {
  const themeGetter = (theme) => theme[key] || [];
  themeGetter.isThemeGetter = true;
  return themeGetter;
};
var arbitraryValueRegex = /^\[(?:([a-z-]+):)?(.+)\]$/i;
var fractionRegex = /^\d+\/\d+$/;
var stringLengths = /* @__PURE__ */ new Set(["px", "full", "screen"]);
var tshirtUnitRegex = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/;
var lengthUnitRegex = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/;
var colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/;
var shadowRegex = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/;
var imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/;
var isLength = (value) => isNumber(value) || stringLengths.has(value) || fractionRegex.test(value);
var isArbitraryLength = (value) => getIsArbitraryValue(value, "length", isLengthOnly);
var isNumber = (value) => Boolean(value) && !Number.isNaN(Number(value));
var isArbitraryNumber = (value) => getIsArbitraryValue(value, "number", isNumber);
var isInteger = (value) => Boolean(value) && Number.isInteger(Number(value));
var isPercent = (value) => value.endsWith("%") && isNumber(value.slice(0, -1));
var isArbitraryValue = (value) => arbitraryValueRegex.test(value);
var isTshirtSize = (value) => tshirtUnitRegex.test(value);
var sizeLabels = /* @__PURE__ */ new Set(["length", "size", "percentage"]);
var isArbitrarySize = (value) => getIsArbitraryValue(value, sizeLabels, isNever);
var isArbitraryPosition = (value) => getIsArbitraryValue(value, "position", isNever);
var imageLabels = /* @__PURE__ */ new Set(["image", "url"]);
var isArbitraryImage = (value) => getIsArbitraryValue(value, imageLabels, isImage);
var isArbitraryShadow = (value) => getIsArbitraryValue(value, "", isShadow);
var isAny = () => true;
var getIsArbitraryValue = (value, label, testValue) => {
  const result = arbitraryValueRegex.exec(value);
  if (result) {
    if (result[1]) {
      return typeof label === "string" ? result[1] === label : label.has(result[1]);
    }
    return testValue(result[2]);
  }
  return false;
};
var isLengthOnly = (value) => (
  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
  lengthUnitRegex.test(value) && !colorFunctionRegex.test(value)
);
var isNever = () => false;
var isShadow = (value) => shadowRegex.test(value);
var isImage = (value) => imageRegex.test(value);
var validators = Object.defineProperty({
  __proto__: null,
  isAny,
  isArbitraryImage,
  isArbitraryLength,
  isArbitraryNumber,
  isArbitraryPosition,
  isArbitraryShadow,
  isArbitrarySize,
  isArbitraryValue,
  isInteger,
  isLength,
  isNumber,
  isPercent,
  isTshirtSize
}, Symbol.toStringTag, {
  value: "Module"
});
var getDefaultConfig = () => {
  const colors = fromTheme("colors");
  const spacing = fromTheme("spacing");
  const blur = fromTheme("blur");
  const brightness = fromTheme("brightness");
  const borderColor = fromTheme("borderColor");
  const borderRadius = fromTheme("borderRadius");
  const borderSpacing = fromTheme("borderSpacing");
  const borderWidth = fromTheme("borderWidth");
  const contrast = fromTheme("contrast");
  const grayscale = fromTheme("grayscale");
  const hueRotate = fromTheme("hueRotate");
  const invert = fromTheme("invert");
  const gap = fromTheme("gap");
  const gradientColorStops = fromTheme("gradientColorStops");
  const gradientColorStopPositions = fromTheme("gradientColorStopPositions");
  const inset = fromTheme("inset");
  const margin = fromTheme("margin");
  const opacity = fromTheme("opacity");
  const padding = fromTheme("padding");
  const saturate = fromTheme("saturate");
  const scale = fromTheme("scale");
  const sepia = fromTheme("sepia");
  const skew2 = fromTheme("skew");
  const space = fromTheme("space");
  const translate = fromTheme("translate");
  const getOverscroll = () => ["auto", "contain", "none"];
  const getOverflow = () => ["auto", "hidden", "clip", "visible", "scroll"];
  const getSpacingWithAutoAndArbitrary = () => ["auto", isArbitraryValue, spacing];
  const getSpacingWithArbitrary = () => [isArbitraryValue, spacing];
  const getLengthWithEmptyAndArbitrary = () => ["", isLength, isArbitraryLength];
  const getNumberWithAutoAndArbitrary = () => ["auto", isNumber, isArbitraryValue];
  const getPositions = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"];
  const getLineStyles = () => ["solid", "dashed", "dotted", "double", "none"];
  const getBlendModes = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"];
  const getAlign = () => ["start", "end", "center", "between", "around", "evenly", "stretch"];
  const getZeroAndEmpty = () => ["", "0", isArbitraryValue];
  const getBreaks = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"];
  const getNumberAndArbitrary = () => [isNumber, isArbitraryValue];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [isAny],
      spacing: [isLength, isArbitraryLength],
      blur: ["none", "", isTshirtSize, isArbitraryValue],
      brightness: getNumberAndArbitrary(),
      borderColor: [colors],
      borderRadius: ["none", "", "full", isTshirtSize, isArbitraryValue],
      borderSpacing: getSpacingWithArbitrary(),
      borderWidth: getLengthWithEmptyAndArbitrary(),
      contrast: getNumberAndArbitrary(),
      grayscale: getZeroAndEmpty(),
      hueRotate: getNumberAndArbitrary(),
      invert: getZeroAndEmpty(),
      gap: getSpacingWithArbitrary(),
      gradientColorStops: [colors],
      gradientColorStopPositions: [isPercent, isArbitraryLength],
      inset: getSpacingWithAutoAndArbitrary(),
      margin: getSpacingWithAutoAndArbitrary(),
      opacity: getNumberAndArbitrary(),
      padding: getSpacingWithArbitrary(),
      saturate: getNumberAndArbitrary(),
      scale: getNumberAndArbitrary(),
      sepia: getZeroAndEmpty(),
      skew: getNumberAndArbitrary(),
      space: getSpacingWithArbitrary(),
      translate: getSpacingWithArbitrary()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", isArbitraryValue]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [isTshirtSize]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": getBreaks()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": getBreaks()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...getPositions(), isArbitraryValue]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: getOverflow()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": getOverflow()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": getOverflow()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: getOverscroll()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": getOverscroll()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": getOverscroll()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [inset]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [inset]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [inset]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [inset]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [inset]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [inset]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [inset]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [inset]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [inset]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", isInteger, isArbitraryValue]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: getSpacingWithAutoAndArbitrary()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", isArbitraryValue]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: getZeroAndEmpty()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: getZeroAndEmpty()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", isInteger, isArbitraryValue]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [isAny]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", isInteger, isArbitraryValue]
        }, isArbitraryValue]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [isAny]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [isInteger, isArbitraryValue]
        }, isArbitraryValue]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", isArbitraryValue]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", isArbitraryValue]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [gap]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [gap]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [gap]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...getAlign()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...getAlign(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...getAlign(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [padding]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [padding]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [padding]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [padding]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [padding]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [padding]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [padding]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [padding]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [padding]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [margin]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [margin]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [margin]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [margin]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [margin]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [margin]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [margin]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [margin]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [margin]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [space]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [space]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", isArbitraryValue, spacing]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [isArbitraryValue, spacing, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [isArbitraryValue, spacing, "none", "full", "min", "max", "fit", "prose", {
          screen: [isTshirtSize]
        }, isTshirtSize]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [isArbitraryValue, spacing, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [isArbitraryValue, spacing, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [isArbitraryValue, spacing, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [isArbitraryValue, spacing, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", isTshirtSize, isArbitraryLength]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", isArbitraryNumber]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [isAny]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", isArbitraryValue]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", isNumber, isArbitraryNumber]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", isLength, isArbitraryValue]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", isArbitraryValue]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", isArbitraryValue]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [colors]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [opacity]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [colors]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [opacity]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...getLineStyles(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", isLength, isArbitraryLength]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", isLength, isArbitraryValue]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [colors]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: getSpacingWithArbitrary()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", isArbitraryValue]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", isArbitraryValue]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [opacity]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...getPositions(), isArbitraryPosition]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", isArbitrarySize]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, isArbitraryImage]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [colors]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [gradientColorStopPositions]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [gradientColorStopPositions]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [gradientColorStopPositions]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [gradientColorStops]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [gradientColorStops]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [gradientColorStops]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [borderRadius]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [borderRadius]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [borderRadius]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [borderRadius]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [borderRadius]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [borderRadius]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [borderRadius]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [borderRadius]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [borderRadius]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [borderRadius]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [borderRadius]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [borderRadius]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [borderRadius]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [borderRadius]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [borderRadius]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [borderWidth]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [borderWidth]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [borderWidth]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [borderWidth]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [borderWidth]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [borderWidth]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [borderWidth]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [borderWidth]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [borderWidth]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [opacity]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...getLineStyles(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [borderWidth]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [borderWidth]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [opacity]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: getLineStyles()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [borderColor]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [borderColor]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [borderColor]
      }],
      /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-s": [{
        "border-s": [borderColor]
      }],
      /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-e": [{
        "border-e": [borderColor]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [borderColor]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [borderColor]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [borderColor]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [borderColor]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [borderColor]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...getLineStyles()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [isLength, isArbitraryValue]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [isLength, isArbitraryLength]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [colors]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: getLengthWithEmptyAndArbitrary()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [colors]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [opacity]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [isLength, isArbitraryLength]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [colors]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", isTshirtSize, isArbitraryShadow]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [isAny]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [opacity]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...getBlendModes(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": getBlendModes()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [blur]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [brightness]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [contrast]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", isTshirtSize, isArbitraryValue]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [grayscale]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [hueRotate]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [invert]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [saturate]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [sepia]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [blur]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [brightness]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [contrast]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [grayscale]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [hueRotate]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [invert]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [opacity]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [saturate]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [sepia]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [borderSpacing]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [borderSpacing]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [borderSpacing]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", isArbitraryValue]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: getNumberAndArbitrary()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", isArbitraryValue]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: getNumberAndArbitrary()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", isArbitraryValue]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [scale]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [scale]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [scale]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [isInteger, isArbitraryValue]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [translate]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [translate]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [skew2]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [skew2]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", isArbitraryValue]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", colors]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", isArbitraryValue]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [colors]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", isArbitraryValue]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [colors, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [isLength, isArbitraryLength, isArbitraryNumber]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [colors, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-s", "border-color-e", "border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
};
var twMerge = createTailwindMerge(getDefaultConfig);

// ../../../node_modules/@radix-ui/react-checkbox/dist/index.mjs
var React13 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-use-previous/dist/index.mjs
var React11 = __toESM(require_react(), 1);
function usePrevious(value) {
  const ref = React11.useRef({ value, previous: value });
  return React11.useMemo(() => {
    if (ref.current.value !== value) {
      ref.current.previous = ref.current.value;
      ref.current.value = value;
    }
    return ref.current.previous;
  }, [value]);
}

// ../../../node_modules/@radix-ui/react-use-size/dist/index.mjs
var React12 = __toESM(require_react(), 1);
function useSize(element) {
  const [size4, setSize] = React12.useState(void 0);
  useLayoutEffect2(() => {
    if (element) {
      setSize({ width: element.offsetWidth, height: element.offsetHeight });
      const resizeObserver = new ResizeObserver((entries) => {
        if (!Array.isArray(entries)) {
          return;
        }
        if (!entries.length) {
          return;
        }
        const entry = entries[0];
        let width;
        let height;
        if ("borderBoxSize" in entry) {
          const borderSizeEntry = entry["borderBoxSize"];
          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;
          width = borderSize["inlineSize"];
          height = borderSize["blockSize"];
        } else {
          width = element.offsetWidth;
          height = element.offsetHeight;
        }
        setSize({ width, height });
      });
      resizeObserver.observe(element, { box: "border-box" });
      return () => resizeObserver.unobserve(element);
    } else {
      setSize(void 0);
    }
  }, [element]);
  return size4;
}

// ../../../node_modules/@radix-ui/react-checkbox/dist/index.mjs
var import_jsx_runtime5 = __toESM(require_jsx_runtime(), 1);
var CHECKBOX_NAME = "Checkbox";
var [createCheckboxContext, createCheckboxScope] = createContextScope(CHECKBOX_NAME);
var [CheckboxProviderImpl, useCheckboxContext] = createCheckboxContext(CHECKBOX_NAME);
function CheckboxProvider(props) {
  const {
    __scopeCheckbox,
    checked: checkedProp,
    children,
    defaultChecked,
    disabled,
    form,
    name,
    onCheckedChange,
    required,
    value = "on",
    // @ts-expect-error
    internal_do_not_use_render
  } = props;
  const [checked, setChecked] = useControllableState({
    prop: checkedProp,
    defaultProp: defaultChecked ?? false,
    onChange: onCheckedChange,
    caller: CHECKBOX_NAME
  });
  const [control, setControl] = React13.useState(null);
  const [bubbleInput, setBubbleInput] = React13.useState(null);
  const hasConsumerStoppedPropagationRef = React13.useRef(false);
  const isFormControl = control ? !!form || !!control.closest("form") : (
    // We set this to true by default so that events bubble to forms without JS (SSR)
    true
  );
  const context = {
    checked,
    disabled,
    setChecked,
    control,
    setControl,
    name,
    form,
    value,
    hasConsumerStoppedPropagationRef,
    required,
    defaultChecked: isIndeterminate(defaultChecked) ? false : defaultChecked,
    isFormControl,
    bubbleInput,
    setBubbleInput
  };
  return (0, import_jsx_runtime5.jsx)(
    CheckboxProviderImpl,
    {
      scope: __scopeCheckbox,
      ...context,
      children: isFunction2(internal_do_not_use_render) ? internal_do_not_use_render(context) : children
    }
  );
}
var TRIGGER_NAME2 = "CheckboxTrigger";
var CheckboxTrigger = React13.forwardRef(
  ({ __scopeCheckbox, onKeyDown, onClick, ...checkboxProps }, forwardedRef) => {
    const {
      control,
      value,
      disabled,
      checked,
      required,
      setControl,
      setChecked,
      hasConsumerStoppedPropagationRef,
      isFormControl,
      bubbleInput
    } = useCheckboxContext(TRIGGER_NAME2, __scopeCheckbox);
    const composedRefs = useComposedRefs(forwardedRef, setControl);
    const initialCheckedStateRef = React13.useRef(checked);
    React13.useEffect(() => {
      const form = control == null ? void 0 : control.form;
      if (form) {
        const reset = () => setChecked(initialCheckedStateRef.current);
        form.addEventListener("reset", reset);
        return () => form.removeEventListener("reset", reset);
      }
    }, [control, setChecked]);
    return (0, import_jsx_runtime5.jsx)(
      Primitive.button,
      {
        type: "button",
        role: "checkbox",
        "aria-checked": isIndeterminate(checked) ? "mixed" : checked,
        "aria-required": required,
        "data-state": getState2(checked),
        "data-disabled": disabled ? "" : void 0,
        disabled,
        value,
        ...checkboxProps,
        ref: composedRefs,
        onKeyDown: composeEventHandlers(onKeyDown, (event) => {
          if (event.key === "Enter") event.preventDefault();
        }),
        onClick: composeEventHandlers(onClick, (event) => {
          setChecked((prevChecked) => isIndeterminate(prevChecked) ? true : !prevChecked);
          if (bubbleInput && isFormControl) {
            hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
            if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();
          }
        })
      }
    );
  }
);
CheckboxTrigger.displayName = TRIGGER_NAME2;
var Checkbox = React13.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeCheckbox,
      name,
      checked,
      defaultChecked,
      required,
      disabled,
      value,
      onCheckedChange,
      form,
      ...checkboxProps
    } = props;
    return (0, import_jsx_runtime5.jsx)(
      CheckboxProvider,
      {
        __scopeCheckbox,
        checked,
        defaultChecked,
        disabled,
        required,
        onCheckedChange,
        name,
        form,
        value,
        internal_do_not_use_render: ({ isFormControl }) => (0, import_jsx_runtime5.jsxs)(import_jsx_runtime5.Fragment, { children: [
          (0, import_jsx_runtime5.jsx)(
            CheckboxTrigger,
            {
              ...checkboxProps,
              ref: forwardedRef,
              __scopeCheckbox
            }
          ),
          isFormControl && (0, import_jsx_runtime5.jsx)(
            CheckboxBubbleInput,
            {
              __scopeCheckbox
            }
          )
        ] })
      }
    );
  }
);
Checkbox.displayName = CHECKBOX_NAME;
var INDICATOR_NAME = "CheckboxIndicator";
var CheckboxIndicator = React13.forwardRef(
  (props, forwardedRef) => {
    const { __scopeCheckbox, forceMount, ...indicatorProps } = props;
    const context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox);
    return (0, import_jsx_runtime5.jsx)(
      Presence,
      {
        present: forceMount || isIndeterminate(context.checked) || context.checked === true,
        children: (0, import_jsx_runtime5.jsx)(
          Primitive.span,
          {
            "data-state": getState2(context.checked),
            "data-disabled": context.disabled ? "" : void 0,
            ...indicatorProps,
            ref: forwardedRef,
            style: { pointerEvents: "none", ...props.style }
          }
        )
      }
    );
  }
);
CheckboxIndicator.displayName = INDICATOR_NAME;
var BUBBLE_INPUT_NAME = "CheckboxBubbleInput";
var CheckboxBubbleInput = React13.forwardRef(
  ({ __scopeCheckbox, ...props }, forwardedRef) => {
    const {
      control,
      hasConsumerStoppedPropagationRef,
      checked,
      defaultChecked,
      required,
      disabled,
      name,
      value,
      form,
      bubbleInput,
      setBubbleInput
    } = useCheckboxContext(BUBBLE_INPUT_NAME, __scopeCheckbox);
    const composedRefs = useComposedRefs(forwardedRef, setBubbleInput);
    const prevChecked = usePrevious(checked);
    const controlSize = useSize(control);
    React13.useEffect(() => {
      const input = bubbleInput;
      if (!input) return;
      const inputProto = window.HTMLInputElement.prototype;
      const descriptor = Object.getOwnPropertyDescriptor(
        inputProto,
        "checked"
      );
      const setChecked = descriptor.set;
      const bubbles = !hasConsumerStoppedPropagationRef.current;
      if (prevChecked !== checked && setChecked) {
        const event = new Event("click", { bubbles });
        input.indeterminate = isIndeterminate(checked);
        setChecked.call(input, isIndeterminate(checked) ? false : checked);
        input.dispatchEvent(event);
      }
    }, [bubbleInput, prevChecked, checked, hasConsumerStoppedPropagationRef]);
    const defaultCheckedRef = React13.useRef(isIndeterminate(checked) ? false : checked);
    return (0, import_jsx_runtime5.jsx)(
      Primitive.input,
      {
        type: "checkbox",
        "aria-hidden": true,
        defaultChecked: defaultChecked ?? defaultCheckedRef.current,
        required,
        disabled,
        name,
        value,
        form,
        ...props,
        tabIndex: -1,
        ref: composedRefs,
        style: {
          ...props.style,
          ...controlSize,
          position: "absolute",
          pointerEvents: "none",
          opacity: 0,
          margin: 0,
          // We transform because the input is absolutely positioned but we have
          // rendered it **after** the button. This pulls it back to sit on top
          // of the button.
          transform: "translateX(-100%)"
        }
      }
    );
  }
);
CheckboxBubbleInput.displayName = BUBBLE_INPUT_NAME;
function isFunction2(value) {
  return typeof value === "function";
}
function isIndeterminate(checked) {
  return checked === "indeterminate";
}
function getState2(checked) {
  return isIndeterminate(checked) ? "indeterminate" : checked ? "checked" : "unchecked";
}

// ../../../node_modules/@firecms/ui/dist/index.es.js
import "/Users/ravimishra/node_modules/@material-design-icons/font/filled.css";

// ../../../node_modules/@radix-ui/react-dialog/dist/index.mjs
var React31 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs
var React16 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs
var React14 = __toESM(require_react(), 1);
function useCallbackRef(callback) {
  const callbackRef = React14.useRef(callback);
  React14.useEffect(() => {
    callbackRef.current = callback;
  });
  return React14.useMemo(() => (...args) => {
    var _a2;
    return (_a2 = callbackRef.current) == null ? void 0 : _a2.call(callbackRef, ...args);
  }, []);
}

// ../../../node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs
var React15 = __toESM(require_react(), 1);
function useEscapeKeydown(onEscapeKeyDownProp, ownerDocument = globalThis == null ? void 0 : globalThis.document) {
  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);
  React15.useEffect(() => {
    const handleKeyDown = (event) => {
      if (event.key === "Escape") {
        onEscapeKeyDown(event);
      }
    };
    ownerDocument.addEventListener("keydown", handleKeyDown, { capture: true });
    return () => ownerDocument.removeEventListener("keydown", handleKeyDown, { capture: true });
  }, [onEscapeKeyDown, ownerDocument]);
}

// ../../../node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs
var import_jsx_runtime6 = __toESM(require_jsx_runtime(), 1);
var DISMISSABLE_LAYER_NAME = "DismissableLayer";
var CONTEXT_UPDATE = "dismissableLayer.update";
var POINTER_DOWN_OUTSIDE = "dismissableLayer.pointerDownOutside";
var FOCUS_OUTSIDE = "dismissableLayer.focusOutside";
var originalBodyPointerEvents;
var DismissableLayerContext = React16.createContext({
  layers: /* @__PURE__ */ new Set(),
  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
  branches: /* @__PURE__ */ new Set()
});
var DismissableLayer = React16.forwardRef(
  (props, forwardedRef) => {
    const {
      disableOutsidePointerEvents = false,
      onEscapeKeyDown,
      onPointerDownOutside,
      onFocusOutside,
      onInteractOutside,
      onDismiss,
      ...layerProps
    } = props;
    const context = React16.useContext(DismissableLayerContext);
    const [node, setNode] = React16.useState(null);
    const ownerDocument = (node == null ? void 0 : node.ownerDocument) ?? (globalThis == null ? void 0 : globalThis.document);
    const [, force] = React16.useState({});
    const composedRefs = useComposedRefs(forwardedRef, (node2) => setNode(node2));
    const layers = Array.from(context.layers);
    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1);
    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled);
    const index2 = node ? layers.indexOf(node) : -1;
    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;
    const isPointerEventsEnabled = index2 >= highestLayerWithOutsidePointerEventsDisabledIndex;
    const pointerDownOutside = usePointerDownOutside((event) => {
      const target = event.target;
      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));
      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;
      onPointerDownOutside == null ? void 0 : onPointerDownOutside(event);
      onInteractOutside == null ? void 0 : onInteractOutside(event);
      if (!event.defaultPrevented) onDismiss == null ? void 0 : onDismiss();
    }, ownerDocument);
    const focusOutside = useFocusOutside((event) => {
      const target = event.target;
      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));
      if (isFocusInBranch) return;
      onFocusOutside == null ? void 0 : onFocusOutside(event);
      onInteractOutside == null ? void 0 : onInteractOutside(event);
      if (!event.defaultPrevented) onDismiss == null ? void 0 : onDismiss();
    }, ownerDocument);
    useEscapeKeydown((event) => {
      const isHighestLayer = index2 === context.layers.size - 1;
      if (!isHighestLayer) return;
      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(event);
      if (!event.defaultPrevented && onDismiss) {
        event.preventDefault();
        onDismiss();
      }
    }, ownerDocument);
    React16.useEffect(() => {
      if (!node) return;
      if (disableOutsidePointerEvents) {
        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {
          originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;
          ownerDocument.body.style.pointerEvents = "none";
        }
        context.layersWithOutsidePointerEventsDisabled.add(node);
      }
      context.layers.add(node);
      dispatchUpdate();
      return () => {
        if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1) {
          ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;
        }
      };
    }, [node, ownerDocument, disableOutsidePointerEvents, context]);
    React16.useEffect(() => {
      return () => {
        if (!node) return;
        context.layers.delete(node);
        context.layersWithOutsidePointerEventsDisabled.delete(node);
        dispatchUpdate();
      };
    }, [node, context]);
    React16.useEffect(() => {
      const handleUpdate = () => force({});
      document.addEventListener(CONTEXT_UPDATE, handleUpdate);
      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);
    }, []);
    return (0, import_jsx_runtime6.jsx)(
      Primitive.div,
      {
        ...layerProps,
        ref: composedRefs,
        style: {
          pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? "auto" : "none" : void 0,
          ...props.style
        },
        onFocusCapture: composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture),
        onBlurCapture: composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture),
        onPointerDownCapture: composeEventHandlers(
          props.onPointerDownCapture,
          pointerDownOutside.onPointerDownCapture
        )
      }
    );
  }
);
DismissableLayer.displayName = DISMISSABLE_LAYER_NAME;
var BRANCH_NAME = "DismissableLayerBranch";
var DismissableLayerBranch = React16.forwardRef((props, forwardedRef) => {
  const context = React16.useContext(DismissableLayerContext);
  const ref = React16.useRef(null);
  const composedRefs = useComposedRefs(forwardedRef, ref);
  React16.useEffect(() => {
    const node = ref.current;
    if (node) {
      context.branches.add(node);
      return () => {
        context.branches.delete(node);
      };
    }
  }, [context.branches]);
  return (0, import_jsx_runtime6.jsx)(Primitive.div, { ...props, ref: composedRefs });
});
DismissableLayerBranch.displayName = BRANCH_NAME;
function usePointerDownOutside(onPointerDownOutside, ownerDocument = globalThis == null ? void 0 : globalThis.document) {
  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside);
  const isPointerInsideReactTreeRef = React16.useRef(false);
  const handleClickRef = React16.useRef(() => {
  });
  React16.useEffect(() => {
    const handlePointerDown = (event) => {
      if (event.target && !isPointerInsideReactTreeRef.current) {
        let handleAndDispatchPointerDownOutsideEvent2 = function() {
          handleAndDispatchCustomEvent(
            POINTER_DOWN_OUTSIDE,
            handlePointerDownOutside,
            eventDetail,
            { discrete: true }
          );
        };
        var handleAndDispatchPointerDownOutsideEvent = handleAndDispatchPointerDownOutsideEvent2;
        const eventDetail = { originalEvent: event };
        if (event.pointerType === "touch") {
          ownerDocument.removeEventListener("click", handleClickRef.current);
          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent2;
          ownerDocument.addEventListener("click", handleClickRef.current, { once: true });
        } else {
          handleAndDispatchPointerDownOutsideEvent2();
        }
      } else {
        ownerDocument.removeEventListener("click", handleClickRef.current);
      }
      isPointerInsideReactTreeRef.current = false;
    };
    const timerId = window.setTimeout(() => {
      ownerDocument.addEventListener("pointerdown", handlePointerDown);
    }, 0);
    return () => {
      window.clearTimeout(timerId);
      ownerDocument.removeEventListener("pointerdown", handlePointerDown);
      ownerDocument.removeEventListener("click", handleClickRef.current);
    };
  }, [ownerDocument, handlePointerDownOutside]);
  return {
    // ensures we check React component tree (not just DOM tree)
    onPointerDownCapture: () => isPointerInsideReactTreeRef.current = true
  };
}
function useFocusOutside(onFocusOutside, ownerDocument = globalThis == null ? void 0 : globalThis.document) {
  const handleFocusOutside = useCallbackRef(onFocusOutside);
  const isFocusInsideReactTreeRef = React16.useRef(false);
  React16.useEffect(() => {
    const handleFocus = (event) => {
      if (event.target && !isFocusInsideReactTreeRef.current) {
        const eventDetail = { originalEvent: event };
        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {
          discrete: false
        });
      }
    };
    ownerDocument.addEventListener("focusin", handleFocus);
    return () => ownerDocument.removeEventListener("focusin", handleFocus);
  }, [ownerDocument, handleFocusOutside]);
  return {
    onFocusCapture: () => isFocusInsideReactTreeRef.current = true,
    onBlurCapture: () => isFocusInsideReactTreeRef.current = false
  };
}
function dispatchUpdate() {
  const event = new CustomEvent(CONTEXT_UPDATE);
  document.dispatchEvent(event);
}
function handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
  const target = detail.originalEvent.target;
  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });
  if (handler) target.addEventListener(name, handler, { once: true });
  if (discrete) {
    dispatchDiscreteCustomEvent(target, event);
  } else {
    target.dispatchEvent(event);
  }
}

// ../../../node_modules/@radix-ui/react-focus-scope/dist/index.mjs
var React17 = __toESM(require_react(), 1);
var import_jsx_runtime7 = __toESM(require_jsx_runtime(), 1);
var AUTOFOCUS_ON_MOUNT = "focusScope.autoFocusOnMount";
var AUTOFOCUS_ON_UNMOUNT = "focusScope.autoFocusOnUnmount";
var EVENT_OPTIONS = { bubbles: false, cancelable: true };
var FOCUS_SCOPE_NAME = "FocusScope";
var FocusScope = React17.forwardRef((props, forwardedRef) => {
  const {
    loop = false,
    trapped = false,
    onMountAutoFocus: onMountAutoFocusProp,
    onUnmountAutoFocus: onUnmountAutoFocusProp,
    ...scopeProps
  } = props;
  const [container, setContainer] = React17.useState(null);
  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);
  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);
  const lastFocusedElementRef = React17.useRef(null);
  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));
  const focusScope = React17.useRef({
    paused: false,
    pause() {
      this.paused = true;
    },
    resume() {
      this.paused = false;
    }
  }).current;
  React17.useEffect(() => {
    if (trapped) {
      let handleFocusIn2 = function(event) {
        if (focusScope.paused || !container) return;
        const target = event.target;
        if (container.contains(target)) {
          lastFocusedElementRef.current = target;
        } else {
          focus(lastFocusedElementRef.current, { select: true });
        }
      }, handleFocusOut2 = function(event) {
        if (focusScope.paused || !container) return;
        const relatedTarget = event.relatedTarget;
        if (relatedTarget === null) return;
        if (!container.contains(relatedTarget)) {
          focus(lastFocusedElementRef.current, { select: true });
        }
      }, handleMutations2 = function(mutations) {
        const focusedElement = document.activeElement;
        if (focusedElement !== document.body) return;
        for (const mutation of mutations) {
          if (mutation.removedNodes.length > 0) focus(container);
        }
      };
      var handleFocusIn = handleFocusIn2, handleFocusOut = handleFocusOut2, handleMutations = handleMutations2;
      document.addEventListener("focusin", handleFocusIn2);
      document.addEventListener("focusout", handleFocusOut2);
      const mutationObserver = new MutationObserver(handleMutations2);
      if (container) mutationObserver.observe(container, { childList: true, subtree: true });
      return () => {
        document.removeEventListener("focusin", handleFocusIn2);
        document.removeEventListener("focusout", handleFocusOut2);
        mutationObserver.disconnect();
      };
    }
  }, [trapped, container, focusScope.paused]);
  React17.useEffect(() => {
    if (container) {
      focusScopesStack.add(focusScope);
      const previouslyFocusedElement = document.activeElement;
      const hasFocusedCandidate = container.contains(previouslyFocusedElement);
      if (!hasFocusedCandidate) {
        const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);
        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
        container.dispatchEvent(mountEvent);
        if (!mountEvent.defaultPrevented) {
          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });
          if (document.activeElement === previouslyFocusedElement) {
            focus(container);
          }
        }
      }
      return () => {
        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
        setTimeout(() => {
          const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);
          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
          container.dispatchEvent(unmountEvent);
          if (!unmountEvent.defaultPrevented) {
            focus(previouslyFocusedElement ?? document.body, { select: true });
          }
          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
          focusScopesStack.remove(focusScope);
        }, 0);
      };
    }
  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);
  const handleKeyDown = React17.useCallback(
    (event) => {
      if (!loop && !trapped) return;
      if (focusScope.paused) return;
      const isTabKey = event.key === "Tab" && !event.altKey && !event.ctrlKey && !event.metaKey;
      const focusedElement = document.activeElement;
      if (isTabKey && focusedElement) {
        const container2 = event.currentTarget;
        const [first, last] = getTabbableEdges(container2);
        const hasTabbableElementsInside = first && last;
        if (!hasTabbableElementsInside) {
          if (focusedElement === container2) event.preventDefault();
        } else {
          if (!event.shiftKey && focusedElement === last) {
            event.preventDefault();
            if (loop) focus(first, { select: true });
          } else if (event.shiftKey && focusedElement === first) {
            event.preventDefault();
            if (loop) focus(last, { select: true });
          }
        }
      }
    },
    [loop, trapped, focusScope.paused]
  );
  return (0, import_jsx_runtime7.jsx)(Primitive.div, { tabIndex: -1, ...scopeProps, ref: composedRefs, onKeyDown: handleKeyDown });
});
FocusScope.displayName = FOCUS_SCOPE_NAME;
function focusFirst(candidates, { select = false } = {}) {
  const previouslyFocusedElement = document.activeElement;
  for (const candidate of candidates) {
    focus(candidate, { select });
    if (document.activeElement !== previouslyFocusedElement) return;
  }
}
function getTabbableEdges(container) {
  const candidates = getTabbableCandidates(container);
  const first = findVisible(candidates, container);
  const last = findVisible(candidates.reverse(), container);
  return [first, last];
}
function getTabbableCandidates(container) {
  const nodes = [];
  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;
      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  while (walker.nextNode()) nodes.push(walker.currentNode);
  return nodes;
}
function findVisible(elements, container) {
  for (const element of elements) {
    if (!isHidden(element, { upTo: container })) return element;
  }
}
function isHidden(node, { upTo }) {
  if (getComputedStyle(node).visibility === "hidden") return true;
  while (node) {
    if (upTo !== void 0 && node === upTo) return false;
    if (getComputedStyle(node).display === "none") return true;
    node = node.parentElement;
  }
  return false;
}
function isSelectableInput(element) {
  return element instanceof HTMLInputElement && "select" in element;
}
function focus(element, { select = false } = {}) {
  if (element && element.focus) {
    const previouslyFocusedElement = document.activeElement;
    element.focus({ preventScroll: true });
    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)
      element.select();
  }
}
var focusScopesStack = createFocusScopesStack();
function createFocusScopesStack() {
  let stack = [];
  return {
    add(focusScope) {
      const activeFocusScope = stack[0];
      if (focusScope !== activeFocusScope) {
        activeFocusScope == null ? void 0 : activeFocusScope.pause();
      }
      stack = arrayRemove(stack, focusScope);
      stack.unshift(focusScope);
    },
    remove(focusScope) {
      var _a2;
      stack = arrayRemove(stack, focusScope);
      (_a2 = stack[0]) == null ? void 0 : _a2.resume();
    }
  };
}
function arrayRemove(array, item) {
  const updatedArray = [...array];
  const index2 = updatedArray.indexOf(item);
  if (index2 !== -1) {
    updatedArray.splice(index2, 1);
  }
  return updatedArray;
}
function removeLinks(items) {
  return items.filter((item) => item.tagName !== "A");
}

// ../../../node_modules/@radix-ui/react-portal/dist/index.mjs
var React18 = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var import_jsx_runtime8 = __toESM(require_jsx_runtime(), 1);
var PORTAL_NAME = "Portal";
var Portal = React18.forwardRef((props, forwardedRef) => {
  var _a2;
  const { container: containerProp, ...portalProps } = props;
  const [mounted, setMounted] = React18.useState(false);
  useLayoutEffect2(() => setMounted(true), []);
  const container = containerProp || mounted && ((_a2 = globalThis == null ? void 0 : globalThis.document) == null ? void 0 : _a2.body);
  return container ? import_react_dom.default.createPortal((0, import_jsx_runtime8.jsx)(Primitive.div, { ...portalProps, ref: forwardedRef }), container) : null;
});
Portal.displayName = PORTAL_NAME;
var Root2 = Portal;

// ../../../node_modules/@radix-ui/react-focus-guards/dist/index.mjs
var React19 = __toESM(require_react(), 1);
var count2 = 0;
function useFocusGuards() {
  React19.useEffect(() => {
    const edgeGuards = document.querySelectorAll("[data-radix-focus-guard]");
    document.body.insertAdjacentElement("afterbegin", edgeGuards[0] ?? createFocusGuard());
    document.body.insertAdjacentElement("beforeend", edgeGuards[1] ?? createFocusGuard());
    count2++;
    return () => {
      if (count2 === 1) {
        document.querySelectorAll("[data-radix-focus-guard]").forEach((node) => node.remove());
      }
      count2--;
    };
  }, []);
}
function createFocusGuard() {
  const element = document.createElement("span");
  element.setAttribute("data-radix-focus-guard", "");
  element.tabIndex = 0;
  element.style.outline = "none";
  element.style.opacity = "0";
  element.style.position = "fixed";
  element.style.pointerEvents = "none";
  return element;
}

// ../../../node_modules/tslib/tslib.es6.mjs
var __assign = function() {
  __assign = Object.assign || function __assign2(t2) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p2 in s) if (Object.prototype.hasOwnProperty.call(s, p2)) t2[p2] = s[p2];
    }
    return t2;
  };
  return __assign.apply(this, arguments);
};
function __rest(s, e) {
  var t2 = {};
  for (var p2 in s) if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
    t2[p2] = s[p2];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
        t2[p2[i]] = s[p2[i]];
    }
  return t2;
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}

// ../../../node_modules/react-remove-scroll/dist/es2015/Combination.js
var React30 = __toESM(require_react());

// ../../../node_modules/react-remove-scroll/dist/es2015/UI.js
var React26 = __toESM(require_react());

// ../../../node_modules/react-remove-scroll-bar/dist/es2015/constants.js
var zeroRightClassName = "right-scroll-bar-position";
var fullWidthClassName = "width-before-scroll-bar";
var noScrollbarsClassName = "with-scroll-bars-hidden";
var removedBarSizeVariable = "--removed-body-scroll-bar-size";

// ../../../node_modules/use-callback-ref/dist/es2015/assignRef.js
function assignRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
  return ref;
}

// ../../../node_modules/use-callback-ref/dist/es2015/useRef.js
var import_react = __toESM(require_react());
function useCallbackRef2(initialValue, callback) {
  var ref = (0, import_react.useState)(function() {
    return {
      // value
      value: initialValue,
      // last callback
      callback,
      // "memoized" public interface
      facade: {
        get current() {
          return ref.value;
        },
        set current(value) {
          var last = ref.value;
          if (last !== value) {
            ref.value = value;
            ref.callback(value, last);
          }
        }
      }
    };
  })[0];
  ref.callback = callback;
  return ref.facade;
}

// ../../../node_modules/use-callback-ref/dist/es2015/useMergeRef.js
var React20 = __toESM(require_react());
var useIsomorphicLayoutEffect = typeof window !== "undefined" ? React20.useLayoutEffect : React20.useEffect;
var currentValues = /* @__PURE__ */ new WeakMap();
function useMergeRefs(refs, defaultValue) {
  var callbackRef = useCallbackRef2(defaultValue || null, function(newValue) {
    return refs.forEach(function(ref) {
      return assignRef(ref, newValue);
    });
  });
  useIsomorphicLayoutEffect(function() {
    var oldValue = currentValues.get(callbackRef);
    if (oldValue) {
      var prevRefs_1 = new Set(oldValue);
      var nextRefs_1 = new Set(refs);
      var current_1 = callbackRef.current;
      prevRefs_1.forEach(function(ref) {
        if (!nextRefs_1.has(ref)) {
          assignRef(ref, null);
        }
      });
      nextRefs_1.forEach(function(ref) {
        if (!prevRefs_1.has(ref)) {
          assignRef(ref, current_1);
        }
      });
    }
    currentValues.set(callbackRef, refs);
  }, [refs]);
  return callbackRef;
}

// ../../../node_modules/use-sidecar/dist/es2015/hoc.js
var React21 = __toESM(require_react());

// ../../../node_modules/use-sidecar/dist/es2015/hook.js
var import_react2 = __toESM(require_react());

// ../../../node_modules/use-sidecar/dist/es2015/medium.js
function ItoI(a2) {
  return a2;
}
function innerCreateMedium(defaults, middleware) {
  if (middleware === void 0) {
    middleware = ItoI;
  }
  var buffer = [];
  var assigned = false;
  var medium = {
    read: function() {
      if (assigned) {
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      }
      if (buffer.length) {
        return buffer[buffer.length - 1];
      }
      return defaults;
    },
    useMedium: function(data) {
      var item = middleware(data, assigned);
      buffer.push(item);
      return function() {
        buffer = buffer.filter(function(x) {
          return x !== item;
        });
      };
    },
    assignSyncMedium: function(cb) {
      assigned = true;
      while (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb);
      }
      buffer = {
        push: function(x) {
          return cb(x);
        },
        filter: function() {
          return buffer;
        }
      };
    },
    assignMedium: function(cb) {
      assigned = true;
      var pendingQueue = [];
      if (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb);
        pendingQueue = buffer;
      }
      var executeQueue = function() {
        var cbs2 = pendingQueue;
        pendingQueue = [];
        cbs2.forEach(cb);
      };
      var cycle = function() {
        return Promise.resolve().then(executeQueue);
      };
      cycle();
      buffer = {
        push: function(x) {
          pendingQueue.push(x);
          cycle();
        },
        filter: function(filter) {
          pendingQueue = pendingQueue.filter(filter);
          return buffer;
        }
      };
    }
  };
  return medium;
}
function createSidecarMedium(options) {
  if (options === void 0) {
    options = {};
  }
  var medium = innerCreateMedium(null);
  medium.options = __assign({ async: true, ssr: false }, options);
  return medium;
}

// ../../../node_modules/use-sidecar/dist/es2015/renderProp.js
var React24 = __toESM(require_react());
var import_react3 = __toESM(require_react());

// ../../../node_modules/use-sidecar/dist/es2015/exports.js
var React25 = __toESM(require_react());
var SideCar = function(_a2) {
  var sideCar = _a2.sideCar, rest = __rest(_a2, ["sideCar"]);
  if (!sideCar) {
    throw new Error("Sidecar: please provide `sideCar` property to import the right car");
  }
  var Target = sideCar.read();
  if (!Target) {
    throw new Error("Sidecar medium not found");
  }
  return React25.createElement(Target, __assign({}, rest));
};
SideCar.isSideCarExport = true;
function exportSidecar(medium, exported) {
  medium.useMedium(exported);
  return SideCar;
}

// ../../../node_modules/react-remove-scroll/dist/es2015/medium.js
var effectCar = createSidecarMedium();

// ../../../node_modules/react-remove-scroll/dist/es2015/UI.js
var nothing = function() {
  return;
};
var RemoveScroll = React26.forwardRef(function(props, parentRef) {
  var ref = React26.useRef(null);
  var _a2 = React26.useState({
    onScrollCapture: nothing,
    onWheelCapture: nothing,
    onTouchMoveCapture: nothing
  }), callbacks = _a2[0], setCallbacks = _a2[1];
  var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container2 = _b === void 0 ? "div" : _b, gapMode = props.gapMode, rest = __rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as", "gapMode"]);
  var SideCar2 = sideCar;
  var containerRef = useMergeRefs([ref, parentRef]);
  var containerProps = __assign(__assign({}, rest), callbacks);
  return React26.createElement(
    React26.Fragment,
    null,
    enabled && React26.createElement(SideCar2, { sideCar: effectCar, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref, gapMode }),
    forwardProps ? React26.cloneElement(React26.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef })) : React26.createElement(Container2, __assign({}, containerProps, { className, ref: containerRef }), children)
  );
});
RemoveScroll.defaultProps = {
  enabled: true,
  removeScrollBar: true,
  inert: false
};
RemoveScroll.classNames = {
  fullWidth: fullWidthClassName,
  zeroRight: zeroRightClassName
};

// ../../../node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var React29 = __toESM(require_react());

// ../../../node_modules/react-remove-scroll-bar/dist/es2015/component.js
var React28 = __toESM(require_react());

// ../../../node_modules/react-style-singleton/dist/es2015/hook.js
var React27 = __toESM(require_react());

// ../../../node_modules/get-nonce/dist/es2015/index.js
var currentNonce;
var getNonce = function() {
  if (currentNonce) {
    return currentNonce;
  }
  if (typeof __webpack_nonce__ !== "undefined") {
    return __webpack_nonce__;
  }
  return void 0;
};

// ../../../node_modules/react-style-singleton/dist/es2015/singleton.js
function makeStyleTag() {
  if (!document)
    return null;
  var tag = document.createElement("style");
  tag.type = "text/css";
  var nonce = getNonce();
  if (nonce) {
    tag.setAttribute("nonce", nonce);
  }
  return tag;
}
function injectStyles(tag, css) {
  if (tag.styleSheet) {
    tag.styleSheet.cssText = css;
  } else {
    tag.appendChild(document.createTextNode(css));
  }
}
function insertStyleTag(tag) {
  var head = document.head || document.getElementsByTagName("head")[0];
  head.appendChild(tag);
}
var stylesheetSingleton = function() {
  var counter = 0;
  var stylesheet = null;
  return {
    add: function(style) {
      if (counter == 0) {
        if (stylesheet = makeStyleTag()) {
          injectStyles(stylesheet, style);
          insertStyleTag(stylesheet);
        }
      }
      counter++;
    },
    remove: function() {
      counter--;
      if (!counter && stylesheet) {
        stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
        stylesheet = null;
      }
    }
  };
};

// ../../../node_modules/react-style-singleton/dist/es2015/hook.js
var styleHookSingleton = function() {
  var sheet = stylesheetSingleton();
  return function(styles2, isDynamic) {
    React27.useEffect(function() {
      sheet.add(styles2);
      return function() {
        sheet.remove();
      };
    }, [styles2 && isDynamic]);
  };
};

// ../../../node_modules/react-style-singleton/dist/es2015/component.js
var styleSingleton = function() {
  var useStyle = styleHookSingleton();
  var Sheet2 = function(_a2) {
    var styles2 = _a2.styles, dynamic = _a2.dynamic;
    useStyle(styles2, dynamic);
    return null;
  };
  return Sheet2;
};

// ../../../node_modules/react-remove-scroll-bar/dist/es2015/utils.js
var zeroGap = {
  left: 0,
  top: 0,
  right: 0,
  gap: 0
};
var parse = function(x) {
  return parseInt(x || "", 10) || 0;
};
var getOffset = function(gapMode) {
  var cs = window.getComputedStyle(document.body);
  var left = cs[gapMode === "padding" ? "paddingLeft" : "marginLeft"];
  var top = cs[gapMode === "padding" ? "paddingTop" : "marginTop"];
  var right = cs[gapMode === "padding" ? "paddingRight" : "marginRight"];
  return [parse(left), parse(top), parse(right)];
};
var getGapWidth = function(gapMode) {
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  if (typeof window === "undefined") {
    return zeroGap;
  }
  var offsets = getOffset(gapMode);
  var documentWidth = document.documentElement.clientWidth;
  var windowWidth = window.innerWidth;
  return {
    left: offsets[0],
    top: offsets[1],
    right: offsets[2],
    gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
  };
};

// ../../../node_modules/react-remove-scroll-bar/dist/es2015/component.js
var Style = styleSingleton();
var lockAttribute = "data-scroll-locked";
var getStyles = function(_a2, allowRelative, gapMode, important) {
  var left = _a2.left, top = _a2.top, right = _a2.right, gap = _a2.gap;
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  return "\n  .".concat(noScrollbarsClassName, " {\n   overflow: hidden ").concat(important, ";\n   padding-right: ").concat(gap, "px ").concat(important, ";\n  }\n  body[").concat(lockAttribute, "] {\n    overflow: hidden ").concat(important, ";\n    overscroll-behavior: contain;\n    ").concat([
    allowRelative && "position: relative ".concat(important, ";"),
    gapMode === "margin" && "\n    padding-left: ".concat(left, "px;\n    padding-top: ").concat(top, "px;\n    padding-right: ").concat(right, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(gap, "px ").concat(important, ";\n    "),
    gapMode === "padding" && "padding-right: ".concat(gap, "px ").concat(important, ";")
  ].filter(Boolean).join(""), "\n  }\n  \n  .").concat(zeroRightClassName, " {\n    right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " {\n    margin-right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(zeroRightClassName, " .").concat(zeroRightClassName, " {\n    right: 0 ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " .").concat(fullWidthClassName, " {\n    margin-right: 0 ").concat(important, ";\n  }\n  \n  body[").concat(lockAttribute, "] {\n    ").concat(removedBarSizeVariable, ": ").concat(gap, "px;\n  }\n");
};
var getCurrentUseCounter = function() {
  var counter = parseInt(document.body.getAttribute(lockAttribute) || "0", 10);
  return isFinite(counter) ? counter : 0;
};
var useLockAttribute = function() {
  React28.useEffect(function() {
    document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());
    return function() {
      var newCounter = getCurrentUseCounter() - 1;
      if (newCounter <= 0) {
        document.body.removeAttribute(lockAttribute);
      } else {
        document.body.setAttribute(lockAttribute, newCounter.toString());
      }
    };
  }, []);
};
var RemoveScrollBar = function(_a2) {
  var noRelative = _a2.noRelative, noImportant = _a2.noImportant, _b = _a2.gapMode, gapMode = _b === void 0 ? "margin" : _b;
  useLockAttribute();
  var gap = React28.useMemo(function() {
    return getGapWidth(gapMode);
  }, [gapMode]);
  return React28.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? "!important" : "") });
};

// ../../../node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js
var passiveSupported = false;
if (typeof window !== "undefined") {
  try {
    options = Object.defineProperty({}, "passive", {
      get: function() {
        passiveSupported = true;
        return true;
      }
    });
    window.addEventListener("test", options, options);
    window.removeEventListener("test", options, options);
  } catch (err) {
    passiveSupported = false;
  }
}
var options;
var nonPassive = passiveSupported ? { passive: false } : false;

// ../../../node_modules/react-remove-scroll/dist/es2015/handleScroll.js
var alwaysContainsScroll = function(node) {
  return node.tagName === "TEXTAREA";
};
var elementCanBeScrolled = function(node, overflow) {
  if (!(node instanceof Element)) {
    return false;
  }
  var styles2 = window.getComputedStyle(node);
  return (
    // not-not-scrollable
    styles2[overflow] !== "hidden" && // contains scroll inside self
    !(styles2.overflowY === styles2.overflowX && !alwaysContainsScroll(node) && styles2[overflow] === "visible")
  );
};
var elementCouldBeVScrolled = function(node) {
  return elementCanBeScrolled(node, "overflowY");
};
var elementCouldBeHScrolled = function(node) {
  return elementCanBeScrolled(node, "overflowX");
};
var locationCouldBeScrolled = function(axis, node) {
  var ownerDocument = node.ownerDocument;
  var current = node;
  do {
    if (typeof ShadowRoot !== "undefined" && current instanceof ShadowRoot) {
      current = current.host;
    }
    var isScrollable = elementCouldBeScrolled(axis, current);
    if (isScrollable) {
      var _a2 = getScrollVariables(axis, current), scrollHeight = _a2[1], clientHeight = _a2[2];
      if (scrollHeight > clientHeight) {
        return true;
      }
    }
    current = current.parentNode;
  } while (current && current !== ownerDocument.body);
  return false;
};
var getVScrollVariables = function(_a2) {
  var scrollTop = _a2.scrollTop, scrollHeight = _a2.scrollHeight, clientHeight = _a2.clientHeight;
  return [
    scrollTop,
    scrollHeight,
    clientHeight
  ];
};
var getHScrollVariables = function(_a2) {
  var scrollLeft = _a2.scrollLeft, scrollWidth = _a2.scrollWidth, clientWidth = _a2.clientWidth;
  return [
    scrollLeft,
    scrollWidth,
    clientWidth
  ];
};
var elementCouldBeScrolled = function(axis, node) {
  return axis === "v" ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
};
var getScrollVariables = function(axis, node) {
  return axis === "v" ? getVScrollVariables(node) : getHScrollVariables(node);
};
var getDirectionFactor = function(axis, direction) {
  return axis === "h" && direction === "rtl" ? -1 : 1;
};
var handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
  var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);
  var delta = directionFactor * sourceDelta;
  var target = event.target;
  var targetInLock = endTarget.contains(target);
  var shouldCancelScroll = false;
  var isDeltaPositive = delta > 0;
  var availableScroll = 0;
  var availableScrollTop = 0;
  do {
    var _a2 = getScrollVariables(axis, target), position = _a2[0], scroll_1 = _a2[1], capacity = _a2[2];
    var elementScroll = scroll_1 - capacity - directionFactor * position;
    if (position || elementScroll) {
      if (elementCouldBeScrolled(axis, target)) {
        availableScroll += elementScroll;
        availableScrollTop += position;
      }
    }
    if (target instanceof ShadowRoot) {
      target = target.host;
    } else {
      target = target.parentNode;
    }
  } while (
    // portaled content
    !targetInLock && target !== document.body || // self content
    targetInLock && (endTarget.contains(target) || endTarget === target)
  );
  if (isDeltaPositive && (noOverscroll && Math.abs(availableScroll) < 1 || !noOverscroll && delta > availableScroll)) {
    shouldCancelScroll = true;
  } else if (!isDeltaPositive && (noOverscroll && Math.abs(availableScrollTop) < 1 || !noOverscroll && -delta > availableScrollTop)) {
    shouldCancelScroll = true;
  }
  return shouldCancelScroll;
};

// ../../../node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var getTouchXY = function(event) {
  return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
};
var getDeltaXY = function(event) {
  return [event.deltaX, event.deltaY];
};
var extractRef = function(ref) {
  return ref && "current" in ref ? ref.current : ref;
};
var deltaCompare = function(x, y) {
  return x[0] === y[0] && x[1] === y[1];
};
var generateStyle = function(id) {
  return "\n  .block-interactivity-".concat(id, " {pointer-events: none;}\n  .allow-interactivity-").concat(id, " {pointer-events: all;}\n");
};
var idCounter = 0;
var lockStack = [];
function RemoveScrollSideCar(props) {
  var shouldPreventQueue = React29.useRef([]);
  var touchStartRef = React29.useRef([0, 0]);
  var activeAxis = React29.useRef();
  var id = React29.useState(idCounter++)[0];
  var Style2 = React29.useState(styleSingleton)[0];
  var lastProps = React29.useRef(props);
  React29.useEffect(function() {
    lastProps.current = props;
  }, [props]);
  React29.useEffect(function() {
    if (props.inert) {
      document.body.classList.add("block-interactivity-".concat(id));
      var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);
      allow_1.forEach(function(el) {
        return el.classList.add("allow-interactivity-".concat(id));
      });
      return function() {
        document.body.classList.remove("block-interactivity-".concat(id));
        allow_1.forEach(function(el) {
          return el.classList.remove("allow-interactivity-".concat(id));
        });
      };
    }
    return;
  }, [props.inert, props.lockRef.current, props.shards]);
  var shouldCancelEvent = React29.useCallback(function(event, parent) {
    if ("touches" in event && event.touches.length === 2 || event.type === "wheel" && event.ctrlKey) {
      return !lastProps.current.allowPinchZoom;
    }
    var touch = getTouchXY(event);
    var touchStart = touchStartRef.current;
    var deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0];
    var deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1];
    var currentAxis;
    var target = event.target;
    var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
    if ("touches" in event && moveDirection === "h" && target.type === "range") {
      return false;
    }
    var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    if (!canBeScrolledInMainDirection) {
      return true;
    }
    if (canBeScrolledInMainDirection) {
      currentAxis = moveDirection;
    } else {
      currentAxis = moveDirection === "v" ? "h" : "v";
      canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    }
    if (!canBeScrolledInMainDirection) {
      return false;
    }
    if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY)) {
      activeAxis.current = currentAxis;
    }
    if (!currentAxis) {
      return true;
    }
    var cancelingAxis = activeAxis.current || currentAxis;
    return handleScroll(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, true);
  }, []);
  var shouldPrevent = React29.useCallback(function(_event) {
    var event = _event;
    if (!lockStack.length || lockStack[lockStack.length - 1] !== Style2) {
      return;
    }
    var delta = "deltaY" in event ? getDeltaXY(event) : getTouchXY(event);
    var sourceEvent = shouldPreventQueue.current.filter(function(e) {
      return e.name === event.type && (e.target === event.target || event.target === e.shadowParent) && deltaCompare(e.delta, delta);
    })[0];
    if (sourceEvent && sourceEvent.should) {
      if (event.cancelable) {
        event.preventDefault();
      }
      return;
    }
    if (!sourceEvent) {
      var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function(node) {
        return node.contains(event.target);
      });
      var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
      if (shouldStop) {
        if (event.cancelable) {
          event.preventDefault();
        }
      }
    }
  }, []);
  var shouldCancel = React29.useCallback(function(name, delta, target, should) {
    var event = { name, delta, target, should, shadowParent: getOutermostShadowParent(target) };
    shouldPreventQueue.current.push(event);
    setTimeout(function() {
      shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e) {
        return e !== event;
      });
    }, 1);
  }, []);
  var scrollTouchStart = React29.useCallback(function(event) {
    touchStartRef.current = getTouchXY(event);
    activeAxis.current = void 0;
  }, []);
  var scrollWheel = React29.useCallback(function(event) {
    shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  var scrollTouchMove = React29.useCallback(function(event) {
    shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  React29.useEffect(function() {
    lockStack.push(Style2);
    props.setCallbacks({
      onScrollCapture: scrollWheel,
      onWheelCapture: scrollWheel,
      onTouchMoveCapture: scrollTouchMove
    });
    document.addEventListener("wheel", shouldPrevent, nonPassive);
    document.addEventListener("touchmove", shouldPrevent, nonPassive);
    document.addEventListener("touchstart", scrollTouchStart, nonPassive);
    return function() {
      lockStack = lockStack.filter(function(inst) {
        return inst !== Style2;
      });
      document.removeEventListener("wheel", shouldPrevent, nonPassive);
      document.removeEventListener("touchmove", shouldPrevent, nonPassive);
      document.removeEventListener("touchstart", scrollTouchStart, nonPassive);
    };
  }, []);
  var removeScrollBar = props.removeScrollBar, inert = props.inert;
  return React29.createElement(
    React29.Fragment,
    null,
    inert ? React29.createElement(Style2, { styles: generateStyle(id) }) : null,
    removeScrollBar ? React29.createElement(RemoveScrollBar, { gapMode: props.gapMode }) : null
  );
}
function getOutermostShadowParent(node) {
  var shadowParent = null;
  while (node !== null) {
    if (node instanceof ShadowRoot) {
      shadowParent = node.host;
      node = node.host;
    }
    node = node.parentNode;
  }
  return shadowParent;
}

// ../../../node_modules/react-remove-scroll/dist/es2015/sidecar.js
var sidecar_default = exportSidecar(effectCar, RemoveScrollSideCar);

// ../../../node_modules/react-remove-scroll/dist/es2015/Combination.js
var ReactRemoveScroll = React30.forwardRef(function(props, ref) {
  return React30.createElement(RemoveScroll, __assign({}, props, { ref, sideCar: sidecar_default }));
});
ReactRemoveScroll.classNames = RemoveScroll.classNames;
var Combination_default = ReactRemoveScroll;

// ../../../node_modules/aria-hidden/dist/es2015/index.js
var getDefaultParent = function(originalTarget) {
  if (typeof document === "undefined") {
    return null;
  }
  var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
  return sampleTarget.ownerDocument.body;
};
var counterMap = /* @__PURE__ */ new WeakMap();
var uncontrolledNodes = /* @__PURE__ */ new WeakMap();
var markerMap = {};
var lockCount = 0;
var unwrapHost = function(node) {
  return node && (node.host || unwrapHost(node.parentNode));
};
var correctTargets = function(parent, targets) {
  return targets.map(function(target) {
    if (parent.contains(target)) {
      return target;
    }
    var correctedTarget = unwrapHost(target);
    if (correctedTarget && parent.contains(correctedTarget)) {
      return correctedTarget;
    }
    console.error("aria-hidden", target, "in not contained inside", parent, ". Doing nothing");
    return null;
  }).filter(function(x) {
    return Boolean(x);
  });
};
var applyAttributeToOthers = function(originalTarget, parentNode, markerName, controlAttribute) {
  var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  if (!markerMap[markerName]) {
    markerMap[markerName] = /* @__PURE__ */ new WeakMap();
  }
  var markerCounter = markerMap[markerName];
  var hiddenNodes = [];
  var elementsToKeep = /* @__PURE__ */ new Set();
  var elementsToStop = new Set(targets);
  var keep = function(el) {
    if (!el || elementsToKeep.has(el)) {
      return;
    }
    elementsToKeep.add(el);
    keep(el.parentNode);
  };
  targets.forEach(keep);
  var deep = function(parent) {
    if (!parent || elementsToStop.has(parent)) {
      return;
    }
    Array.prototype.forEach.call(parent.children, function(node) {
      if (elementsToKeep.has(node)) {
        deep(node);
      } else {
        try {
          var attr = node.getAttribute(controlAttribute);
          var alreadyHidden = attr !== null && attr !== "false";
          var counterValue = (counterMap.get(node) || 0) + 1;
          var markerValue = (markerCounter.get(node) || 0) + 1;
          counterMap.set(node, counterValue);
          markerCounter.set(node, markerValue);
          hiddenNodes.push(node);
          if (counterValue === 1 && alreadyHidden) {
            uncontrolledNodes.set(node, true);
          }
          if (markerValue === 1) {
            node.setAttribute(markerName, "true");
          }
          if (!alreadyHidden) {
            node.setAttribute(controlAttribute, "true");
          }
        } catch (e) {
          console.error("aria-hidden: cannot operate on ", node, e);
        }
      }
    });
  };
  deep(parentNode);
  elementsToKeep.clear();
  lockCount++;
  return function() {
    hiddenNodes.forEach(function(node) {
      var counterValue = counterMap.get(node) - 1;
      var markerValue = markerCounter.get(node) - 1;
      counterMap.set(node, counterValue);
      markerCounter.set(node, markerValue);
      if (!counterValue) {
        if (!uncontrolledNodes.has(node)) {
          node.removeAttribute(controlAttribute);
        }
        uncontrolledNodes.delete(node);
      }
      if (!markerValue) {
        node.removeAttribute(markerName);
      }
    });
    lockCount--;
    if (!lockCount) {
      counterMap = /* @__PURE__ */ new WeakMap();
      counterMap = /* @__PURE__ */ new WeakMap();
      uncontrolledNodes = /* @__PURE__ */ new WeakMap();
      markerMap = {};
    }
  };
};
var hideOthers = function(originalTarget, parentNode, markerName) {
  if (markerName === void 0) {
    markerName = "data-aria-hidden";
  }
  var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  var activeParentNode = parentNode || getDefaultParent(originalTarget);
  if (!activeParentNode) {
    return function() {
      return null;
    };
  }
  targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll("[aria-live]")));
  return applyAttributeToOthers(targets, activeParentNode, markerName, "aria-hidden");
};

// ../../../node_modules/@radix-ui/react-dialog/dist/index.mjs
var import_jsx_runtime9 = __toESM(require_jsx_runtime(), 1);
var DIALOG_NAME = "Dialog";
var [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);
var [DialogProvider, useDialogContext] = createDialogContext(DIALOG_NAME);
var Dialog = (props) => {
  const {
    __scopeDialog,
    children,
    open: openProp,
    defaultOpen,
    onOpenChange,
    modal = true
  } = props;
  const triggerRef = React31.useRef(null);
  const contentRef = React31.useRef(null);
  const [open, setOpen] = useControllableState({
    prop: openProp,
    defaultProp: defaultOpen ?? false,
    onChange: onOpenChange,
    caller: DIALOG_NAME
  });
  return (0, import_jsx_runtime9.jsx)(
    DialogProvider,
    {
      scope: __scopeDialog,
      triggerRef,
      contentRef,
      contentId: useId(),
      titleId: useId(),
      descriptionId: useId(),
      open,
      onOpenChange: setOpen,
      onOpenToggle: React31.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),
      modal,
      children
    }
  );
};
Dialog.displayName = DIALOG_NAME;
var TRIGGER_NAME3 = "DialogTrigger";
var DialogTrigger = React31.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...triggerProps } = props;
    const context = useDialogContext(TRIGGER_NAME3, __scopeDialog);
    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);
    return (0, import_jsx_runtime9.jsx)(
      Primitive.button,
      {
        type: "button",
        "aria-haspopup": "dialog",
        "aria-expanded": context.open,
        "aria-controls": context.contentId,
        "data-state": getState3(context.open),
        ...triggerProps,
        ref: composedTriggerRef,
        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)
      }
    );
  }
);
DialogTrigger.displayName = TRIGGER_NAME3;
var PORTAL_NAME2 = "DialogPortal";
var [PortalProvider, usePortalContext] = createDialogContext(PORTAL_NAME2, {
  forceMount: void 0
});
var DialogPortal = (props) => {
  const { __scopeDialog, forceMount, children, container } = props;
  const context = useDialogContext(PORTAL_NAME2, __scopeDialog);
  return (0, import_jsx_runtime9.jsx)(PortalProvider, { scope: __scopeDialog, forceMount, children: React31.Children.map(children, (child) => (0, import_jsx_runtime9.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime9.jsx)(Portal, { asChild: true, container, children: child }) })) });
};
DialogPortal.displayName = PORTAL_NAME2;
var OVERLAY_NAME = "DialogOverlay";
var DialogOverlay = React31.forwardRef(
  (props, forwardedRef) => {
    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);
    const { forceMount = portalContext.forceMount, ...overlayProps } = props;
    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);
    return context.modal ? (0, import_jsx_runtime9.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime9.jsx)(DialogOverlayImpl, { ...overlayProps, ref: forwardedRef }) }) : null;
  }
);
DialogOverlay.displayName = OVERLAY_NAME;
var Slot2 = createSlot("DialogOverlay.RemoveScroll");
var DialogOverlayImpl = React31.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...overlayProps } = props;
    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);
    return (
      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
      // ie. when `Overlay` and `Content` are siblings
      (0, import_jsx_runtime9.jsx)(Combination_default, { as: Slot2, allowPinchZoom: true, shards: [context.contentRef], children: (0, import_jsx_runtime9.jsx)(
        Primitive.div,
        {
          "data-state": getState3(context.open),
          ...overlayProps,
          ref: forwardedRef,
          style: { pointerEvents: "auto", ...overlayProps.style }
        }
      ) })
    );
  }
);
var CONTENT_NAME2 = "DialogContent";
var DialogContent = React31.forwardRef(
  (props, forwardedRef) => {
    const portalContext = usePortalContext(CONTENT_NAME2, props.__scopeDialog);
    const { forceMount = portalContext.forceMount, ...contentProps } = props;
    const context = useDialogContext(CONTENT_NAME2, props.__scopeDialog);
    return (0, import_jsx_runtime9.jsx)(Presence, { present: forceMount || context.open, children: context.modal ? (0, import_jsx_runtime9.jsx)(DialogContentModal, { ...contentProps, ref: forwardedRef }) : (0, import_jsx_runtime9.jsx)(DialogContentNonModal, { ...contentProps, ref: forwardedRef }) });
  }
);
DialogContent.displayName = CONTENT_NAME2;
var DialogContentModal = React31.forwardRef(
  (props, forwardedRef) => {
    const context = useDialogContext(CONTENT_NAME2, props.__scopeDialog);
    const contentRef = React31.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);
    React31.useEffect(() => {
      const content = contentRef.current;
      if (content) return hideOthers(content);
    }, []);
    return (0, import_jsx_runtime9.jsx)(
      DialogContentImpl,
      {
        ...props,
        ref: composedRefs,
        trapFocus: context.open,
        disableOutsidePointerEvents: true,
        onCloseAutoFocus: composeEventHandlers(props.onCloseAutoFocus, (event) => {
          var _a2;
          event.preventDefault();
          (_a2 = context.triggerRef.current) == null ? void 0 : _a2.focus();
        }),
        onPointerDownOutside: composeEventHandlers(props.onPointerDownOutside, (event) => {
          const originalEvent = event.detail.originalEvent;
          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
          if (isRightClick) event.preventDefault();
        }),
        onFocusOutside: composeEventHandlers(
          props.onFocusOutside,
          (event) => event.preventDefault()
        )
      }
    );
  }
);
var DialogContentNonModal = React31.forwardRef(
  (props, forwardedRef) => {
    const context = useDialogContext(CONTENT_NAME2, props.__scopeDialog);
    const hasInteractedOutsideRef = React31.useRef(false);
    const hasPointerDownOutsideRef = React31.useRef(false);
    return (0, import_jsx_runtime9.jsx)(
      DialogContentImpl,
      {
        ...props,
        ref: forwardedRef,
        trapFocus: false,
        disableOutsidePointerEvents: false,
        onCloseAutoFocus: (event) => {
          var _a2, _b;
          (_a2 = props.onCloseAutoFocus) == null ? void 0 : _a2.call(props, event);
          if (!event.defaultPrevented) {
            if (!hasInteractedOutsideRef.current) (_b = context.triggerRef.current) == null ? void 0 : _b.focus();
            event.preventDefault();
          }
          hasInteractedOutsideRef.current = false;
          hasPointerDownOutsideRef.current = false;
        },
        onInteractOutside: (event) => {
          var _a2, _b;
          (_a2 = props.onInteractOutside) == null ? void 0 : _a2.call(props, event);
          if (!event.defaultPrevented) {
            hasInteractedOutsideRef.current = true;
            if (event.detail.originalEvent.type === "pointerdown") {
              hasPointerDownOutsideRef.current = true;
            }
          }
          const target = event.target;
          const targetIsTrigger = (_b = context.triggerRef.current) == null ? void 0 : _b.contains(target);
          if (targetIsTrigger) event.preventDefault();
          if (event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current) {
            event.preventDefault();
          }
        }
      }
    );
  }
);
var DialogContentImpl = React31.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;
    const context = useDialogContext(CONTENT_NAME2, __scopeDialog);
    const contentRef = React31.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, contentRef);
    useFocusGuards();
    return (0, import_jsx_runtime9.jsxs)(import_jsx_runtime9.Fragment, { children: [
      (0, import_jsx_runtime9.jsx)(
        FocusScope,
        {
          asChild: true,
          loop: true,
          trapped: trapFocus,
          onMountAutoFocus: onOpenAutoFocus,
          onUnmountAutoFocus: onCloseAutoFocus,
          children: (0, import_jsx_runtime9.jsx)(
            DismissableLayer,
            {
              role: "dialog",
              id: context.contentId,
              "aria-describedby": context.descriptionId,
              "aria-labelledby": context.titleId,
              "data-state": getState3(context.open),
              ...contentProps,
              ref: composedRefs,
              onDismiss: () => context.onOpenChange(false)
            }
          )
        }
      ),
      (0, import_jsx_runtime9.jsxs)(import_jsx_runtime9.Fragment, { children: [
        (0, import_jsx_runtime9.jsx)(TitleWarning, { titleId: context.titleId }),
        (0, import_jsx_runtime9.jsx)(DescriptionWarning, { contentRef, descriptionId: context.descriptionId })
      ] })
    ] });
  }
);
var TITLE_NAME = "DialogTitle";
var DialogTitle = React31.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...titleProps } = props;
    const context = useDialogContext(TITLE_NAME, __scopeDialog);
    return (0, import_jsx_runtime9.jsx)(Primitive.h2, { id: context.titleId, ...titleProps, ref: forwardedRef });
  }
);
DialogTitle.displayName = TITLE_NAME;
var DESCRIPTION_NAME = "DialogDescription";
var DialogDescription = React31.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...descriptionProps } = props;
    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);
    return (0, import_jsx_runtime9.jsx)(Primitive.p, { id: context.descriptionId, ...descriptionProps, ref: forwardedRef });
  }
);
DialogDescription.displayName = DESCRIPTION_NAME;
var CLOSE_NAME = "DialogClose";
var DialogClose = React31.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDialog, ...closeProps } = props;
    const context = useDialogContext(CLOSE_NAME, __scopeDialog);
    return (0, import_jsx_runtime9.jsx)(
      Primitive.button,
      {
        type: "button",
        ...closeProps,
        ref: forwardedRef,
        onClick: composeEventHandlers(props.onClick, () => context.onOpenChange(false))
      }
    );
  }
);
DialogClose.displayName = CLOSE_NAME;
function getState3(open) {
  return open ? "open" : "closed";
}
var TITLE_WARNING_NAME = "DialogTitleWarning";
var [WarningProvider, useWarningContext] = createContext2(TITLE_WARNING_NAME, {
  contentName: CONTENT_NAME2,
  titleName: TITLE_NAME,
  docsSlug: "dialog"
});
var TitleWarning = ({ titleId }) => {
  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);
  const MESSAGE = `\`${titleWarningContext.contentName}\` requires a \`${titleWarningContext.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${titleWarningContext.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;
  React31.useEffect(() => {
    if (titleId) {
      const hasTitle = document.getElementById(titleId);
      if (!hasTitle) console.error(MESSAGE);
    }
  }, [MESSAGE, titleId]);
  return null;
};
var DESCRIPTION_WARNING_NAME = "DialogDescriptionWarning";
var DescriptionWarning = ({ contentRef, descriptionId }) => {
  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);
  const MESSAGE = `Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${descriptionWarningContext.contentName}}.`;
  React31.useEffect(() => {
    var _a2;
    const describedById = (_a2 = contentRef.current) == null ? void 0 : _a2.getAttribute("aria-describedby");
    if (descriptionId && describedById) {
      const hasDescription = document.getElementById(descriptionId);
      if (!hasDescription) console.warn(MESSAGE);
    }
  }, [MESSAGE, contentRef, descriptionId]);
  return null;
};
var Root3 = Dialog;
var Portal2 = DialogPortal;
var Overlay = DialogOverlay;
var Content2 = DialogContent;
var Title = DialogTitle;

// ../../../node_modules/@radix-ui/react-visually-hidden/dist/index.mjs
var React32 = __toESM(require_react(), 1);
var import_jsx_runtime10 = __toESM(require_jsx_runtime(), 1);
var VISUALLY_HIDDEN_STYLES = Object.freeze({
  // See: https://github.com/twbs/bootstrap/blob/main/scss/mixins/_visually-hidden.scss
  position: "absolute",
  border: 0,
  width: 1,
  height: 1,
  padding: 0,
  margin: -1,
  overflow: "hidden",
  clip: "rect(0, 0, 0, 0)",
  whiteSpace: "nowrap",
  wordWrap: "normal"
});
var NAME = "VisuallyHidden";
var VisuallyHidden = React32.forwardRef(
  (props, forwardedRef) => {
    return (0, import_jsx_runtime10.jsx)(
      Primitive.span,
      {
        ...props,
        ref: forwardedRef,
        style: { ...VISUALLY_HIDDEN_STYLES, ...props.style }
      }
    );
  }
);
VisuallyHidden.displayName = NAME;
var Root4 = VisuallyHidden;

// ../../../node_modules/react-dropzone/dist/es/index.js
var import_react4 = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());

// ../../../node_modules/file-selector/dist/es2015/file.js
var COMMON_MIME_TYPES = /* @__PURE__ */ new Map([
  // https://github.com/guzzle/psr7/blob/2d9260799e713f1c475d3c5fdc3d6561ff7441b2/src/MimeType.php
  ["1km", "application/vnd.1000minds.decision-model+xml"],
  ["3dml", "text/vnd.in3d.3dml"],
  ["3ds", "image/x-3ds"],
  ["3g2", "video/3gpp2"],
  ["3gp", "video/3gp"],
  ["3gpp", "video/3gpp"],
  ["3mf", "model/3mf"],
  ["7z", "application/x-7z-compressed"],
  ["7zip", "application/x-7z-compressed"],
  ["123", "application/vnd.lotus-1-2-3"],
  ["aab", "application/x-authorware-bin"],
  ["aac", "audio/x-acc"],
  ["aam", "application/x-authorware-map"],
  ["aas", "application/x-authorware-seg"],
  ["abw", "application/x-abiword"],
  ["ac", "application/vnd.nokia.n-gage.ac+xml"],
  ["ac3", "audio/ac3"],
  ["acc", "application/vnd.americandynamics.acc"],
  ["ace", "application/x-ace-compressed"],
  ["acu", "application/vnd.acucobol"],
  ["acutc", "application/vnd.acucorp"],
  ["adp", "audio/adpcm"],
  ["aep", "application/vnd.audiograph"],
  ["afm", "application/x-font-type1"],
  ["afp", "application/vnd.ibm.modcap"],
  ["ahead", "application/vnd.ahead.space"],
  ["ai", "application/pdf"],
  ["aif", "audio/x-aiff"],
  ["aifc", "audio/x-aiff"],
  ["aiff", "audio/x-aiff"],
  ["air", "application/vnd.adobe.air-application-installer-package+zip"],
  ["ait", "application/vnd.dvb.ait"],
  ["ami", "application/vnd.amiga.ami"],
  ["amr", "audio/amr"],
  ["apk", "application/vnd.android.package-archive"],
  ["apng", "image/apng"],
  ["appcache", "text/cache-manifest"],
  ["application", "application/x-ms-application"],
  ["apr", "application/vnd.lotus-approach"],
  ["arc", "application/x-freearc"],
  ["arj", "application/x-arj"],
  ["asc", "application/pgp-signature"],
  ["asf", "video/x-ms-asf"],
  ["asm", "text/x-asm"],
  ["aso", "application/vnd.accpac.simply.aso"],
  ["asx", "video/x-ms-asf"],
  ["atc", "application/vnd.acucorp"],
  ["atom", "application/atom+xml"],
  ["atomcat", "application/atomcat+xml"],
  ["atomdeleted", "application/atomdeleted+xml"],
  ["atomsvc", "application/atomsvc+xml"],
  ["atx", "application/vnd.antix.game-component"],
  ["au", "audio/x-au"],
  ["avi", "video/x-msvideo"],
  ["avif", "image/avif"],
  ["aw", "application/applixware"],
  ["azf", "application/vnd.airzip.filesecure.azf"],
  ["azs", "application/vnd.airzip.filesecure.azs"],
  ["azv", "image/vnd.airzip.accelerator.azv"],
  ["azw", "application/vnd.amazon.ebook"],
  ["b16", "image/vnd.pco.b16"],
  ["bat", "application/x-msdownload"],
  ["bcpio", "application/x-bcpio"],
  ["bdf", "application/x-font-bdf"],
  ["bdm", "application/vnd.syncml.dm+wbxml"],
  ["bdoc", "application/x-bdoc"],
  ["bed", "application/vnd.realvnc.bed"],
  ["bh2", "application/vnd.fujitsu.oasysprs"],
  ["bin", "application/octet-stream"],
  ["blb", "application/x-blorb"],
  ["blorb", "application/x-blorb"],
  ["bmi", "application/vnd.bmi"],
  ["bmml", "application/vnd.balsamiq.bmml+xml"],
  ["bmp", "image/bmp"],
  ["book", "application/vnd.framemaker"],
  ["box", "application/vnd.previewsystems.box"],
  ["boz", "application/x-bzip2"],
  ["bpk", "application/octet-stream"],
  ["bpmn", "application/octet-stream"],
  ["bsp", "model/vnd.valve.source.compiled-map"],
  ["btif", "image/prs.btif"],
  ["buffer", "application/octet-stream"],
  ["bz", "application/x-bzip"],
  ["bz2", "application/x-bzip2"],
  ["c", "text/x-c"],
  ["c4d", "application/vnd.clonk.c4group"],
  ["c4f", "application/vnd.clonk.c4group"],
  ["c4g", "application/vnd.clonk.c4group"],
  ["c4p", "application/vnd.clonk.c4group"],
  ["c4u", "application/vnd.clonk.c4group"],
  ["c11amc", "application/vnd.cluetrust.cartomobile-config"],
  ["c11amz", "application/vnd.cluetrust.cartomobile-config-pkg"],
  ["cab", "application/vnd.ms-cab-compressed"],
  ["caf", "audio/x-caf"],
  ["cap", "application/vnd.tcpdump.pcap"],
  ["car", "application/vnd.curl.car"],
  ["cat", "application/vnd.ms-pki.seccat"],
  ["cb7", "application/x-cbr"],
  ["cba", "application/x-cbr"],
  ["cbr", "application/x-cbr"],
  ["cbt", "application/x-cbr"],
  ["cbz", "application/x-cbr"],
  ["cc", "text/x-c"],
  ["cco", "application/x-cocoa"],
  ["cct", "application/x-director"],
  ["ccxml", "application/ccxml+xml"],
  ["cdbcmsg", "application/vnd.contact.cmsg"],
  ["cda", "application/x-cdf"],
  ["cdf", "application/x-netcdf"],
  ["cdfx", "application/cdfx+xml"],
  ["cdkey", "application/vnd.mediastation.cdkey"],
  ["cdmia", "application/cdmi-capability"],
  ["cdmic", "application/cdmi-container"],
  ["cdmid", "application/cdmi-domain"],
  ["cdmio", "application/cdmi-object"],
  ["cdmiq", "application/cdmi-queue"],
  ["cdr", "application/cdr"],
  ["cdx", "chemical/x-cdx"],
  ["cdxml", "application/vnd.chemdraw+xml"],
  ["cdy", "application/vnd.cinderella"],
  ["cer", "application/pkix-cert"],
  ["cfs", "application/x-cfs-compressed"],
  ["cgm", "image/cgm"],
  ["chat", "application/x-chat"],
  ["chm", "application/vnd.ms-htmlhelp"],
  ["chrt", "application/vnd.kde.kchart"],
  ["cif", "chemical/x-cif"],
  ["cii", "application/vnd.anser-web-certificate-issue-initiation"],
  ["cil", "application/vnd.ms-artgalry"],
  ["cjs", "application/node"],
  ["cla", "application/vnd.claymore"],
  ["class", "application/octet-stream"],
  ["clkk", "application/vnd.crick.clicker.keyboard"],
  ["clkp", "application/vnd.crick.clicker.palette"],
  ["clkt", "application/vnd.crick.clicker.template"],
  ["clkw", "application/vnd.crick.clicker.wordbank"],
  ["clkx", "application/vnd.crick.clicker"],
  ["clp", "application/x-msclip"],
  ["cmc", "application/vnd.cosmocaller"],
  ["cmdf", "chemical/x-cmdf"],
  ["cml", "chemical/x-cml"],
  ["cmp", "application/vnd.yellowriver-custom-menu"],
  ["cmx", "image/x-cmx"],
  ["cod", "application/vnd.rim.cod"],
  ["coffee", "text/coffeescript"],
  ["com", "application/x-msdownload"],
  ["conf", "text/plain"],
  ["cpio", "application/x-cpio"],
  ["cpp", "text/x-c"],
  ["cpt", "application/mac-compactpro"],
  ["crd", "application/x-mscardfile"],
  ["crl", "application/pkix-crl"],
  ["crt", "application/x-x509-ca-cert"],
  ["crx", "application/x-chrome-extension"],
  ["cryptonote", "application/vnd.rig.cryptonote"],
  ["csh", "application/x-csh"],
  ["csl", "application/vnd.citationstyles.style+xml"],
  ["csml", "chemical/x-csml"],
  ["csp", "application/vnd.commonspace"],
  ["csr", "application/octet-stream"],
  ["css", "text/css"],
  ["cst", "application/x-director"],
  ["csv", "text/csv"],
  ["cu", "application/cu-seeme"],
  ["curl", "text/vnd.curl"],
  ["cww", "application/prs.cww"],
  ["cxt", "application/x-director"],
  ["cxx", "text/x-c"],
  ["dae", "model/vnd.collada+xml"],
  ["daf", "application/vnd.mobius.daf"],
  ["dart", "application/vnd.dart"],
  ["dataless", "application/vnd.fdsn.seed"],
  ["davmount", "application/davmount+xml"],
  ["dbf", "application/vnd.dbf"],
  ["dbk", "application/docbook+xml"],
  ["dcr", "application/x-director"],
  ["dcurl", "text/vnd.curl.dcurl"],
  ["dd2", "application/vnd.oma.dd2+xml"],
  ["ddd", "application/vnd.fujixerox.ddd"],
  ["ddf", "application/vnd.syncml.dmddf+xml"],
  ["dds", "image/vnd.ms-dds"],
  ["deb", "application/x-debian-package"],
  ["def", "text/plain"],
  ["deploy", "application/octet-stream"],
  ["der", "application/x-x509-ca-cert"],
  ["dfac", "application/vnd.dreamfactory"],
  ["dgc", "application/x-dgc-compressed"],
  ["dic", "text/x-c"],
  ["dir", "application/x-director"],
  ["dis", "application/vnd.mobius.dis"],
  ["disposition-notification", "message/disposition-notification"],
  ["dist", "application/octet-stream"],
  ["distz", "application/octet-stream"],
  ["djv", "image/vnd.djvu"],
  ["djvu", "image/vnd.djvu"],
  ["dll", "application/octet-stream"],
  ["dmg", "application/x-apple-diskimage"],
  ["dmn", "application/octet-stream"],
  ["dmp", "application/vnd.tcpdump.pcap"],
  ["dms", "application/octet-stream"],
  ["dna", "application/vnd.dna"],
  ["doc", "application/msword"],
  ["docm", "application/vnd.ms-word.template.macroEnabled.12"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
  ["dot", "application/msword"],
  ["dotm", "application/vnd.ms-word.template.macroEnabled.12"],
  ["dotx", "application/vnd.openxmlformats-officedocument.wordprocessingml.template"],
  ["dp", "application/vnd.osgi.dp"],
  ["dpg", "application/vnd.dpgraph"],
  ["dra", "audio/vnd.dra"],
  ["drle", "image/dicom-rle"],
  ["dsc", "text/prs.lines.tag"],
  ["dssc", "application/dssc+der"],
  ["dtb", "application/x-dtbook+xml"],
  ["dtd", "application/xml-dtd"],
  ["dts", "audio/vnd.dts"],
  ["dtshd", "audio/vnd.dts.hd"],
  ["dump", "application/octet-stream"],
  ["dvb", "video/vnd.dvb.file"],
  ["dvi", "application/x-dvi"],
  ["dwd", "application/atsc-dwd+xml"],
  ["dwf", "model/vnd.dwf"],
  ["dwg", "image/vnd.dwg"],
  ["dxf", "image/vnd.dxf"],
  ["dxp", "application/vnd.spotfire.dxp"],
  ["dxr", "application/x-director"],
  ["ear", "application/java-archive"],
  ["ecelp4800", "audio/vnd.nuera.ecelp4800"],
  ["ecelp7470", "audio/vnd.nuera.ecelp7470"],
  ["ecelp9600", "audio/vnd.nuera.ecelp9600"],
  ["ecma", "application/ecmascript"],
  ["edm", "application/vnd.novadigm.edm"],
  ["edx", "application/vnd.novadigm.edx"],
  ["efif", "application/vnd.picsel"],
  ["ei6", "application/vnd.pg.osasli"],
  ["elc", "application/octet-stream"],
  ["emf", "image/emf"],
  ["eml", "message/rfc822"],
  ["emma", "application/emma+xml"],
  ["emotionml", "application/emotionml+xml"],
  ["emz", "application/x-msmetafile"],
  ["eol", "audio/vnd.digital-winds"],
  ["eot", "application/vnd.ms-fontobject"],
  ["eps", "application/postscript"],
  ["epub", "application/epub+zip"],
  ["es", "application/ecmascript"],
  ["es3", "application/vnd.eszigno3+xml"],
  ["esa", "application/vnd.osgi.subsystem"],
  ["esf", "application/vnd.epson.esf"],
  ["et3", "application/vnd.eszigno3+xml"],
  ["etx", "text/x-setext"],
  ["eva", "application/x-eva"],
  ["evy", "application/x-envoy"],
  ["exe", "application/octet-stream"],
  ["exi", "application/exi"],
  ["exp", "application/express"],
  ["exr", "image/aces"],
  ["ext", "application/vnd.novadigm.ext"],
  ["ez", "application/andrew-inset"],
  ["ez2", "application/vnd.ezpix-album"],
  ["ez3", "application/vnd.ezpix-package"],
  ["f", "text/x-fortran"],
  ["f4v", "video/mp4"],
  ["f77", "text/x-fortran"],
  ["f90", "text/x-fortran"],
  ["fbs", "image/vnd.fastbidsheet"],
  ["fcdt", "application/vnd.adobe.formscentral.fcdt"],
  ["fcs", "application/vnd.isac.fcs"],
  ["fdf", "application/vnd.fdf"],
  ["fdt", "application/fdt+xml"],
  ["fe_launch", "application/vnd.denovo.fcselayout-link"],
  ["fg5", "application/vnd.fujitsu.oasysgp"],
  ["fgd", "application/x-director"],
  ["fh", "image/x-freehand"],
  ["fh4", "image/x-freehand"],
  ["fh5", "image/x-freehand"],
  ["fh7", "image/x-freehand"],
  ["fhc", "image/x-freehand"],
  ["fig", "application/x-xfig"],
  ["fits", "image/fits"],
  ["flac", "audio/x-flac"],
  ["fli", "video/x-fli"],
  ["flo", "application/vnd.micrografx.flo"],
  ["flv", "video/x-flv"],
  ["flw", "application/vnd.kde.kivio"],
  ["flx", "text/vnd.fmi.flexstor"],
  ["fly", "text/vnd.fly"],
  ["fm", "application/vnd.framemaker"],
  ["fnc", "application/vnd.frogans.fnc"],
  ["fo", "application/vnd.software602.filler.form+xml"],
  ["for", "text/x-fortran"],
  ["fpx", "image/vnd.fpx"],
  ["frame", "application/vnd.framemaker"],
  ["fsc", "application/vnd.fsc.weblaunch"],
  ["fst", "image/vnd.fst"],
  ["ftc", "application/vnd.fluxtime.clip"],
  ["fti", "application/vnd.anser-web-funds-transfer-initiation"],
  ["fvt", "video/vnd.fvt"],
  ["fxp", "application/vnd.adobe.fxp"],
  ["fxpl", "application/vnd.adobe.fxp"],
  ["fzs", "application/vnd.fuzzysheet"],
  ["g2w", "application/vnd.geoplan"],
  ["g3", "image/g3fax"],
  ["g3w", "application/vnd.geospace"],
  ["gac", "application/vnd.groove-account"],
  ["gam", "application/x-tads"],
  ["gbr", "application/rpki-ghostbusters"],
  ["gca", "application/x-gca-compressed"],
  ["gdl", "model/vnd.gdl"],
  ["gdoc", "application/vnd.google-apps.document"],
  ["geo", "application/vnd.dynageo"],
  ["geojson", "application/geo+json"],
  ["gex", "application/vnd.geometry-explorer"],
  ["ggb", "application/vnd.geogebra.file"],
  ["ggt", "application/vnd.geogebra.tool"],
  ["ghf", "application/vnd.groove-help"],
  ["gif", "image/gif"],
  ["gim", "application/vnd.groove-identity-message"],
  ["glb", "model/gltf-binary"],
  ["gltf", "model/gltf+json"],
  ["gml", "application/gml+xml"],
  ["gmx", "application/vnd.gmx"],
  ["gnumeric", "application/x-gnumeric"],
  ["gpg", "application/gpg-keys"],
  ["gph", "application/vnd.flographit"],
  ["gpx", "application/gpx+xml"],
  ["gqf", "application/vnd.grafeq"],
  ["gqs", "application/vnd.grafeq"],
  ["gram", "application/srgs"],
  ["gramps", "application/x-gramps-xml"],
  ["gre", "application/vnd.geometry-explorer"],
  ["grv", "application/vnd.groove-injector"],
  ["grxml", "application/srgs+xml"],
  ["gsf", "application/x-font-ghostscript"],
  ["gsheet", "application/vnd.google-apps.spreadsheet"],
  ["gslides", "application/vnd.google-apps.presentation"],
  ["gtar", "application/x-gtar"],
  ["gtm", "application/vnd.groove-tool-message"],
  ["gtw", "model/vnd.gtw"],
  ["gv", "text/vnd.graphviz"],
  ["gxf", "application/gxf"],
  ["gxt", "application/vnd.geonext"],
  ["gz", "application/gzip"],
  ["gzip", "application/gzip"],
  ["h", "text/x-c"],
  ["h261", "video/h261"],
  ["h263", "video/h263"],
  ["h264", "video/h264"],
  ["hal", "application/vnd.hal+xml"],
  ["hbci", "application/vnd.hbci"],
  ["hbs", "text/x-handlebars-template"],
  ["hdd", "application/x-virtualbox-hdd"],
  ["hdf", "application/x-hdf"],
  ["heic", "image/heic"],
  ["heics", "image/heic-sequence"],
  ["heif", "image/heif"],
  ["heifs", "image/heif-sequence"],
  ["hej2", "image/hej2k"],
  ["held", "application/atsc-held+xml"],
  ["hh", "text/x-c"],
  ["hjson", "application/hjson"],
  ["hlp", "application/winhlp"],
  ["hpgl", "application/vnd.hp-hpgl"],
  ["hpid", "application/vnd.hp-hpid"],
  ["hps", "application/vnd.hp-hps"],
  ["hqx", "application/mac-binhex40"],
  ["hsj2", "image/hsj2"],
  ["htc", "text/x-component"],
  ["htke", "application/vnd.kenameaapp"],
  ["htm", "text/html"],
  ["html", "text/html"],
  ["hvd", "application/vnd.yamaha.hv-dic"],
  ["hvp", "application/vnd.yamaha.hv-voice"],
  ["hvs", "application/vnd.yamaha.hv-script"],
  ["i2g", "application/vnd.intergeo"],
  ["icc", "application/vnd.iccprofile"],
  ["ice", "x-conference/x-cooltalk"],
  ["icm", "application/vnd.iccprofile"],
  ["ico", "image/x-icon"],
  ["ics", "text/calendar"],
  ["ief", "image/ief"],
  ["ifb", "text/calendar"],
  ["ifm", "application/vnd.shana.informed.formdata"],
  ["iges", "model/iges"],
  ["igl", "application/vnd.igloader"],
  ["igm", "application/vnd.insors.igm"],
  ["igs", "model/iges"],
  ["igx", "application/vnd.micrografx.igx"],
  ["iif", "application/vnd.shana.informed.interchange"],
  ["img", "application/octet-stream"],
  ["imp", "application/vnd.accpac.simply.imp"],
  ["ims", "application/vnd.ms-ims"],
  ["in", "text/plain"],
  ["ini", "text/plain"],
  ["ink", "application/inkml+xml"],
  ["inkml", "application/inkml+xml"],
  ["install", "application/x-install-instructions"],
  ["iota", "application/vnd.astraea-software.iota"],
  ["ipfix", "application/ipfix"],
  ["ipk", "application/vnd.shana.informed.package"],
  ["irm", "application/vnd.ibm.rights-management"],
  ["irp", "application/vnd.irepository.package+xml"],
  ["iso", "application/x-iso9660-image"],
  ["itp", "application/vnd.shana.informed.formtemplate"],
  ["its", "application/its+xml"],
  ["ivp", "application/vnd.immervision-ivp"],
  ["ivu", "application/vnd.immervision-ivu"],
  ["jad", "text/vnd.sun.j2me.app-descriptor"],
  ["jade", "text/jade"],
  ["jam", "application/vnd.jam"],
  ["jar", "application/java-archive"],
  ["jardiff", "application/x-java-archive-diff"],
  ["java", "text/x-java-source"],
  ["jhc", "image/jphc"],
  ["jisp", "application/vnd.jisp"],
  ["jls", "image/jls"],
  ["jlt", "application/vnd.hp-jlyt"],
  ["jng", "image/x-jng"],
  ["jnlp", "application/x-java-jnlp-file"],
  ["joda", "application/vnd.joost.joda-archive"],
  ["jp2", "image/jp2"],
  ["jpe", "image/jpeg"],
  ["jpeg", "image/jpeg"],
  ["jpf", "image/jpx"],
  ["jpg", "image/jpeg"],
  ["jpg2", "image/jp2"],
  ["jpgm", "video/jpm"],
  ["jpgv", "video/jpeg"],
  ["jph", "image/jph"],
  ["jpm", "video/jpm"],
  ["jpx", "image/jpx"],
  ["js", "application/javascript"],
  ["json", "application/json"],
  ["json5", "application/json5"],
  ["jsonld", "application/ld+json"],
  // https://jsonlines.org/
  ["jsonl", "application/jsonl"],
  ["jsonml", "application/jsonml+json"],
  ["jsx", "text/jsx"],
  ["jxr", "image/jxr"],
  ["jxra", "image/jxra"],
  ["jxrs", "image/jxrs"],
  ["jxs", "image/jxs"],
  ["jxsc", "image/jxsc"],
  ["jxsi", "image/jxsi"],
  ["jxss", "image/jxss"],
  ["kar", "audio/midi"],
  ["karbon", "application/vnd.kde.karbon"],
  ["kdb", "application/octet-stream"],
  ["kdbx", "application/x-keepass2"],
  ["key", "application/x-iwork-keynote-sffkey"],
  ["kfo", "application/vnd.kde.kformula"],
  ["kia", "application/vnd.kidspiration"],
  ["kml", "application/vnd.google-earth.kml+xml"],
  ["kmz", "application/vnd.google-earth.kmz"],
  ["kne", "application/vnd.kinar"],
  ["knp", "application/vnd.kinar"],
  ["kon", "application/vnd.kde.kontour"],
  ["kpr", "application/vnd.kde.kpresenter"],
  ["kpt", "application/vnd.kde.kpresenter"],
  ["kpxx", "application/vnd.ds-keypoint"],
  ["ksp", "application/vnd.kde.kspread"],
  ["ktr", "application/vnd.kahootz"],
  ["ktx", "image/ktx"],
  ["ktx2", "image/ktx2"],
  ["ktz", "application/vnd.kahootz"],
  ["kwd", "application/vnd.kde.kword"],
  ["kwt", "application/vnd.kde.kword"],
  ["lasxml", "application/vnd.las.las+xml"],
  ["latex", "application/x-latex"],
  ["lbd", "application/vnd.llamagraphics.life-balance.desktop"],
  ["lbe", "application/vnd.llamagraphics.life-balance.exchange+xml"],
  ["les", "application/vnd.hhe.lesson-player"],
  ["less", "text/less"],
  ["lgr", "application/lgr+xml"],
  ["lha", "application/octet-stream"],
  ["link66", "application/vnd.route66.link66+xml"],
  ["list", "text/plain"],
  ["list3820", "application/vnd.ibm.modcap"],
  ["listafp", "application/vnd.ibm.modcap"],
  ["litcoffee", "text/coffeescript"],
  ["lnk", "application/x-ms-shortcut"],
  ["log", "text/plain"],
  ["lostxml", "application/lost+xml"],
  ["lrf", "application/octet-stream"],
  ["lrm", "application/vnd.ms-lrm"],
  ["ltf", "application/vnd.frogans.ltf"],
  ["lua", "text/x-lua"],
  ["luac", "application/x-lua-bytecode"],
  ["lvp", "audio/vnd.lucent.voice"],
  ["lwp", "application/vnd.lotus-wordpro"],
  ["lzh", "application/octet-stream"],
  ["m1v", "video/mpeg"],
  ["m2a", "audio/mpeg"],
  ["m2v", "video/mpeg"],
  ["m3a", "audio/mpeg"],
  ["m3u", "text/plain"],
  ["m3u8", "application/vnd.apple.mpegurl"],
  ["m4a", "audio/x-m4a"],
  ["m4p", "application/mp4"],
  ["m4s", "video/iso.segment"],
  ["m4u", "application/vnd.mpegurl"],
  ["m4v", "video/x-m4v"],
  ["m13", "application/x-msmediaview"],
  ["m14", "application/x-msmediaview"],
  ["m21", "application/mp21"],
  ["ma", "application/mathematica"],
  ["mads", "application/mads+xml"],
  ["maei", "application/mmt-aei+xml"],
  ["mag", "application/vnd.ecowin.chart"],
  ["maker", "application/vnd.framemaker"],
  ["man", "text/troff"],
  ["manifest", "text/cache-manifest"],
  ["map", "application/json"],
  ["mar", "application/octet-stream"],
  ["markdown", "text/markdown"],
  ["mathml", "application/mathml+xml"],
  ["mb", "application/mathematica"],
  ["mbk", "application/vnd.mobius.mbk"],
  ["mbox", "application/mbox"],
  ["mc1", "application/vnd.medcalcdata"],
  ["mcd", "application/vnd.mcd"],
  ["mcurl", "text/vnd.curl.mcurl"],
  ["md", "text/markdown"],
  ["mdb", "application/x-msaccess"],
  ["mdi", "image/vnd.ms-modi"],
  ["mdx", "text/mdx"],
  ["me", "text/troff"],
  ["mesh", "model/mesh"],
  ["meta4", "application/metalink4+xml"],
  ["metalink", "application/metalink+xml"],
  ["mets", "application/mets+xml"],
  ["mfm", "application/vnd.mfmp"],
  ["mft", "application/rpki-manifest"],
  ["mgp", "application/vnd.osgeo.mapguide.package"],
  ["mgz", "application/vnd.proteus.magazine"],
  ["mid", "audio/midi"],
  ["midi", "audio/midi"],
  ["mie", "application/x-mie"],
  ["mif", "application/vnd.mif"],
  ["mime", "message/rfc822"],
  ["mj2", "video/mj2"],
  ["mjp2", "video/mj2"],
  ["mjs", "application/javascript"],
  ["mk3d", "video/x-matroska"],
  ["mka", "audio/x-matroska"],
  ["mkd", "text/x-markdown"],
  ["mks", "video/x-matroska"],
  ["mkv", "video/x-matroska"],
  ["mlp", "application/vnd.dolby.mlp"],
  ["mmd", "application/vnd.chipnuts.karaoke-mmd"],
  ["mmf", "application/vnd.smaf"],
  ["mml", "text/mathml"],
  ["mmr", "image/vnd.fujixerox.edmics-mmr"],
  ["mng", "video/x-mng"],
  ["mny", "application/x-msmoney"],
  ["mobi", "application/x-mobipocket-ebook"],
  ["mods", "application/mods+xml"],
  ["mov", "video/quicktime"],
  ["movie", "video/x-sgi-movie"],
  ["mp2", "audio/mpeg"],
  ["mp2a", "audio/mpeg"],
  ["mp3", "audio/mpeg"],
  ["mp4", "video/mp4"],
  ["mp4a", "audio/mp4"],
  ["mp4s", "application/mp4"],
  ["mp4v", "video/mp4"],
  ["mp21", "application/mp21"],
  ["mpc", "application/vnd.mophun.certificate"],
  ["mpd", "application/dash+xml"],
  ["mpe", "video/mpeg"],
  ["mpeg", "video/mpeg"],
  ["mpg", "video/mpeg"],
  ["mpg4", "video/mp4"],
  ["mpga", "audio/mpeg"],
  ["mpkg", "application/vnd.apple.installer+xml"],
  ["mpm", "application/vnd.blueice.multipass"],
  ["mpn", "application/vnd.mophun.application"],
  ["mpp", "application/vnd.ms-project"],
  ["mpt", "application/vnd.ms-project"],
  ["mpy", "application/vnd.ibm.minipay"],
  ["mqy", "application/vnd.mobius.mqy"],
  ["mrc", "application/marc"],
  ["mrcx", "application/marcxml+xml"],
  ["ms", "text/troff"],
  ["mscml", "application/mediaservercontrol+xml"],
  ["mseed", "application/vnd.fdsn.mseed"],
  ["mseq", "application/vnd.mseq"],
  ["msf", "application/vnd.epson.msf"],
  ["msg", "application/vnd.ms-outlook"],
  ["msh", "model/mesh"],
  ["msi", "application/x-msdownload"],
  ["msl", "application/vnd.mobius.msl"],
  ["msm", "application/octet-stream"],
  ["msp", "application/octet-stream"],
  ["msty", "application/vnd.muvee.style"],
  ["mtl", "model/mtl"],
  ["mts", "model/vnd.mts"],
  ["mus", "application/vnd.musician"],
  ["musd", "application/mmt-usd+xml"],
  ["musicxml", "application/vnd.recordare.musicxml+xml"],
  ["mvb", "application/x-msmediaview"],
  ["mvt", "application/vnd.mapbox-vector-tile"],
  ["mwf", "application/vnd.mfer"],
  ["mxf", "application/mxf"],
  ["mxl", "application/vnd.recordare.musicxml"],
  ["mxmf", "audio/mobile-xmf"],
  ["mxml", "application/xv+xml"],
  ["mxs", "application/vnd.triscape.mxs"],
  ["mxu", "video/vnd.mpegurl"],
  ["n-gage", "application/vnd.nokia.n-gage.symbian.install"],
  ["n3", "text/n3"],
  ["nb", "application/mathematica"],
  ["nbp", "application/vnd.wolfram.player"],
  ["nc", "application/x-netcdf"],
  ["ncx", "application/x-dtbncx+xml"],
  ["nfo", "text/x-nfo"],
  ["ngdat", "application/vnd.nokia.n-gage.data"],
  ["nitf", "application/vnd.nitf"],
  ["nlu", "application/vnd.neurolanguage.nlu"],
  ["nml", "application/vnd.enliven"],
  ["nnd", "application/vnd.noblenet-directory"],
  ["nns", "application/vnd.noblenet-sealer"],
  ["nnw", "application/vnd.noblenet-web"],
  ["npx", "image/vnd.net-fpx"],
  ["nq", "application/n-quads"],
  ["nsc", "application/x-conference"],
  ["nsf", "application/vnd.lotus-notes"],
  ["nt", "application/n-triples"],
  ["ntf", "application/vnd.nitf"],
  ["numbers", "application/x-iwork-numbers-sffnumbers"],
  ["nzb", "application/x-nzb"],
  ["oa2", "application/vnd.fujitsu.oasys2"],
  ["oa3", "application/vnd.fujitsu.oasys3"],
  ["oas", "application/vnd.fujitsu.oasys"],
  ["obd", "application/x-msbinder"],
  ["obgx", "application/vnd.openblox.game+xml"],
  ["obj", "model/obj"],
  ["oda", "application/oda"],
  ["odb", "application/vnd.oasis.opendocument.database"],
  ["odc", "application/vnd.oasis.opendocument.chart"],
  ["odf", "application/vnd.oasis.opendocument.formula"],
  ["odft", "application/vnd.oasis.opendocument.formula-template"],
  ["odg", "application/vnd.oasis.opendocument.graphics"],
  ["odi", "application/vnd.oasis.opendocument.image"],
  ["odm", "application/vnd.oasis.opendocument.text-master"],
  ["odp", "application/vnd.oasis.opendocument.presentation"],
  ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
  ["odt", "application/vnd.oasis.opendocument.text"],
  ["oga", "audio/ogg"],
  ["ogex", "model/vnd.opengex"],
  ["ogg", "audio/ogg"],
  ["ogv", "video/ogg"],
  ["ogx", "application/ogg"],
  ["omdoc", "application/omdoc+xml"],
  ["onepkg", "application/onenote"],
  ["onetmp", "application/onenote"],
  ["onetoc", "application/onenote"],
  ["onetoc2", "application/onenote"],
  ["opf", "application/oebps-package+xml"],
  ["opml", "text/x-opml"],
  ["oprc", "application/vnd.palm"],
  ["opus", "audio/ogg"],
  ["org", "text/x-org"],
  ["osf", "application/vnd.yamaha.openscoreformat"],
  ["osfpvg", "application/vnd.yamaha.openscoreformat.osfpvg+xml"],
  ["osm", "application/vnd.openstreetmap.data+xml"],
  ["otc", "application/vnd.oasis.opendocument.chart-template"],
  ["otf", "font/otf"],
  ["otg", "application/vnd.oasis.opendocument.graphics-template"],
  ["oth", "application/vnd.oasis.opendocument.text-web"],
  ["oti", "application/vnd.oasis.opendocument.image-template"],
  ["otp", "application/vnd.oasis.opendocument.presentation-template"],
  ["ots", "application/vnd.oasis.opendocument.spreadsheet-template"],
  ["ott", "application/vnd.oasis.opendocument.text-template"],
  ["ova", "application/x-virtualbox-ova"],
  ["ovf", "application/x-virtualbox-ovf"],
  ["owl", "application/rdf+xml"],
  ["oxps", "application/oxps"],
  ["oxt", "application/vnd.openofficeorg.extension"],
  ["p", "text/x-pascal"],
  ["p7a", "application/x-pkcs7-signature"],
  ["p7b", "application/x-pkcs7-certificates"],
  ["p7c", "application/pkcs7-mime"],
  ["p7m", "application/pkcs7-mime"],
  ["p7r", "application/x-pkcs7-certreqresp"],
  ["p7s", "application/pkcs7-signature"],
  ["p8", "application/pkcs8"],
  ["p10", "application/x-pkcs10"],
  ["p12", "application/x-pkcs12"],
  ["pac", "application/x-ns-proxy-autoconfig"],
  ["pages", "application/x-iwork-pages-sffpages"],
  ["pas", "text/x-pascal"],
  ["paw", "application/vnd.pawaafile"],
  ["pbd", "application/vnd.powerbuilder6"],
  ["pbm", "image/x-portable-bitmap"],
  ["pcap", "application/vnd.tcpdump.pcap"],
  ["pcf", "application/x-font-pcf"],
  ["pcl", "application/vnd.hp-pcl"],
  ["pclxl", "application/vnd.hp-pclxl"],
  ["pct", "image/x-pict"],
  ["pcurl", "application/vnd.curl.pcurl"],
  ["pcx", "image/x-pcx"],
  ["pdb", "application/x-pilot"],
  ["pde", "text/x-processing"],
  ["pdf", "application/pdf"],
  ["pem", "application/x-x509-user-cert"],
  ["pfa", "application/x-font-type1"],
  ["pfb", "application/x-font-type1"],
  ["pfm", "application/x-font-type1"],
  ["pfr", "application/font-tdpfr"],
  ["pfx", "application/x-pkcs12"],
  ["pgm", "image/x-portable-graymap"],
  ["pgn", "application/x-chess-pgn"],
  ["pgp", "application/pgp"],
  ["php", "application/x-httpd-php"],
  ["php3", "application/x-httpd-php"],
  ["php4", "application/x-httpd-php"],
  ["phps", "application/x-httpd-php-source"],
  ["phtml", "application/x-httpd-php"],
  ["pic", "image/x-pict"],
  ["pkg", "application/octet-stream"],
  ["pki", "application/pkixcmp"],
  ["pkipath", "application/pkix-pkipath"],
  ["pkpass", "application/vnd.apple.pkpass"],
  ["pl", "application/x-perl"],
  ["plb", "application/vnd.3gpp.pic-bw-large"],
  ["plc", "application/vnd.mobius.plc"],
  ["plf", "application/vnd.pocketlearn"],
  ["pls", "application/pls+xml"],
  ["pm", "application/x-perl"],
  ["pml", "application/vnd.ctc-posml"],
  ["png", "image/png"],
  ["pnm", "image/x-portable-anymap"],
  ["portpkg", "application/vnd.macports.portpkg"],
  ["pot", "application/vnd.ms-powerpoint"],
  ["potm", "application/vnd.ms-powerpoint.presentation.macroEnabled.12"],
  ["potx", "application/vnd.openxmlformats-officedocument.presentationml.template"],
  ["ppa", "application/vnd.ms-powerpoint"],
  ["ppam", "application/vnd.ms-powerpoint.addin.macroEnabled.12"],
  ["ppd", "application/vnd.cups-ppd"],
  ["ppm", "image/x-portable-pixmap"],
  ["pps", "application/vnd.ms-powerpoint"],
  ["ppsm", "application/vnd.ms-powerpoint.slideshow.macroEnabled.12"],
  ["ppsx", "application/vnd.openxmlformats-officedocument.presentationml.slideshow"],
  ["ppt", "application/powerpoint"],
  ["pptm", "application/vnd.ms-powerpoint.presentation.macroEnabled.12"],
  ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
  ["pqa", "application/vnd.palm"],
  ["prc", "application/x-pilot"],
  ["pre", "application/vnd.lotus-freelance"],
  ["prf", "application/pics-rules"],
  ["provx", "application/provenance+xml"],
  ["ps", "application/postscript"],
  ["psb", "application/vnd.3gpp.pic-bw-small"],
  ["psd", "application/x-photoshop"],
  ["psf", "application/x-font-linux-psf"],
  ["pskcxml", "application/pskc+xml"],
  ["pti", "image/prs.pti"],
  ["ptid", "application/vnd.pvi.ptid1"],
  ["pub", "application/x-mspublisher"],
  ["pvb", "application/vnd.3gpp.pic-bw-var"],
  ["pwn", "application/vnd.3m.post-it-notes"],
  ["pya", "audio/vnd.ms-playready.media.pya"],
  ["pyv", "video/vnd.ms-playready.media.pyv"],
  ["qam", "application/vnd.epson.quickanime"],
  ["qbo", "application/vnd.intu.qbo"],
  ["qfx", "application/vnd.intu.qfx"],
  ["qps", "application/vnd.publishare-delta-tree"],
  ["qt", "video/quicktime"],
  ["qwd", "application/vnd.quark.quarkxpress"],
  ["qwt", "application/vnd.quark.quarkxpress"],
  ["qxb", "application/vnd.quark.quarkxpress"],
  ["qxd", "application/vnd.quark.quarkxpress"],
  ["qxl", "application/vnd.quark.quarkxpress"],
  ["qxt", "application/vnd.quark.quarkxpress"],
  ["ra", "audio/x-realaudio"],
  ["ram", "audio/x-pn-realaudio"],
  ["raml", "application/raml+yaml"],
  ["rapd", "application/route-apd+xml"],
  ["rar", "application/x-rar"],
  ["ras", "image/x-cmu-raster"],
  ["rcprofile", "application/vnd.ipunplugged.rcprofile"],
  ["rdf", "application/rdf+xml"],
  ["rdz", "application/vnd.data-vision.rdz"],
  ["relo", "application/p2p-overlay+xml"],
  ["rep", "application/vnd.businessobjects"],
  ["res", "application/x-dtbresource+xml"],
  ["rgb", "image/x-rgb"],
  ["rif", "application/reginfo+xml"],
  ["rip", "audio/vnd.rip"],
  ["ris", "application/x-research-info-systems"],
  ["rl", "application/resource-lists+xml"],
  ["rlc", "image/vnd.fujixerox.edmics-rlc"],
  ["rld", "application/resource-lists-diff+xml"],
  ["rm", "audio/x-pn-realaudio"],
  ["rmi", "audio/midi"],
  ["rmp", "audio/x-pn-realaudio-plugin"],
  ["rms", "application/vnd.jcp.javame.midlet-rms"],
  ["rmvb", "application/vnd.rn-realmedia-vbr"],
  ["rnc", "application/relax-ng-compact-syntax"],
  ["rng", "application/xml"],
  ["roa", "application/rpki-roa"],
  ["roff", "text/troff"],
  ["rp9", "application/vnd.cloanto.rp9"],
  ["rpm", "audio/x-pn-realaudio-plugin"],
  ["rpss", "application/vnd.nokia.radio-presets"],
  ["rpst", "application/vnd.nokia.radio-preset"],
  ["rq", "application/sparql-query"],
  ["rs", "application/rls-services+xml"],
  ["rsa", "application/x-pkcs7"],
  ["rsat", "application/atsc-rsat+xml"],
  ["rsd", "application/rsd+xml"],
  ["rsheet", "application/urc-ressheet+xml"],
  ["rss", "application/rss+xml"],
  ["rtf", "text/rtf"],
  ["rtx", "text/richtext"],
  ["run", "application/x-makeself"],
  ["rusd", "application/route-usd+xml"],
  ["rv", "video/vnd.rn-realvideo"],
  ["s", "text/x-asm"],
  ["s3m", "audio/s3m"],
  ["saf", "application/vnd.yamaha.smaf-audio"],
  ["sass", "text/x-sass"],
  ["sbml", "application/sbml+xml"],
  ["sc", "application/vnd.ibm.secure-container"],
  ["scd", "application/x-msschedule"],
  ["scm", "application/vnd.lotus-screencam"],
  ["scq", "application/scvp-cv-request"],
  ["scs", "application/scvp-cv-response"],
  ["scss", "text/x-scss"],
  ["scurl", "text/vnd.curl.scurl"],
  ["sda", "application/vnd.stardivision.draw"],
  ["sdc", "application/vnd.stardivision.calc"],
  ["sdd", "application/vnd.stardivision.impress"],
  ["sdkd", "application/vnd.solent.sdkm+xml"],
  ["sdkm", "application/vnd.solent.sdkm+xml"],
  ["sdp", "application/sdp"],
  ["sdw", "application/vnd.stardivision.writer"],
  ["sea", "application/octet-stream"],
  ["see", "application/vnd.seemail"],
  ["seed", "application/vnd.fdsn.seed"],
  ["sema", "application/vnd.sema"],
  ["semd", "application/vnd.semd"],
  ["semf", "application/vnd.semf"],
  ["senmlx", "application/senml+xml"],
  ["sensmlx", "application/sensml+xml"],
  ["ser", "application/java-serialized-object"],
  ["setpay", "application/set-payment-initiation"],
  ["setreg", "application/set-registration-initiation"],
  ["sfd-hdstx", "application/vnd.hydrostatix.sof-data"],
  ["sfs", "application/vnd.spotfire.sfs"],
  ["sfv", "text/x-sfv"],
  ["sgi", "image/sgi"],
  ["sgl", "application/vnd.stardivision.writer-global"],
  ["sgm", "text/sgml"],
  ["sgml", "text/sgml"],
  ["sh", "application/x-sh"],
  ["shar", "application/x-shar"],
  ["shex", "text/shex"],
  ["shf", "application/shf+xml"],
  ["shtml", "text/html"],
  ["sid", "image/x-mrsid-image"],
  ["sieve", "application/sieve"],
  ["sig", "application/pgp-signature"],
  ["sil", "audio/silk"],
  ["silo", "model/mesh"],
  ["sis", "application/vnd.symbian.install"],
  ["sisx", "application/vnd.symbian.install"],
  ["sit", "application/x-stuffit"],
  ["sitx", "application/x-stuffitx"],
  ["siv", "application/sieve"],
  ["skd", "application/vnd.koan"],
  ["skm", "application/vnd.koan"],
  ["skp", "application/vnd.koan"],
  ["skt", "application/vnd.koan"],
  ["sldm", "application/vnd.ms-powerpoint.slide.macroenabled.12"],
  ["sldx", "application/vnd.openxmlformats-officedocument.presentationml.slide"],
  ["slim", "text/slim"],
  ["slm", "text/slim"],
  ["sls", "application/route-s-tsid+xml"],
  ["slt", "application/vnd.epson.salt"],
  ["sm", "application/vnd.stepmania.stepchart"],
  ["smf", "application/vnd.stardivision.math"],
  ["smi", "application/smil"],
  ["smil", "application/smil"],
  ["smv", "video/x-smv"],
  ["smzip", "application/vnd.stepmania.package"],
  ["snd", "audio/basic"],
  ["snf", "application/x-font-snf"],
  ["so", "application/octet-stream"],
  ["spc", "application/x-pkcs7-certificates"],
  ["spdx", "text/spdx"],
  ["spf", "application/vnd.yamaha.smaf-phrase"],
  ["spl", "application/x-futuresplash"],
  ["spot", "text/vnd.in3d.spot"],
  ["spp", "application/scvp-vp-response"],
  ["spq", "application/scvp-vp-request"],
  ["spx", "audio/ogg"],
  ["sql", "application/x-sql"],
  ["src", "application/x-wais-source"],
  ["srt", "application/x-subrip"],
  ["sru", "application/sru+xml"],
  ["srx", "application/sparql-results+xml"],
  ["ssdl", "application/ssdl+xml"],
  ["sse", "application/vnd.kodak-descriptor"],
  ["ssf", "application/vnd.epson.ssf"],
  ["ssml", "application/ssml+xml"],
  ["sst", "application/octet-stream"],
  ["st", "application/vnd.sailingtracker.track"],
  ["stc", "application/vnd.sun.xml.calc.template"],
  ["std", "application/vnd.sun.xml.draw.template"],
  ["stf", "application/vnd.wt.stf"],
  ["sti", "application/vnd.sun.xml.impress.template"],
  ["stk", "application/hyperstudio"],
  ["stl", "model/stl"],
  ["stpx", "model/step+xml"],
  ["stpxz", "model/step-xml+zip"],
  ["stpz", "model/step+zip"],
  ["str", "application/vnd.pg.format"],
  ["stw", "application/vnd.sun.xml.writer.template"],
  ["styl", "text/stylus"],
  ["stylus", "text/stylus"],
  ["sub", "text/vnd.dvb.subtitle"],
  ["sus", "application/vnd.sus-calendar"],
  ["susp", "application/vnd.sus-calendar"],
  ["sv4cpio", "application/x-sv4cpio"],
  ["sv4crc", "application/x-sv4crc"],
  ["svc", "application/vnd.dvb.service"],
  ["svd", "application/vnd.svd"],
  ["svg", "image/svg+xml"],
  ["svgz", "image/svg+xml"],
  ["swa", "application/x-director"],
  ["swf", "application/x-shockwave-flash"],
  ["swi", "application/vnd.aristanetworks.swi"],
  ["swidtag", "application/swid+xml"],
  ["sxc", "application/vnd.sun.xml.calc"],
  ["sxd", "application/vnd.sun.xml.draw"],
  ["sxg", "application/vnd.sun.xml.writer.global"],
  ["sxi", "application/vnd.sun.xml.impress"],
  ["sxm", "application/vnd.sun.xml.math"],
  ["sxw", "application/vnd.sun.xml.writer"],
  ["t", "text/troff"],
  ["t3", "application/x-t3vm-image"],
  ["t38", "image/t38"],
  ["taglet", "application/vnd.mynfc"],
  ["tao", "application/vnd.tao.intent-module-archive"],
  ["tap", "image/vnd.tencent.tap"],
  ["tar", "application/x-tar"],
  ["tcap", "application/vnd.3gpp2.tcap"],
  ["tcl", "application/x-tcl"],
  ["td", "application/urc-targetdesc+xml"],
  ["teacher", "application/vnd.smart.teacher"],
  ["tei", "application/tei+xml"],
  ["teicorpus", "application/tei+xml"],
  ["tex", "application/x-tex"],
  ["texi", "application/x-texinfo"],
  ["texinfo", "application/x-texinfo"],
  ["text", "text/plain"],
  ["tfi", "application/thraud+xml"],
  ["tfm", "application/x-tex-tfm"],
  ["tfx", "image/tiff-fx"],
  ["tga", "image/x-tga"],
  ["tgz", "application/x-tar"],
  ["thmx", "application/vnd.ms-officetheme"],
  ["tif", "image/tiff"],
  ["tiff", "image/tiff"],
  ["tk", "application/x-tcl"],
  ["tmo", "application/vnd.tmobile-livetv"],
  ["toml", "application/toml"],
  ["torrent", "application/x-bittorrent"],
  ["tpl", "application/vnd.groove-tool-template"],
  ["tpt", "application/vnd.trid.tpt"],
  ["tr", "text/troff"],
  ["tra", "application/vnd.trueapp"],
  ["trig", "application/trig"],
  ["trm", "application/x-msterminal"],
  ["ts", "video/mp2t"],
  ["tsd", "application/timestamped-data"],
  ["tsv", "text/tab-separated-values"],
  ["ttc", "font/collection"],
  ["ttf", "font/ttf"],
  ["ttl", "text/turtle"],
  ["ttml", "application/ttml+xml"],
  ["twd", "application/vnd.simtech-mindmapper"],
  ["twds", "application/vnd.simtech-mindmapper"],
  ["txd", "application/vnd.genomatix.tuxedo"],
  ["txf", "application/vnd.mobius.txf"],
  ["txt", "text/plain"],
  ["u8dsn", "message/global-delivery-status"],
  ["u8hdr", "message/global-headers"],
  ["u8mdn", "message/global-disposition-notification"],
  ["u8msg", "message/global"],
  ["u32", "application/x-authorware-bin"],
  ["ubj", "application/ubjson"],
  ["udeb", "application/x-debian-package"],
  ["ufd", "application/vnd.ufdl"],
  ["ufdl", "application/vnd.ufdl"],
  ["ulx", "application/x-glulx"],
  ["umj", "application/vnd.umajin"],
  ["unityweb", "application/vnd.unity"],
  ["uoml", "application/vnd.uoml+xml"],
  ["uri", "text/uri-list"],
  ["uris", "text/uri-list"],
  ["urls", "text/uri-list"],
  ["usdz", "model/vnd.usdz+zip"],
  ["ustar", "application/x-ustar"],
  ["utz", "application/vnd.uiq.theme"],
  ["uu", "text/x-uuencode"],
  ["uva", "audio/vnd.dece.audio"],
  ["uvd", "application/vnd.dece.data"],
  ["uvf", "application/vnd.dece.data"],
  ["uvg", "image/vnd.dece.graphic"],
  ["uvh", "video/vnd.dece.hd"],
  ["uvi", "image/vnd.dece.graphic"],
  ["uvm", "video/vnd.dece.mobile"],
  ["uvp", "video/vnd.dece.pd"],
  ["uvs", "video/vnd.dece.sd"],
  ["uvt", "application/vnd.dece.ttml+xml"],
  ["uvu", "video/vnd.uvvu.mp4"],
  ["uvv", "video/vnd.dece.video"],
  ["uvva", "audio/vnd.dece.audio"],
  ["uvvd", "application/vnd.dece.data"],
  ["uvvf", "application/vnd.dece.data"],
  ["uvvg", "image/vnd.dece.graphic"],
  ["uvvh", "video/vnd.dece.hd"],
  ["uvvi", "image/vnd.dece.graphic"],
  ["uvvm", "video/vnd.dece.mobile"],
  ["uvvp", "video/vnd.dece.pd"],
  ["uvvs", "video/vnd.dece.sd"],
  ["uvvt", "application/vnd.dece.ttml+xml"],
  ["uvvu", "video/vnd.uvvu.mp4"],
  ["uvvv", "video/vnd.dece.video"],
  ["uvvx", "application/vnd.dece.unspecified"],
  ["uvvz", "application/vnd.dece.zip"],
  ["uvx", "application/vnd.dece.unspecified"],
  ["uvz", "application/vnd.dece.zip"],
  ["vbox", "application/x-virtualbox-vbox"],
  ["vbox-extpack", "application/x-virtualbox-vbox-extpack"],
  ["vcard", "text/vcard"],
  ["vcd", "application/x-cdlink"],
  ["vcf", "text/x-vcard"],
  ["vcg", "application/vnd.groove-vcard"],
  ["vcs", "text/x-vcalendar"],
  ["vcx", "application/vnd.vcx"],
  ["vdi", "application/x-virtualbox-vdi"],
  ["vds", "model/vnd.sap.vds"],
  ["vhd", "application/x-virtualbox-vhd"],
  ["vis", "application/vnd.visionary"],
  ["viv", "video/vnd.vivo"],
  ["vlc", "application/videolan"],
  ["vmdk", "application/x-virtualbox-vmdk"],
  ["vob", "video/x-ms-vob"],
  ["vor", "application/vnd.stardivision.writer"],
  ["vox", "application/x-authorware-bin"],
  ["vrml", "model/vrml"],
  ["vsd", "application/vnd.visio"],
  ["vsf", "application/vnd.vsf"],
  ["vss", "application/vnd.visio"],
  ["vst", "application/vnd.visio"],
  ["vsw", "application/vnd.visio"],
  ["vtf", "image/vnd.valve.source.texture"],
  ["vtt", "text/vtt"],
  ["vtu", "model/vnd.vtu"],
  ["vxml", "application/voicexml+xml"],
  ["w3d", "application/x-director"],
  ["wad", "application/x-doom"],
  ["wadl", "application/vnd.sun.wadl+xml"],
  ["war", "application/java-archive"],
  ["wasm", "application/wasm"],
  ["wav", "audio/x-wav"],
  ["wax", "audio/x-ms-wax"],
  ["wbmp", "image/vnd.wap.wbmp"],
  ["wbs", "application/vnd.criticaltools.wbs+xml"],
  ["wbxml", "application/wbxml"],
  ["wcm", "application/vnd.ms-works"],
  ["wdb", "application/vnd.ms-works"],
  ["wdp", "image/vnd.ms-photo"],
  ["weba", "audio/webm"],
  ["webapp", "application/x-web-app-manifest+json"],
  ["webm", "video/webm"],
  ["webmanifest", "application/manifest+json"],
  ["webp", "image/webp"],
  ["wg", "application/vnd.pmi.widget"],
  ["wgt", "application/widget"],
  ["wks", "application/vnd.ms-works"],
  ["wm", "video/x-ms-wm"],
  ["wma", "audio/x-ms-wma"],
  ["wmd", "application/x-ms-wmd"],
  ["wmf", "image/wmf"],
  ["wml", "text/vnd.wap.wml"],
  ["wmlc", "application/wmlc"],
  ["wmls", "text/vnd.wap.wmlscript"],
  ["wmlsc", "application/vnd.wap.wmlscriptc"],
  ["wmv", "video/x-ms-wmv"],
  ["wmx", "video/x-ms-wmx"],
  ["wmz", "application/x-msmetafile"],
  ["woff", "font/woff"],
  ["woff2", "font/woff2"],
  ["word", "application/msword"],
  ["wpd", "application/vnd.wordperfect"],
  ["wpl", "application/vnd.ms-wpl"],
  ["wps", "application/vnd.ms-works"],
  ["wqd", "application/vnd.wqd"],
  ["wri", "application/x-mswrite"],
  ["wrl", "model/vrml"],
  ["wsc", "message/vnd.wfa.wsc"],
  ["wsdl", "application/wsdl+xml"],
  ["wspolicy", "application/wspolicy+xml"],
  ["wtb", "application/vnd.webturbo"],
  ["wvx", "video/x-ms-wvx"],
  ["x3d", "model/x3d+xml"],
  ["x3db", "model/x3d+fastinfoset"],
  ["x3dbz", "model/x3d+binary"],
  ["x3dv", "model/x3d-vrml"],
  ["x3dvz", "model/x3d+vrml"],
  ["x3dz", "model/x3d+xml"],
  ["x32", "application/x-authorware-bin"],
  ["x_b", "model/vnd.parasolid.transmit.binary"],
  ["x_t", "model/vnd.parasolid.transmit.text"],
  ["xaml", "application/xaml+xml"],
  ["xap", "application/x-silverlight-app"],
  ["xar", "application/vnd.xara"],
  ["xav", "application/xcap-att+xml"],
  ["xbap", "application/x-ms-xbap"],
  ["xbd", "application/vnd.fujixerox.docuworks.binder"],
  ["xbm", "image/x-xbitmap"],
  ["xca", "application/xcap-caps+xml"],
  ["xcs", "application/calendar+xml"],
  ["xdf", "application/xcap-diff+xml"],
  ["xdm", "application/vnd.syncml.dm+xml"],
  ["xdp", "application/vnd.adobe.xdp+xml"],
  ["xdssc", "application/dssc+xml"],
  ["xdw", "application/vnd.fujixerox.docuworks"],
  ["xel", "application/xcap-el+xml"],
  ["xenc", "application/xenc+xml"],
  ["xer", "application/patch-ops-error+xml"],
  ["xfdf", "application/vnd.adobe.xfdf"],
  ["xfdl", "application/vnd.xfdl"],
  ["xht", "application/xhtml+xml"],
  ["xhtml", "application/xhtml+xml"],
  ["xhvml", "application/xv+xml"],
  ["xif", "image/vnd.xiff"],
  ["xl", "application/excel"],
  ["xla", "application/vnd.ms-excel"],
  ["xlam", "application/vnd.ms-excel.addin.macroEnabled.12"],
  ["xlc", "application/vnd.ms-excel"],
  ["xlf", "application/xliff+xml"],
  ["xlm", "application/vnd.ms-excel"],
  ["xls", "application/vnd.ms-excel"],
  ["xlsb", "application/vnd.ms-excel.sheet.binary.macroEnabled.12"],
  ["xlsm", "application/vnd.ms-excel.sheet.macroEnabled.12"],
  ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
  ["xlt", "application/vnd.ms-excel"],
  ["xltm", "application/vnd.ms-excel.template.macroEnabled.12"],
  ["xltx", "application/vnd.openxmlformats-officedocument.spreadsheetml.template"],
  ["xlw", "application/vnd.ms-excel"],
  ["xm", "audio/xm"],
  ["xml", "application/xml"],
  ["xns", "application/xcap-ns+xml"],
  ["xo", "application/vnd.olpc-sugar"],
  ["xop", "application/xop+xml"],
  ["xpi", "application/x-xpinstall"],
  ["xpl", "application/xproc+xml"],
  ["xpm", "image/x-xpixmap"],
  ["xpr", "application/vnd.is-xpr"],
  ["xps", "application/vnd.ms-xpsdocument"],
  ["xpw", "application/vnd.intercon.formnet"],
  ["xpx", "application/vnd.intercon.formnet"],
  ["xsd", "application/xml"],
  ["xsl", "application/xml"],
  ["xslt", "application/xslt+xml"],
  ["xsm", "application/vnd.syncml+xml"],
  ["xspf", "application/xspf+xml"],
  ["xul", "application/vnd.mozilla.xul+xml"],
  ["xvm", "application/xv+xml"],
  ["xvml", "application/xv+xml"],
  ["xwd", "image/x-xwindowdump"],
  ["xyz", "chemical/x-xyz"],
  ["xz", "application/x-xz"],
  ["yaml", "text/yaml"],
  ["yang", "application/yang"],
  ["yin", "application/yin+xml"],
  ["yml", "text/yaml"],
  ["ymp", "text/x-suse-ymp"],
  ["z", "application/x-compress"],
  ["z1", "application/x-zmachine"],
  ["z2", "application/x-zmachine"],
  ["z3", "application/x-zmachine"],
  ["z4", "application/x-zmachine"],
  ["z5", "application/x-zmachine"],
  ["z6", "application/x-zmachine"],
  ["z7", "application/x-zmachine"],
  ["z8", "application/x-zmachine"],
  ["zaz", "application/vnd.zzazz.deck+xml"],
  ["zip", "application/zip"],
  ["zir", "application/vnd.zul"],
  ["zirz", "application/vnd.zul"],
  ["zmm", "application/vnd.handheld-entertainment+xml"],
  ["zsh", "text/x-scriptzsh"]
]);
function toFileWithPath(file, path, h) {
  const f = withMimeType(file);
  const { webkitRelativePath } = file;
  const p2 = typeof path === "string" ? path : typeof webkitRelativePath === "string" && webkitRelativePath.length > 0 ? webkitRelativePath : `./${file.name}`;
  if (typeof f.path !== "string") {
    setObjProp(f, "path", p2);
  }
  if (h !== void 0) {
    Object.defineProperty(f, "handle", {
      value: h,
      writable: false,
      configurable: false,
      enumerable: true
    });
  }
  setObjProp(f, "relativePath", p2);
  return f;
}
function withMimeType(file) {
  const { name } = file;
  const hasExtension = name && name.lastIndexOf(".") !== -1;
  if (hasExtension && !file.type) {
    const ext = name.split(".").pop().toLowerCase();
    const type = COMMON_MIME_TYPES.get(ext);
    if (type) {
      Object.defineProperty(file, "type", {
        value: type,
        writable: false,
        configurable: false,
        enumerable: true
      });
    }
  }
  return file;
}
function setObjProp(f, key, value) {
  Object.defineProperty(f, key, {
    value,
    writable: false,
    configurable: false,
    enumerable: true
  });
}

// ../../../node_modules/file-selector/dist/es2015/file-selector.js
var FILES_TO_IGNORE = [
  // Thumbnail cache files for macOS and Windows
  ".DS_Store",
  // macOs
  "Thumbs.db"
  // Windows
];
function fromEvent(evt) {
  return __awaiter(this, void 0, void 0, function* () {
    if (isObject(evt) && isDataTransfer(evt.dataTransfer)) {
      return getDataTransferFiles(evt.dataTransfer, evt.type);
    } else if (isChangeEvt(evt)) {
      return getInputFiles(evt);
    } else if (Array.isArray(evt) && evt.every((item) => "getFile" in item && typeof item.getFile === "function")) {
      return getFsHandleFiles(evt);
    }
    return [];
  });
}
function isDataTransfer(value) {
  return isObject(value);
}
function isChangeEvt(value) {
  return isObject(value) && isObject(value.target);
}
function isObject(v) {
  return typeof v === "object" && v !== null;
}
function getInputFiles(evt) {
  return fromList(evt.target.files).map((file) => toFileWithPath(file));
}
function getFsHandleFiles(handles) {
  return __awaiter(this, void 0, void 0, function* () {
    const files = yield Promise.all(handles.map((h) => h.getFile()));
    return files.map((file) => toFileWithPath(file));
  });
}
function getDataTransferFiles(dt, type) {
  return __awaiter(this, void 0, void 0, function* () {
    if (dt.items) {
      const items = fromList(dt.items).filter((item) => item.kind === "file");
      if (type !== "drop") {
        return items;
      }
      const files = yield Promise.all(items.map(toFilePromises));
      return noIgnoredFiles(flatten(files));
    }
    return noIgnoredFiles(fromList(dt.files).map((file) => toFileWithPath(file)));
  });
}
function noIgnoredFiles(files) {
  return files.filter((file) => FILES_TO_IGNORE.indexOf(file.name) === -1);
}
function fromList(items) {
  if (items === null) {
    return [];
  }
  const files = [];
  for (let i = 0; i < items.length; i++) {
    const file = items[i];
    files.push(file);
  }
  return files;
}
function toFilePromises(item) {
  if (typeof item.webkitGetAsEntry !== "function") {
    return fromDataTransferItem(item);
  }
  const entry = item.webkitGetAsEntry();
  if (entry && entry.isDirectory) {
    return fromDirEntry(entry);
  }
  return fromDataTransferItem(item, entry);
}
function flatten(items) {
  return items.reduce((acc, files) => [
    ...acc,
    ...Array.isArray(files) ? flatten(files) : [files]
  ], []);
}
function fromDataTransferItem(item, entry) {
  return __awaiter(this, void 0, void 0, function* () {
    var _a2;
    if (globalThis.isSecureContext && typeof item.getAsFileSystemHandle === "function") {
      const h = yield item.getAsFileSystemHandle();
      if (h === null) {
        throw new Error(`${item} is not a File`);
      }
      if (h !== void 0) {
        const file2 = yield h.getFile();
        file2.handle = h;
        return toFileWithPath(file2);
      }
    }
    const file = item.getAsFile();
    if (!file) {
      throw new Error(`${item} is not a File`);
    }
    const fwp = toFileWithPath(file, (_a2 = entry === null || entry === void 0 ? void 0 : entry.fullPath) !== null && _a2 !== void 0 ? _a2 : void 0);
    return fwp;
  });
}
function fromEntry(entry) {
  return __awaiter(this, void 0, void 0, function* () {
    return entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry);
  });
}
function fromDirEntry(entry) {
  const reader = entry.createReader();
  return new Promise((resolve, reject) => {
    const entries = [];
    function readEntries() {
      reader.readEntries((batch) => __awaiter(this, void 0, void 0, function* () {
        if (!batch.length) {
          try {
            const files = yield Promise.all(entries);
            resolve(files);
          } catch (err) {
            reject(err);
          }
        } else {
          const items = Promise.all(batch.map(fromEntry));
          entries.push(items);
          readEntries();
        }
      }), (err) => {
        reject(err);
      });
    }
    readEntries();
  });
}
function fromFileEntry(entry) {
  return __awaiter(this, void 0, void 0, function* () {
    return new Promise((resolve, reject) => {
      entry.file((file) => {
        const fwp = toFileWithPath(file, entry.fullPath);
        resolve(fwp);
      }, (err) => {
        reject(err);
      });
    });
  });
}

// ../../../node_modules/react-dropzone/dist/es/utils/index.js
var import_attr_accept = __toESM(require_es(), 1);
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
var accepts = typeof import_attr_accept.default === "function" ? import_attr_accept.default : import_attr_accept.default.default;
var FILE_INVALID_TYPE = "file-invalid-type";
var FILE_TOO_LARGE = "file-too-large";
var FILE_TOO_SMALL = "file-too-small";
var TOO_MANY_FILES = "too-many-files";
var getInvalidTypeRejectionErr = function getInvalidTypeRejectionErr2() {
  var accept = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var acceptArr = accept.split(",");
  var msg = acceptArr.length > 1 ? "one of ".concat(acceptArr.join(", ")) : acceptArr[0];
  return {
    code: FILE_INVALID_TYPE,
    message: "File type must be ".concat(msg)
  };
};
var getTooLargeRejectionErr = function getTooLargeRejectionErr2(maxSize) {
  return {
    code: FILE_TOO_LARGE,
    message: "File is larger than ".concat(maxSize, " ").concat(maxSize === 1 ? "byte" : "bytes")
  };
};
var getTooSmallRejectionErr = function getTooSmallRejectionErr2(minSize) {
  return {
    code: FILE_TOO_SMALL,
    message: "File is smaller than ".concat(minSize, " ").concat(minSize === 1 ? "byte" : "bytes")
  };
};
var TOO_MANY_FILES_REJECTION = {
  code: TOO_MANY_FILES,
  message: "Too many files"
};
function fileAccepted(file, accept) {
  var isAcceptable = file.type === "application/x-moz-file" || accepts(file, accept);
  return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];
}
function fileMatchSize(file, minSize, maxSize) {
  if (isDefined(file.size)) {
    if (isDefined(minSize) && isDefined(maxSize)) {
      if (file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];
      if (file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];
    } else if (isDefined(minSize) && file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];
    else if (isDefined(maxSize) && file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];
  }
  return [true, null];
}
function isDefined(value) {
  return value !== void 0 && value !== null;
}
function allFilesAccepted(_ref) {
  var files = _ref.files, accept = _ref.accept, minSize = _ref.minSize, maxSize = _ref.maxSize, multiple = _ref.multiple, maxFiles = _ref.maxFiles, validator = _ref.validator;
  if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {
    return false;
  }
  return files.every(function(file) {
    var _fileAccepted = fileAccepted(file, accept), _fileAccepted2 = _slicedToArray(_fileAccepted, 1), accepted = _fileAccepted2[0];
    var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray(_fileMatchSize, 1), sizeMatch = _fileMatchSize2[0];
    var customErrors = validator ? validator(file) : null;
    return accepted && sizeMatch && !customErrors;
  });
}
function isPropagationStopped(event) {
  if (typeof event.isPropagationStopped === "function") {
    return event.isPropagationStopped();
  } else if (typeof event.cancelBubble !== "undefined") {
    return event.cancelBubble;
  }
  return false;
}
function isEvtWithFiles(event) {
  if (!event.dataTransfer) {
    return !!event.target && !!event.target.files;
  }
  return Array.prototype.some.call(event.dataTransfer.types, function(type) {
    return type === "Files" || type === "application/x-moz-file";
  });
}
function onDocumentDragOver(event) {
  event.preventDefault();
}
function isIe(userAgent) {
  return userAgent.indexOf("MSIE") !== -1 || userAgent.indexOf("Trident/") !== -1;
}
function isEdge(userAgent) {
  return userAgent.indexOf("Edge/") !== -1;
}
function isIeOrEdge() {
  var userAgent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
  return isIe(userAgent) || isEdge(userAgent);
}
function composeEventHandlers2() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  return function(event) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }
    return fns.some(function(fn) {
      if (!isPropagationStopped(event) && fn) {
        fn.apply(void 0, [event].concat(args));
      }
      return isPropagationStopped(event);
    });
  };
}
function canUseFileSystemAccessAPI() {
  return "showOpenFilePicker" in window;
}
function pickerOptionsFromAccept(accept) {
  if (isDefined(accept)) {
    var acceptForPicker = Object.entries(accept).filter(function(_ref2) {
      var _ref3 = _slicedToArray(_ref2, 2), mimeType = _ref3[0], ext = _ref3[1];
      var ok = true;
      if (!isMIMEType(mimeType)) {
        console.warn('Skipped "'.concat(mimeType, '" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.'));
        ok = false;
      }
      if (!Array.isArray(ext) || !ext.every(isExt)) {
        console.warn('Skipped "'.concat(mimeType, '" because an invalid file extension was provided.'));
        ok = false;
      }
      return ok;
    }).reduce(function(agg, _ref4) {
      var _ref5 = _slicedToArray(_ref4, 2), mimeType = _ref5[0], ext = _ref5[1];
      return _objectSpread(_objectSpread({}, agg), {}, _defineProperty({}, mimeType, ext));
    }, {});
    return [{
      // description is required due to https://crbug.com/1264708
      description: "Files",
      accept: acceptForPicker
    }];
  }
  return accept;
}
function acceptPropAsAcceptAttr(accept) {
  if (isDefined(accept)) {
    return Object.entries(accept).reduce(function(a2, _ref6) {
      var _ref7 = _slicedToArray(_ref6, 2), mimeType = _ref7[0], ext = _ref7[1];
      return [].concat(_toConsumableArray(a2), [mimeType], _toConsumableArray(ext));
    }, []).filter(function(v) {
      return isMIMEType(v) || isExt(v);
    }).join(",");
  }
  return void 0;
}
function isAbort(v) {
  return v instanceof DOMException && (v.name === "AbortError" || v.code === v.ABORT_ERR);
}
function isSecurityError(v) {
  return v instanceof DOMException && (v.name === "SecurityError" || v.code === v.SECURITY_ERR);
}
function isMIMEType(v) {
  return v === "audio/*" || v === "video/*" || v === "image/*" || v === "text/*" || v === "application/*" || /\w+\/[-+.\w]+/g.test(v);
}
function isExt(v) {
  return /^.*\.[\w]+$/.test(v);
}

// ../../../node_modules/react-dropzone/dist/es/index.js
var _excluded = ["children"];
var _excluded2 = ["open"];
var _excluded3 = ["refKey", "role", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"];
var _excluded4 = ["refKey", "onChange", "onClick"];
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread2();
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray2(arr);
}
function _slicedToArray2(arr, i) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray2(o, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr)) return arr;
}
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys2(Object(source), true).forEach(function(key) {
      _defineProperty2(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
var Dropzone = (0, import_react4.forwardRef)(function(_ref, ref) {
  var children = _ref.children, params = _objectWithoutProperties(_ref, _excluded);
  var _useDropzone = useDropzone(params), open = _useDropzone.open, props = _objectWithoutProperties(_useDropzone, _excluded2);
  (0, import_react4.useImperativeHandle)(ref, function() {
    return {
      open
    };
  }, [open]);
  return import_react4.default.createElement(import_react4.Fragment, null, children(_objectSpread2(_objectSpread2({}, props), {}, {
    open
  })));
});
Dropzone.displayName = "Dropzone";
var defaultProps = {
  disabled: false,
  getFilesFromEvent: fromEvent,
  maxSize: Infinity,
  minSize: 0,
  multiple: true,
  maxFiles: 0,
  preventDropOnDocument: true,
  noClick: false,
  noKeyboard: false,
  noDrag: false,
  noDragEventsBubbling: false,
  validator: null,
  useFsAccessApi: false,
  autoFocus: false
};
Dropzone.defaultProps = defaultProps;
Dropzone.propTypes = {
  /**
   * Render function that exposes the dropzone state and prop getter fns
   *
   * @param {object} params
   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render
   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render
   * @param {Function} params.open Open the native file selection dialog
   * @param {boolean} params.isFocused Dropzone area is in focus
   * @param {boolean} params.isFileDialogActive File dialog is opened
   * @param {boolean} params.isDragActive Active drag is in progress
   * @param {boolean} params.isDragAccept Dragged files are accepted
   * @param {boolean} params.isDragReject Some dragged files are rejected
   * @param {File[]} params.acceptedFiles Accepted files
   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected
   */
  children: import_prop_types.default.func,
  /**
   * Set accepted file types.
   * Checkout https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker types option for more information.
   * Keep in mind that mime type determination is not reliable across platforms. CSV files,
   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
   * Windows. In some cases there might not be a mime type set at all (https://github.com/react-dropzone/react-dropzone/issues/276).
   */
  accept: import_prop_types.default.objectOf(import_prop_types.default.arrayOf(import_prop_types.default.string)),
  /**
   * Allow drag 'n' drop (or selection from the file dialog) of multiple files
   */
  multiple: import_prop_types.default.bool,
  /**
   * If false, allow dropped items to take over the current browser window
   */
  preventDropOnDocument: import_prop_types.default.bool,
  /**
   * If true, disables click to open the native file selection dialog
   */
  noClick: import_prop_types.default.bool,
  /**
   * If true, disables SPACE/ENTER to open the native file selection dialog.
   * Note that it also stops tracking the focus state.
   */
  noKeyboard: import_prop_types.default.bool,
  /**
   * If true, disables drag 'n' drop
   */
  noDrag: import_prop_types.default.bool,
  /**
   * If true, stops drag event propagation to parents
   */
  noDragEventsBubbling: import_prop_types.default.bool,
  /**
   * Minimum file size (in bytes)
   */
  minSize: import_prop_types.default.number,
  /**
   * Maximum file size (in bytes)
   */
  maxSize: import_prop_types.default.number,
  /**
   * Maximum accepted number of files
   * The default value is 0 which means there is no limitation to how many files are accepted.
   */
  maxFiles: import_prop_types.default.number,
  /**
   * Enable/disable the dropzone
   */
  disabled: import_prop_types.default.bool,
  /**
   * Use this to provide a custom file aggregator
   *
   * @param {(DragEvent|Event|Array<FileSystemFileHandle>)} event A drag event or input change event (if files were selected via the file dialog)
   */
  getFilesFromEvent: import_prop_types.default.func,
  /**
   * Cb for when closing the file dialog with no selection
   */
  onFileDialogCancel: import_prop_types.default.func,
  /**
   * Cb for when opening the file dialog
   */
  onFileDialogOpen: import_prop_types.default.func,
  /**
   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API
   * to open the file picker instead of using an `<input type="file">` click event.
   */
  useFsAccessApi: import_prop_types.default.bool,
  /**
   * Set to true to focus the root element on render
   */
  autoFocus: import_prop_types.default.bool,
  /**
   * Cb for when the `dragenter` event occurs.
   *
   * @param {DragEvent} event
   */
  onDragEnter: import_prop_types.default.func,
  /**
   * Cb for when the `dragleave` event occurs
   *
   * @param {DragEvent} event
   */
  onDragLeave: import_prop_types.default.func,
  /**
   * Cb for when the `dragover` event occurs
   *
   * @param {DragEvent} event
   */
  onDragOver: import_prop_types.default.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.
   *
   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.
   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.
   * If `multiple` is set to false and additional files are dropped,
   * all files besides the first will be rejected.
   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.
   *
   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.
   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.
   *
   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.
   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:
   *
   * ```js
   * function onDrop(acceptedFiles) {
   *   const req = request.post('/upload')
   *   acceptedFiles.forEach(file => {
   *     req.attach(file.name, file)
   *   })
   *   req.end(callback)
   * }
   * ```
   *
   * @param {File[]} acceptedFiles
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  onDrop: import_prop_types.default.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are accepted, this callback is not invoked.
   *
   * @param {File[]} files
   * @param {(DragEvent|Event)} event
   */
  onDropAccepted: import_prop_types.default.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are rejected, this callback is not invoked.
   *
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event
   */
  onDropRejected: import_prop_types.default.func,
  /**
   * Cb for when there's some error from any of the promises.
   *
   * @param {Error} error
   */
  onError: import_prop_types.default.func,
  /**
   * Custom validation function. It must return null if there's no errors.
   * @param {File} file
   * @returns {FileError|FileError[]|null}
   */
  validator: import_prop_types.default.func
};
var initialState = {
  isFocused: false,
  isFileDialogActive: false,
  isDragActive: false,
  isDragAccept: false,
  isDragReject: false,
  acceptedFiles: [],
  fileRejections: []
};
function useDropzone() {
  var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _defaultProps$props = _objectSpread2(_objectSpread2({}, defaultProps), props), accept = _defaultProps$props.accept, disabled = _defaultProps$props.disabled, getFilesFromEvent = _defaultProps$props.getFilesFromEvent, maxSize = _defaultProps$props.maxSize, minSize = _defaultProps$props.minSize, multiple = _defaultProps$props.multiple, maxFiles = _defaultProps$props.maxFiles, onDragEnter = _defaultProps$props.onDragEnter, onDragLeave = _defaultProps$props.onDragLeave, onDragOver = _defaultProps$props.onDragOver, onDrop = _defaultProps$props.onDrop, onDropAccepted = _defaultProps$props.onDropAccepted, onDropRejected = _defaultProps$props.onDropRejected, onFileDialogCancel = _defaultProps$props.onFileDialogCancel, onFileDialogOpen = _defaultProps$props.onFileDialogOpen, useFsAccessApi = _defaultProps$props.useFsAccessApi, autoFocus = _defaultProps$props.autoFocus, preventDropOnDocument = _defaultProps$props.preventDropOnDocument, noClick = _defaultProps$props.noClick, noKeyboard = _defaultProps$props.noKeyboard, noDrag = _defaultProps$props.noDrag, noDragEventsBubbling = _defaultProps$props.noDragEventsBubbling, onError = _defaultProps$props.onError, validator = _defaultProps$props.validator;
  var acceptAttr = (0, import_react4.useMemo)(function() {
    return acceptPropAsAcceptAttr(accept);
  }, [accept]);
  var pickerTypes = (0, import_react4.useMemo)(function() {
    return pickerOptionsFromAccept(accept);
  }, [accept]);
  var onFileDialogOpenCb = (0, import_react4.useMemo)(function() {
    return typeof onFileDialogOpen === "function" ? onFileDialogOpen : noop;
  }, [onFileDialogOpen]);
  var onFileDialogCancelCb = (0, import_react4.useMemo)(function() {
    return typeof onFileDialogCancel === "function" ? onFileDialogCancel : noop;
  }, [onFileDialogCancel]);
  var rootRef = (0, import_react4.useRef)(null);
  var inputRef = (0, import_react4.useRef)(null);
  var _useReducer = (0, import_react4.useReducer)(reducer, initialState), _useReducer2 = _slicedToArray2(_useReducer, 2), state = _useReducer2[0], dispatch = _useReducer2[1];
  var isFocused = state.isFocused, isFileDialogActive = state.isFileDialogActive;
  var fsAccessApiWorksRef = (0, import_react4.useRef)(typeof window !== "undefined" && window.isSecureContext && useFsAccessApi && canUseFileSystemAccessAPI());
  var onWindowFocus = function onWindowFocus2() {
    if (!fsAccessApiWorksRef.current && isFileDialogActive) {
      setTimeout(function() {
        if (inputRef.current) {
          var files = inputRef.current.files;
          if (!files.length) {
            dispatch({
              type: "closeDialog"
            });
            onFileDialogCancelCb();
          }
        }
      }, 300);
    }
  };
  (0, import_react4.useEffect)(function() {
    window.addEventListener("focus", onWindowFocus, false);
    return function() {
      window.removeEventListener("focus", onWindowFocus, false);
    };
  }, [inputRef, isFileDialogActive, onFileDialogCancelCb, fsAccessApiWorksRef]);
  var dragTargetsRef = (0, import_react4.useRef)([]);
  var onDocumentDrop = function onDocumentDrop2(event) {
    if (rootRef.current && rootRef.current.contains(event.target)) {
      return;
    }
    event.preventDefault();
    dragTargetsRef.current = [];
  };
  (0, import_react4.useEffect)(function() {
    if (preventDropOnDocument) {
      document.addEventListener("dragover", onDocumentDragOver, false);
      document.addEventListener("drop", onDocumentDrop, false);
    }
    return function() {
      if (preventDropOnDocument) {
        document.removeEventListener("dragover", onDocumentDragOver);
        document.removeEventListener("drop", onDocumentDrop);
      }
    };
  }, [rootRef, preventDropOnDocument]);
  (0, import_react4.useEffect)(function() {
    if (!disabled && autoFocus && rootRef.current) {
      rootRef.current.focus();
    }
    return function() {
    };
  }, [rootRef, autoFocus, disabled]);
  var onErrCb = (0, import_react4.useCallback)(function(e) {
    if (onError) {
      onError(e);
    } else {
      console.error(e);
    }
  }, [onError]);
  var onDragEnterCb = (0, import_react4.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    dragTargetsRef.current = [].concat(_toConsumableArray2(dragTargetsRef.current), [event.target]);
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(files) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        var fileCount = files.length;
        var isDragAccept = fileCount > 0 && allFilesAccepted({
          files,
          accept: acceptAttr,
          minSize,
          maxSize,
          multiple,
          maxFiles,
          validator
        });
        var isDragReject = fileCount > 0 && !isDragAccept;
        dispatch({
          isDragAccept,
          isDragReject,
          isDragActive: true,
          type: "setDraggedFiles"
        });
        if (onDragEnter) {
          onDragEnter(event);
        }
      }).catch(function(e) {
        return onErrCb(e);
      });
    }
  }, [getFilesFromEvent, onDragEnter, onErrCb, noDragEventsBubbling, acceptAttr, minSize, maxSize, multiple, maxFiles, validator]);
  var onDragOverCb = (0, import_react4.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    var hasFiles = isEvtWithFiles(event);
    if (hasFiles && event.dataTransfer) {
      try {
        event.dataTransfer.dropEffect = "copy";
      } catch (_unused) {
      }
    }
    if (hasFiles && onDragOver) {
      onDragOver(event);
    }
    return false;
  }, [onDragOver, noDragEventsBubbling]);
  var onDragLeaveCb = (0, import_react4.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    var targets = dragTargetsRef.current.filter(function(target) {
      return rootRef.current && rootRef.current.contains(target);
    });
    var targetIdx = targets.indexOf(event.target);
    if (targetIdx !== -1) {
      targets.splice(targetIdx, 1);
    }
    dragTargetsRef.current = targets;
    if (targets.length > 0) {
      return;
    }
    dispatch({
      type: "setDraggedFiles",
      isDragActive: false,
      isDragAccept: false,
      isDragReject: false
    });
    if (isEvtWithFiles(event) && onDragLeave) {
      onDragLeave(event);
    }
  }, [rootRef, onDragLeave, noDragEventsBubbling]);
  var setFiles = (0, import_react4.useCallback)(function(files, event) {
    var acceptedFiles = [];
    var fileRejections = [];
    files.forEach(function(file) {
      var _fileAccepted = fileAccepted(file, acceptAttr), _fileAccepted2 = _slicedToArray2(_fileAccepted, 2), accepted = _fileAccepted2[0], acceptError = _fileAccepted2[1];
      var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray2(_fileMatchSize, 2), sizeMatch = _fileMatchSize2[0], sizeError = _fileMatchSize2[1];
      var customErrors = validator ? validator(file) : null;
      if (accepted && sizeMatch && !customErrors) {
        acceptedFiles.push(file);
      } else {
        var errors2 = [acceptError, sizeError];
        if (customErrors) {
          errors2 = errors2.concat(customErrors);
        }
        fileRejections.push({
          file,
          errors: errors2.filter(function(e) {
            return e;
          })
        });
      }
    });
    if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {
      acceptedFiles.forEach(function(file) {
        fileRejections.push({
          file,
          errors: [TOO_MANY_FILES_REJECTION]
        });
      });
      acceptedFiles.splice(0);
    }
    dispatch({
      acceptedFiles,
      fileRejections,
      isDragReject: fileRejections.length > 0,
      type: "setFiles"
    });
    if (onDrop) {
      onDrop(acceptedFiles, fileRejections, event);
    }
    if (fileRejections.length > 0 && onDropRejected) {
      onDropRejected(fileRejections, event);
    }
    if (acceptedFiles.length > 0 && onDropAccepted) {
      onDropAccepted(acceptedFiles, event);
    }
  }, [dispatch, multiple, acceptAttr, minSize, maxSize, maxFiles, onDrop, onDropAccepted, onDropRejected, validator]);
  var onDropCb = (0, import_react4.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    dragTargetsRef.current = [];
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(files) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        setFiles(files, event);
      }).catch(function(e) {
        return onErrCb(e);
      });
    }
    dispatch({
      type: "reset"
    });
  }, [getFilesFromEvent, setFiles, onErrCb, noDragEventsBubbling]);
  var openFileDialog = (0, import_react4.useCallback)(function() {
    if (fsAccessApiWorksRef.current) {
      dispatch({
        type: "openDialog"
      });
      onFileDialogOpenCb();
      var opts = {
        multiple,
        types: pickerTypes
      };
      window.showOpenFilePicker(opts).then(function(handles) {
        return getFilesFromEvent(handles);
      }).then(function(files) {
        setFiles(files, null);
        dispatch({
          type: "closeDialog"
        });
      }).catch(function(e) {
        if (isAbort(e)) {
          onFileDialogCancelCb(e);
          dispatch({
            type: "closeDialog"
          });
        } else if (isSecurityError(e)) {
          fsAccessApiWorksRef.current = false;
          if (inputRef.current) {
            inputRef.current.value = null;
            inputRef.current.click();
          } else {
            onErrCb(new Error("Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided."));
          }
        } else {
          onErrCb(e);
        }
      });
      return;
    }
    if (inputRef.current) {
      dispatch({
        type: "openDialog"
      });
      onFileDialogOpenCb();
      inputRef.current.value = null;
      inputRef.current.click();
    }
  }, [dispatch, onFileDialogOpenCb, onFileDialogCancelCb, useFsAccessApi, setFiles, onErrCb, pickerTypes, multiple]);
  var onKeyDownCb = (0, import_react4.useCallback)(function(event) {
    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {
      return;
    }
    if (event.key === " " || event.key === "Enter" || event.keyCode === 32 || event.keyCode === 13) {
      event.preventDefault();
      openFileDialog();
    }
  }, [rootRef, openFileDialog]);
  var onFocusCb = (0, import_react4.useCallback)(function() {
    dispatch({
      type: "focus"
    });
  }, []);
  var onBlurCb = (0, import_react4.useCallback)(function() {
    dispatch({
      type: "blur"
    });
  }, []);
  var onClickCb = (0, import_react4.useCallback)(function() {
    if (noClick) {
      return;
    }
    if (isIeOrEdge()) {
      setTimeout(openFileDialog, 0);
    } else {
      openFileDialog();
    }
  }, [noClick, openFileDialog]);
  var composeHandler = function composeHandler2(fn) {
    return disabled ? null : fn;
  };
  var composeKeyboardHandler = function composeKeyboardHandler2(fn) {
    return noKeyboard ? null : composeHandler(fn);
  };
  var composeDragHandler = function composeDragHandler2(fn) {
    return noDrag ? null : composeHandler(fn);
  };
  var stopPropagation = function stopPropagation2(event) {
    if (noDragEventsBubbling) {
      event.stopPropagation();
    }
  };
  var getRootProps = (0, import_react4.useMemo)(function() {
    return function() {
      var _ref2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref2$refKey = _ref2.refKey, refKey = _ref2$refKey === void 0 ? "ref" : _ref2$refKey, role = _ref2.role, onKeyDown = _ref2.onKeyDown, onFocus = _ref2.onFocus, onBlur = _ref2.onBlur, onClick = _ref2.onClick, onDragEnter2 = _ref2.onDragEnter, onDragOver2 = _ref2.onDragOver, onDragLeave2 = _ref2.onDragLeave, onDrop2 = _ref2.onDrop, rest = _objectWithoutProperties(_ref2, _excluded3);
      return _objectSpread2(_objectSpread2(_defineProperty2({
        onKeyDown: composeKeyboardHandler(composeEventHandlers2(onKeyDown, onKeyDownCb)),
        onFocus: composeKeyboardHandler(composeEventHandlers2(onFocus, onFocusCb)),
        onBlur: composeKeyboardHandler(composeEventHandlers2(onBlur, onBlurCb)),
        onClick: composeHandler(composeEventHandlers2(onClick, onClickCb)),
        onDragEnter: composeDragHandler(composeEventHandlers2(onDragEnter2, onDragEnterCb)),
        onDragOver: composeDragHandler(composeEventHandlers2(onDragOver2, onDragOverCb)),
        onDragLeave: composeDragHandler(composeEventHandlers2(onDragLeave2, onDragLeaveCb)),
        onDrop: composeDragHandler(composeEventHandlers2(onDrop2, onDropCb)),
        role: typeof role === "string" && role !== "" ? role : "presentation"
      }, refKey, rootRef), !disabled && !noKeyboard ? {
        tabIndex: 0
      } : {}), rest);
    };
  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);
  var onInputElementClick = (0, import_react4.useCallback)(function(event) {
    event.stopPropagation();
  }, []);
  var getInputProps = (0, import_react4.useMemo)(function() {
    return function() {
      var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref3$refKey = _ref3.refKey, refKey = _ref3$refKey === void 0 ? "ref" : _ref3$refKey, onChange = _ref3.onChange, onClick = _ref3.onClick, rest = _objectWithoutProperties(_ref3, _excluded4);
      var inputProps = _defineProperty2({
        accept: acceptAttr,
        multiple,
        type: "file",
        style: {
          border: 0,
          clip: "rect(0, 0, 0, 0)",
          clipPath: "inset(50%)",
          height: "1px",
          margin: "0 -1px -1px 0",
          overflow: "hidden",
          padding: 0,
          position: "absolute",
          width: "1px",
          whiteSpace: "nowrap"
        },
        onChange: composeHandler(composeEventHandlers2(onChange, onDropCb)),
        onClick: composeHandler(composeEventHandlers2(onClick, onInputElementClick)),
        tabIndex: -1
      }, refKey, inputRef);
      return _objectSpread2(_objectSpread2({}, inputProps), rest);
    };
  }, [inputRef, accept, multiple, onDropCb, disabled]);
  return _objectSpread2(_objectSpread2({}, state), {}, {
    isFocused: isFocused && !disabled,
    getRootProps,
    getInputProps,
    rootRef,
    inputRef,
    open: composeHandler(openFileDialog)
  });
}
function reducer(state, action) {
  switch (action.type) {
    case "focus":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFocused: true
      });
    case "blur":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFocused: false
      });
    case "openDialog":
      return _objectSpread2(_objectSpread2({}, initialState), {}, {
        isFileDialogActive: true
      });
    case "closeDialog":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFileDialogActive: false
      });
    case "setDraggedFiles":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isDragActive: action.isDragActive,
        isDragAccept: action.isDragAccept,
        isDragReject: action.isDragReject
      });
    case "setFiles":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        acceptedFiles: action.acceptedFiles,
        fileRejections: action.fileRejections,
        isDragReject: action.isDragReject
      });
    case "reset":
      return _objectSpread2({}, initialState);
    default:
      return state;
  }
}
function noop() {
}

// ../../../node_modules/@radix-ui/react-label/dist/index.mjs
var React34 = __toESM(require_react(), 1);
var import_jsx_runtime11 = __toESM(require_jsx_runtime(), 1);
var NAME2 = "Label";
var Label = React34.forwardRef((props, forwardedRef) => {
  return (0, import_jsx_runtime11.jsx)(
    Primitive.label,
    {
      ...props,
      ref: forwardedRef,
      onMouseDown: (event) => {
        var _a2;
        const target = event.target;
        if (target.closest("button, input, select, textarea")) return;
        (_a2 = props.onMouseDown) == null ? void 0 : _a2.call(props, event);
        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();
      }
    }
  );
});
Label.displayName = NAME2;
var Root5 = Label;

// ../../../node_modules/@firecms/ui/dist/index.es.js
var import_react_fast_compare = __toESM(require_react_fast_compare());

// ../../../node_modules/markdown-it/lib/common/utils.mjs
var utils_exports = {};
__export(utils_exports, {
  arrayReplaceAt: () => arrayReplaceAt,
  assign: () => assign,
  escapeHtml: () => escapeHtml,
  escapeRE: () => escapeRE,
  fromCodePoint: () => fromCodePoint2,
  has: () => has,
  isMdAsciiPunct: () => isMdAsciiPunct,
  isPunctChar: () => isPunctChar,
  isSpace: () => isSpace,
  isString: () => isString,
  isValidEntityCode: () => isValidEntityCode,
  isWhiteSpace: () => isWhiteSpace,
  lib: () => lib,
  normalizeReference: () => normalizeReference,
  unescapeAll: () => unescapeAll,
  unescapeMd: () => unescapeMd
});

// ../../../node_modules/mdurl/index.mjs
var mdurl_exports = {};
__export(mdurl_exports, {
  decode: () => decode_default,
  encode: () => encode_default,
  format: () => format,
  parse: () => parse_default
});

// ../../../node_modules/mdurl/lib/decode.mjs
var decodeCache = {};
function getDecodeCache(exclude) {
  let cache = decodeCache[exclude];
  if (cache) {
    return cache;
  }
  cache = decodeCache[exclude] = [];
  for (let i = 0; i < 128; i++) {
    const ch = String.fromCharCode(i);
    cache.push(ch);
  }
  for (let i = 0; i < exclude.length; i++) {
    const ch = exclude.charCodeAt(i);
    cache[ch] = "%" + ("0" + ch.toString(16).toUpperCase()).slice(-2);
  }
  return cache;
}
function decode(string, exclude) {
  if (typeof exclude !== "string") {
    exclude = decode.defaultChars;
  }
  const cache = getDecodeCache(exclude);
  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {
    let result = "";
    for (let i = 0, l = seq.length; i < l; i += 3) {
      const b1 = parseInt(seq.slice(i + 1, i + 3), 16);
      if (b1 < 128) {
        result += cache[b1];
        continue;
      }
      if ((b1 & 224) === 192 && i + 3 < l) {
        const b2 = parseInt(seq.slice(i + 4, i + 6), 16);
        if ((b2 & 192) === 128) {
          const chr = b1 << 6 & 1984 | b2 & 63;
          if (chr < 128) {
            result += "��";
          } else {
            result += String.fromCharCode(chr);
          }
          i += 3;
          continue;
        }
      }
      if ((b1 & 240) === 224 && i + 6 < l) {
        const b2 = parseInt(seq.slice(i + 4, i + 6), 16);
        const b3 = parseInt(seq.slice(i + 7, i + 9), 16);
        if ((b2 & 192) === 128 && (b3 & 192) === 128) {
          const chr = b1 << 12 & 61440 | b2 << 6 & 4032 | b3 & 63;
          if (chr < 2048 || chr >= 55296 && chr <= 57343) {
            result += "���";
          } else {
            result += String.fromCharCode(chr);
          }
          i += 6;
          continue;
        }
      }
      if ((b1 & 248) === 240 && i + 9 < l) {
        const b2 = parseInt(seq.slice(i + 4, i + 6), 16);
        const b3 = parseInt(seq.slice(i + 7, i + 9), 16);
        const b4 = parseInt(seq.slice(i + 10, i + 12), 16);
        if ((b2 & 192) === 128 && (b3 & 192) === 128 && (b4 & 192) === 128) {
          let chr = b1 << 18 & 1835008 | b2 << 12 & 258048 | b3 << 6 & 4032 | b4 & 63;
          if (chr < 65536 || chr > 1114111) {
            result += "����";
          } else {
            chr -= 65536;
            result += String.fromCharCode(55296 + (chr >> 10), 56320 + (chr & 1023));
          }
          i += 9;
          continue;
        }
      }
      result += "�";
    }
    return result;
  });
}
decode.defaultChars = ";/?:@&=+$,#";
decode.componentChars = "";
var decode_default = decode;

// ../../../node_modules/mdurl/lib/encode.mjs
var encodeCache = {};
function getEncodeCache(exclude) {
  let cache = encodeCache[exclude];
  if (cache) {
    return cache;
  }
  cache = encodeCache[exclude] = [];
  for (let i = 0; i < 128; i++) {
    const ch = String.fromCharCode(i);
    if (/^[0-9a-z]$/i.test(ch)) {
      cache.push(ch);
    } else {
      cache.push("%" + ("0" + i.toString(16).toUpperCase()).slice(-2));
    }
  }
  for (let i = 0; i < exclude.length; i++) {
    cache[exclude.charCodeAt(i)] = exclude[i];
  }
  return cache;
}
function encode(string, exclude, keepEscaped) {
  if (typeof exclude !== "string") {
    keepEscaped = exclude;
    exclude = encode.defaultChars;
  }
  if (typeof keepEscaped === "undefined") {
    keepEscaped = true;
  }
  const cache = getEncodeCache(exclude);
  let result = "";
  for (let i = 0, l = string.length; i < l; i++) {
    const code2 = string.charCodeAt(i);
    if (keepEscaped && code2 === 37 && i + 2 < l) {
      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {
        result += string.slice(i, i + 3);
        i += 2;
        continue;
      }
    }
    if (code2 < 128) {
      result += cache[code2];
      continue;
    }
    if (code2 >= 55296 && code2 <= 57343) {
      if (code2 >= 55296 && code2 <= 56319 && i + 1 < l) {
        const nextCode = string.charCodeAt(i + 1);
        if (nextCode >= 56320 && nextCode <= 57343) {
          result += encodeURIComponent(string[i] + string[i + 1]);
          i++;
          continue;
        }
      }
      result += "%EF%BF%BD";
      continue;
    }
    result += encodeURIComponent(string[i]);
  }
  return result;
}
encode.defaultChars = ";/?:@&=+$,-_.!~*'()#";
encode.componentChars = "-_.!~*'()";
var encode_default = encode;

// ../../../node_modules/mdurl/lib/format.mjs
function format(url) {
  let result = "";
  result += url.protocol || "";
  result += url.slashes ? "//" : "";
  result += url.auth ? url.auth + "@" : "";
  if (url.hostname && url.hostname.indexOf(":") !== -1) {
    result += "[" + url.hostname + "]";
  } else {
    result += url.hostname || "";
  }
  result += url.port ? ":" + url.port : "";
  result += url.pathname || "";
  result += url.search || "";
  result += url.hash || "";
  return result;
}

// ../../../node_modules/mdurl/lib/parse.mjs
function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.pathname = null;
}
var protocolPattern = /^([a-z0-9.+-]+:)/i;
var portPattern = /:[0-9]*$/;
var simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/;
var delims = ["<", ">", '"', "`", " ", "\r", "\n", "	"];
var unwise = ["{", "}", "|", "\\", "^", "`"].concat(delims);
var autoEscape = ["'"].concat(unwise);
var nonHostChars = ["%", "/", "?", ";", "#"].concat(autoEscape);
var hostEndingChars = ["/", "?", "#"];
var hostnameMaxLen = 255;
var hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/;
var hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/;
var hostlessProtocol = {
  javascript: true,
  "javascript:": true
};
var slashedProtocol = {
  http: true,
  https: true,
  ftp: true,
  gopher: true,
  file: true,
  "http:": true,
  "https:": true,
  "ftp:": true,
  "gopher:": true,
  "file:": true
};
function urlParse(url, slashesDenoteHost) {
  if (url && url instanceof Url) return url;
  const u2 = new Url();
  u2.parse(url, slashesDenoteHost);
  return u2;
}
Url.prototype.parse = function(url, slashesDenoteHost) {
  let lowerProto, hec, slashes;
  let rest = url;
  rest = rest.trim();
  if (!slashesDenoteHost && url.split("#").length === 1) {
    const simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
      }
      return this;
    }
  }
  let proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    lowerProto = proto.toLowerCase();
    this.protocol = proto;
    rest = rest.substr(proto.length);
  }
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    slashes = rest.substr(0, 2) === "//";
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }
  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {
    let hostEnd = -1;
    for (let i = 0; i < hostEndingChars.length; i++) {
      hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {
        hostEnd = hec;
      }
    }
    let auth, atSign;
    if (hostEnd === -1) {
      atSign = rest.lastIndexOf("@");
    } else {
      atSign = rest.lastIndexOf("@", hostEnd);
    }
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = auth;
    }
    hostEnd = -1;
    for (let i = 0; i < nonHostChars.length; i++) {
      hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {
        hostEnd = hec;
      }
    }
    if (hostEnd === -1) {
      hostEnd = rest.length;
    }
    if (rest[hostEnd - 1] === ":") {
      hostEnd--;
    }
    const host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);
    this.parseHost(host);
    this.hostname = this.hostname || "";
    const ipv6Hostname = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
    if (!ipv6Hostname) {
      const hostparts = this.hostname.split(/\./);
      for (let i = 0, l = hostparts.length; i < l; i++) {
        const part = hostparts[i];
        if (!part) {
          continue;
        }
        if (!part.match(hostnamePartPattern)) {
          let newpart = "";
          for (let j = 0, k2 = part.length; j < k2; j++) {
            if (part.charCodeAt(j) > 127) {
              newpart += "x";
            } else {
              newpart += part[j];
            }
          }
          if (!newpart.match(hostnamePartPattern)) {
            const validParts = hostparts.slice(0, i);
            const notHost = hostparts.slice(i + 1);
            const bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = notHost.join(".") + rest;
            }
            this.hostname = validParts.join(".");
            break;
          }
        }
      }
    }
    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = "";
    }
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
    }
  }
  const hash = rest.indexOf("#");
  if (hash !== -1) {
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  const qm = rest.indexOf("?");
  if (qm !== -1) {
    this.search = rest.substr(qm);
    rest = rest.slice(0, qm);
  }
  if (rest) {
    this.pathname = rest;
  }
  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
    this.pathname = "";
  }
  return this;
};
Url.prototype.parseHost = function(host) {
  let port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ":") {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) {
    this.hostname = host;
  }
};
var parse_default = urlParse;

// ../../../node_modules/uc.micro/index.mjs
var uc_exports = {};
__export(uc_exports, {
  Any: () => regex_default,
  Cc: () => regex_default2,
  Cf: () => regex_default3,
  P: () => regex_default4,
  S: () => regex_default5,
  Z: () => regex_default6
});

// ../../../node_modules/uc.micro/properties/Any/regex.mjs
var regex_default = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;

// ../../../node_modules/uc.micro/categories/Cc/regex.mjs
var regex_default2 = /[\0-\x1F\x7F-\x9F]/;

// ../../../node_modules/uc.micro/categories/Cf/regex.mjs
var regex_default3 = /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u0890\u0891\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD80D[\uDC30-\uDC3F]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/;

// ../../../node_modules/uc.micro/categories/P/regex.mjs
var regex_default4 = /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061D-\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1B7D\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52-\u2E5D\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/;

// ../../../node_modules/uc.micro/categories/S/regex.mjs
var regex_default5 = /[\$\+<->\^`\|~\xA2-\xA6\xA8\xA9\xAC\xAE-\xB1\xB4\xB8\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0384\u0385\u03F6\u0482\u058D-\u058F\u0606-\u0608\u060B\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u07FE\u07FF\u0888\u09F2\u09F3\u09FA\u09FB\u0AF1\u0B70\u0BF3-\u0BFA\u0C7F\u0D4F\u0D79\u0E3F\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u166D\u17DB\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2044\u2052\u207A-\u207C\u208A-\u208C\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2307\u230C-\u2328\u232B-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2767\u2794-\u27C4\u27C7-\u27E5\u27F0-\u2982\u2999-\u29D7\u29DC-\u29FB\u29FE-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2E50\u2E51\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFF\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u309B\u309C\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uAA77-\uAA79\uAB5B\uAB6A\uAB6B\uFB29\uFBB2-\uFBC2\uFD40-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE62\uFE64-\uFE66\uFE69\uFF04\uFF0B\uFF1C-\uFF1E\uFF3E\uFF40\uFF5C\uFF5E\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|\uD805\uDF3F|\uD807[\uDFD5-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|\uD82F\uDC9C|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|\uD838[\uDD4F\uDEFF]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC5\uDECE-\uDEDB\uDEE0-\uDEE8\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFCA]/;

// ../../../node_modules/uc.micro/categories/Z/regex.mjs
var regex_default6 = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/;

// ../../../node_modules/entities/lib/esm/generated/decode-data-html.js
var decode_data_html_default = new Uint16Array(
  // prettier-ignore
  'ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map((c2) => c2.charCodeAt(0))
);

// ../../../node_modules/entities/lib/esm/generated/decode-data-xml.js
var decode_data_xml_default = new Uint16Array(
  // prettier-ignore
  "Ȁaglq	\x1Bɭ\0\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map((c2) => c2.charCodeAt(0))
);

// ../../../node_modules/entities/lib/esm/decode_codepoint.js
var _a;
var decodeMap = /* @__PURE__ */ new Map([
  [0, 65533],
  // C1 Unicode control character reference replacements
  [128, 8364],
  [130, 8218],
  [131, 402],
  [132, 8222],
  [133, 8230],
  [134, 8224],
  [135, 8225],
  [136, 710],
  [137, 8240],
  [138, 352],
  [139, 8249],
  [140, 338],
  [142, 381],
  [145, 8216],
  [146, 8217],
  [147, 8220],
  [148, 8221],
  [149, 8226],
  [150, 8211],
  [151, 8212],
  [152, 732],
  [153, 8482],
  [154, 353],
  [155, 8250],
  [156, 339],
  [158, 382],
  [159, 376]
]);
var fromCodePoint = (
  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins
  (_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function(codePoint) {
    let output = "";
    if (codePoint > 65535) {
      codePoint -= 65536;
      output += String.fromCharCode(codePoint >>> 10 & 1023 | 55296);
      codePoint = 56320 | codePoint & 1023;
    }
    output += String.fromCharCode(codePoint);
    return output;
  }
);
function replaceCodePoint(codePoint) {
  var _a2;
  if (codePoint >= 55296 && codePoint <= 57343 || codePoint > 1114111) {
    return 65533;
  }
  return (_a2 = decodeMap.get(codePoint)) !== null && _a2 !== void 0 ? _a2 : codePoint;
}

// ../../../node_modules/entities/lib/esm/decode.js
var CharCodes;
(function(CharCodes2) {
  CharCodes2[CharCodes2["NUM"] = 35] = "NUM";
  CharCodes2[CharCodes2["SEMI"] = 59] = "SEMI";
  CharCodes2[CharCodes2["EQUALS"] = 61] = "EQUALS";
  CharCodes2[CharCodes2["ZERO"] = 48] = "ZERO";
  CharCodes2[CharCodes2["NINE"] = 57] = "NINE";
  CharCodes2[CharCodes2["LOWER_A"] = 97] = "LOWER_A";
  CharCodes2[CharCodes2["LOWER_F"] = 102] = "LOWER_F";
  CharCodes2[CharCodes2["LOWER_X"] = 120] = "LOWER_X";
  CharCodes2[CharCodes2["LOWER_Z"] = 122] = "LOWER_Z";
  CharCodes2[CharCodes2["UPPER_A"] = 65] = "UPPER_A";
  CharCodes2[CharCodes2["UPPER_F"] = 70] = "UPPER_F";
  CharCodes2[CharCodes2["UPPER_Z"] = 90] = "UPPER_Z";
})(CharCodes || (CharCodes = {}));
var TO_LOWER_BIT = 32;
var BinTrieFlags;
(function(BinTrieFlags2) {
  BinTrieFlags2[BinTrieFlags2["VALUE_LENGTH"] = 49152] = "VALUE_LENGTH";
  BinTrieFlags2[BinTrieFlags2["BRANCH_LENGTH"] = 16256] = "BRANCH_LENGTH";
  BinTrieFlags2[BinTrieFlags2["JUMP_TABLE"] = 127] = "JUMP_TABLE";
})(BinTrieFlags || (BinTrieFlags = {}));
function isNumber2(code2) {
  return code2 >= CharCodes.ZERO && code2 <= CharCodes.NINE;
}
function isHexadecimalCharacter(code2) {
  return code2 >= CharCodes.UPPER_A && code2 <= CharCodes.UPPER_F || code2 >= CharCodes.LOWER_A && code2 <= CharCodes.LOWER_F;
}
function isAsciiAlphaNumeric(code2) {
  return code2 >= CharCodes.UPPER_A && code2 <= CharCodes.UPPER_Z || code2 >= CharCodes.LOWER_A && code2 <= CharCodes.LOWER_Z || isNumber2(code2);
}
function isEntityInAttributeInvalidEnd(code2) {
  return code2 === CharCodes.EQUALS || isAsciiAlphaNumeric(code2);
}
var EntityDecoderState;
(function(EntityDecoderState2) {
  EntityDecoderState2[EntityDecoderState2["EntityStart"] = 0] = "EntityStart";
  EntityDecoderState2[EntityDecoderState2["NumericStart"] = 1] = "NumericStart";
  EntityDecoderState2[EntityDecoderState2["NumericDecimal"] = 2] = "NumericDecimal";
  EntityDecoderState2[EntityDecoderState2["NumericHex"] = 3] = "NumericHex";
  EntityDecoderState2[EntityDecoderState2["NamedEntity"] = 4] = "NamedEntity";
})(EntityDecoderState || (EntityDecoderState = {}));
var DecodingMode;
(function(DecodingMode2) {
  DecodingMode2[DecodingMode2["Legacy"] = 0] = "Legacy";
  DecodingMode2[DecodingMode2["Strict"] = 1] = "Strict";
  DecodingMode2[DecodingMode2["Attribute"] = 2] = "Attribute";
})(DecodingMode || (DecodingMode = {}));
var EntityDecoder = class {
  constructor(decodeTree, emitCodePoint, errors2) {
    this.decodeTree = decodeTree;
    this.emitCodePoint = emitCodePoint;
    this.errors = errors2;
    this.state = EntityDecoderState.EntityStart;
    this.consumed = 1;
    this.result = 0;
    this.treeIndex = 0;
    this.excess = 1;
    this.decodeMode = DecodingMode.Strict;
  }
  /** Resets the instance to make it reusable. */
  startEntity(decodeMode) {
    this.decodeMode = decodeMode;
    this.state = EntityDecoderState.EntityStart;
    this.result = 0;
    this.treeIndex = 0;
    this.excess = 1;
    this.consumed = 1;
  }
  /**
   * Write an entity to the decoder. This can be called multiple times with partial entities.
   * If the entity is incomplete, the decoder will return -1.
   *
   * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the
   * entity is incomplete, and resume when the next string is written.
   *
   * @param string The string containing the entity (or a continuation of the entity).
   * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  write(str, offset4) {
    switch (this.state) {
      case EntityDecoderState.EntityStart: {
        if (str.charCodeAt(offset4) === CharCodes.NUM) {
          this.state = EntityDecoderState.NumericStart;
          this.consumed += 1;
          return this.stateNumericStart(str, offset4 + 1);
        }
        this.state = EntityDecoderState.NamedEntity;
        return this.stateNamedEntity(str, offset4);
      }
      case EntityDecoderState.NumericStart: {
        return this.stateNumericStart(str, offset4);
      }
      case EntityDecoderState.NumericDecimal: {
        return this.stateNumericDecimal(str, offset4);
      }
      case EntityDecoderState.NumericHex: {
        return this.stateNumericHex(str, offset4);
      }
      case EntityDecoderState.NamedEntity: {
        return this.stateNamedEntity(str, offset4);
      }
    }
  }
  /**
   * Switches between the numeric decimal and hexadecimal states.
   *
   * Equivalent to the `Numeric character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericStart(str, offset4) {
    if (offset4 >= str.length) {
      return -1;
    }
    if ((str.charCodeAt(offset4) | TO_LOWER_BIT) === CharCodes.LOWER_X) {
      this.state = EntityDecoderState.NumericHex;
      this.consumed += 1;
      return this.stateNumericHex(str, offset4 + 1);
    }
    this.state = EntityDecoderState.NumericDecimal;
    return this.stateNumericDecimal(str, offset4);
  }
  addToNumericResult(str, start, end, base2) {
    if (start !== end) {
      const digitCount = end - start;
      this.result = this.result * Math.pow(base2, digitCount) + parseInt(str.substr(start, digitCount), base2);
      this.consumed += digitCount;
    }
  }
  /**
   * Parses a hexadecimal numeric entity.
   *
   * Equivalent to the `Hexademical character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericHex(str, offset4) {
    const startIdx = offset4;
    while (offset4 < str.length) {
      const char = str.charCodeAt(offset4);
      if (isNumber2(char) || isHexadecimalCharacter(char)) {
        offset4 += 1;
      } else {
        this.addToNumericResult(str, startIdx, offset4, 16);
        return this.emitNumericEntity(char, 3);
      }
    }
    this.addToNumericResult(str, startIdx, offset4, 16);
    return -1;
  }
  /**
   * Parses a decimal numeric entity.
   *
   * Equivalent to the `Decimal character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNumericDecimal(str, offset4) {
    const startIdx = offset4;
    while (offset4 < str.length) {
      const char = str.charCodeAt(offset4);
      if (isNumber2(char)) {
        offset4 += 1;
      } else {
        this.addToNumericResult(str, startIdx, offset4, 10);
        return this.emitNumericEntity(char, 2);
      }
    }
    this.addToNumericResult(str, startIdx, offset4, 10);
    return -1;
  }
  /**
   * Validate and emit a numeric entity.
   *
   * Implements the logic from the `Hexademical character reference start
   * state` and `Numeric character reference end state` in the HTML spec.
   *
   * @param lastCp The last code point of the entity. Used to see if the
   *               entity was terminated with a semicolon.
   * @param expectedLength The minimum number of characters that should be
   *                       consumed. Used to validate that at least one digit
   *                       was consumed.
   * @returns The number of characters that were consumed.
   */
  emitNumericEntity(lastCp, expectedLength) {
    var _a2;
    if (this.consumed <= expectedLength) {
      (_a2 = this.errors) === null || _a2 === void 0 ? void 0 : _a2.absenceOfDigitsInNumericCharacterReference(this.consumed);
      return 0;
    }
    if (lastCp === CharCodes.SEMI) {
      this.consumed += 1;
    } else if (this.decodeMode === DecodingMode.Strict) {
      return 0;
    }
    this.emitCodePoint(replaceCodePoint(this.result), this.consumed);
    if (this.errors) {
      if (lastCp !== CharCodes.SEMI) {
        this.errors.missingSemicolonAfterCharacterReference();
      }
      this.errors.validateNumericCharacterReference(this.result);
    }
    return this.consumed;
  }
  /**
   * Parses a named entity.
   *
   * Equivalent to the `Named character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */
  stateNamedEntity(str, offset4) {
    const { decodeTree } = this;
    let current = decodeTree[this.treeIndex];
    let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;
    for (; offset4 < str.length; offset4++, this.excess++) {
      const char = str.charCodeAt(offset4);
      this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);
      if (this.treeIndex < 0) {
        return this.result === 0 || // If we are parsing an attribute
        this.decodeMode === DecodingMode.Attribute && // We shouldn't have consumed any characters after the entity,
        (valueLength === 0 || // And there should be no invalid characters.
        isEntityInAttributeInvalidEnd(char)) ? 0 : this.emitNotTerminatedNamedEntity();
      }
      current = decodeTree[this.treeIndex];
      valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;
      if (valueLength !== 0) {
        if (char === CharCodes.SEMI) {
          return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);
        }
        if (this.decodeMode !== DecodingMode.Strict) {
          this.result = this.treeIndex;
          this.consumed += this.excess;
          this.excess = 0;
        }
      }
    }
    return -1;
  }
  /**
   * Emit a named entity that was not terminated with a semicolon.
   *
   * @returns The number of characters consumed.
   */
  emitNotTerminatedNamedEntity() {
    var _a2;
    const { result, decodeTree } = this;
    const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;
    this.emitNamedEntityData(result, valueLength, this.consumed);
    (_a2 = this.errors) === null || _a2 === void 0 ? void 0 : _a2.missingSemicolonAfterCharacterReference();
    return this.consumed;
  }
  /**
   * Emit a named entity.
   *
   * @param result The index of the entity in the decode tree.
   * @param valueLength The number of bytes in the entity.
   * @param consumed The number of characters consumed.
   *
   * @returns The number of characters consumed.
   */
  emitNamedEntityData(result, valueLength, consumed) {
    const { decodeTree } = this;
    this.emitCodePoint(valueLength === 1 ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH : decodeTree[result + 1], consumed);
    if (valueLength === 3) {
      this.emitCodePoint(decodeTree[result + 2], consumed);
    }
    return consumed;
  }
  /**
   * Signal to the parser that the end of the input was reached.
   *
   * Remaining data will be emitted and relevant errors will be produced.
   *
   * @returns The number of characters consumed.
   */
  end() {
    var _a2;
    switch (this.state) {
      case EntityDecoderState.NamedEntity: {
        return this.result !== 0 && (this.decodeMode !== DecodingMode.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;
      }
      // Otherwise, emit a numeric entity if we have one.
      case EntityDecoderState.NumericDecimal: {
        return this.emitNumericEntity(0, 2);
      }
      case EntityDecoderState.NumericHex: {
        return this.emitNumericEntity(0, 3);
      }
      case EntityDecoderState.NumericStart: {
        (_a2 = this.errors) === null || _a2 === void 0 ? void 0 : _a2.absenceOfDigitsInNumericCharacterReference(this.consumed);
        return 0;
      }
      case EntityDecoderState.EntityStart: {
        return 0;
      }
    }
  }
};
function getDecoder(decodeTree) {
  let ret = "";
  const decoder = new EntityDecoder(decodeTree, (str) => ret += fromCodePoint(str));
  return function decodeWithTrie(str, decodeMode) {
    let lastIndex = 0;
    let offset4 = 0;
    while ((offset4 = str.indexOf("&", offset4)) >= 0) {
      ret += str.slice(lastIndex, offset4);
      decoder.startEntity(decodeMode);
      const len = decoder.write(
        str,
        // Skip the "&"
        offset4 + 1
      );
      if (len < 0) {
        lastIndex = offset4 + decoder.end();
        break;
      }
      lastIndex = offset4 + len;
      offset4 = len === 0 ? lastIndex + 1 : lastIndex;
    }
    const result = ret + str.slice(lastIndex);
    ret = "";
    return result;
  };
}
function determineBranch(decodeTree, current, nodeIdx, char) {
  const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;
  const jumpOffset = current & BinTrieFlags.JUMP_TABLE;
  if (branchCount === 0) {
    return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;
  }
  if (jumpOffset) {
    const value = char - jumpOffset;
    return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIdx + value] - 1;
  }
  let lo = nodeIdx;
  let hi = lo + branchCount - 1;
  while (lo <= hi) {
    const mid = lo + hi >>> 1;
    const midVal = decodeTree[mid];
    if (midVal < char) {
      lo = mid + 1;
    } else if (midVal > char) {
      hi = mid - 1;
    } else {
      return decodeTree[mid + branchCount];
    }
  }
  return -1;
}
var htmlDecoder = getDecoder(decode_data_html_default);
var xmlDecoder = getDecoder(decode_data_xml_default);
function decodeHTML(str, mode = DecodingMode.Legacy) {
  return htmlDecoder(str, mode);
}

// ../../../node_modules/entities/lib/esm/generated/encode-html.js
function restoreDiff(arr) {
  for (let i = 1; i < arr.length; i++) {
    arr[i][0] += arr[i - 1][0] + 1;
  }
  return arr;
}
var encode_html_default = new Map(restoreDiff([[9, "&Tab;"], [0, "&NewLine;"], [22, "&excl;"], [0, "&quot;"], [0, "&num;"], [0, "&dollar;"], [0, "&percnt;"], [0, "&amp;"], [0, "&apos;"], [0, "&lpar;"], [0, "&rpar;"], [0, "&ast;"], [0, "&plus;"], [0, "&comma;"], [1, "&period;"], [0, "&sol;"], [10, "&colon;"], [0, "&semi;"], [0, { v: "&lt;", n: 8402, o: "&nvlt;" }], [0, { v: "&equals;", n: 8421, o: "&bne;" }], [0, { v: "&gt;", n: 8402, o: "&nvgt;" }], [0, "&quest;"], [0, "&commat;"], [26, "&lbrack;"], [0, "&bsol;"], [0, "&rbrack;"], [0, "&Hat;"], [0, "&lowbar;"], [0, "&DiacriticalGrave;"], [5, { n: 106, o: "&fjlig;" }], [20, "&lbrace;"], [0, "&verbar;"], [0, "&rbrace;"], [34, "&nbsp;"], [0, "&iexcl;"], [0, "&cent;"], [0, "&pound;"], [0, "&curren;"], [0, "&yen;"], [0, "&brvbar;"], [0, "&sect;"], [0, "&die;"], [0, "&copy;"], [0, "&ordf;"], [0, "&laquo;"], [0, "&not;"], [0, "&shy;"], [0, "&circledR;"], [0, "&macr;"], [0, "&deg;"], [0, "&PlusMinus;"], [0, "&sup2;"], [0, "&sup3;"], [0, "&acute;"], [0, "&micro;"], [0, "&para;"], [0, "&centerdot;"], [0, "&cedil;"], [0, "&sup1;"], [0, "&ordm;"], [0, "&raquo;"], [0, "&frac14;"], [0, "&frac12;"], [0, "&frac34;"], [0, "&iquest;"], [0, "&Agrave;"], [0, "&Aacute;"], [0, "&Acirc;"], [0, "&Atilde;"], [0, "&Auml;"], [0, "&angst;"], [0, "&AElig;"], [0, "&Ccedil;"], [0, "&Egrave;"], [0, "&Eacute;"], [0, "&Ecirc;"], [0, "&Euml;"], [0, "&Igrave;"], [0, "&Iacute;"], [0, "&Icirc;"], [0, "&Iuml;"], [0, "&ETH;"], [0, "&Ntilde;"], [0, "&Ograve;"], [0, "&Oacute;"], [0, "&Ocirc;"], [0, "&Otilde;"], [0, "&Ouml;"], [0, "&times;"], [0, "&Oslash;"], [0, "&Ugrave;"], [0, "&Uacute;"], [0, "&Ucirc;"], [0, "&Uuml;"], [0, "&Yacute;"], [0, "&THORN;"], [0, "&szlig;"], [0, "&agrave;"], [0, "&aacute;"], [0, "&acirc;"], [0, "&atilde;"], [0, "&auml;"], [0, "&aring;"], [0, "&aelig;"], [0, "&ccedil;"], [0, "&egrave;"], [0, "&eacute;"], [0, "&ecirc;"], [0, "&euml;"], [0, "&igrave;"], [0, "&iacute;"], [0, "&icirc;"], [0, "&iuml;"], [0, "&eth;"], [0, "&ntilde;"], [0, "&ograve;"], [0, "&oacute;"], [0, "&ocirc;"], [0, "&otilde;"], [0, "&ouml;"], [0, "&div;"], [0, "&oslash;"], [0, "&ugrave;"], [0, "&uacute;"], [0, "&ucirc;"], [0, "&uuml;"], [0, "&yacute;"], [0, "&thorn;"], [0, "&yuml;"], [0, "&Amacr;"], [0, "&amacr;"], [0, "&Abreve;"], [0, "&abreve;"], [0, "&Aogon;"], [0, "&aogon;"], [0, "&Cacute;"], [0, "&cacute;"], [0, "&Ccirc;"], [0, "&ccirc;"], [0, "&Cdot;"], [0, "&cdot;"], [0, "&Ccaron;"], [0, "&ccaron;"], [0, "&Dcaron;"], [0, "&dcaron;"], [0, "&Dstrok;"], [0, "&dstrok;"], [0, "&Emacr;"], [0, "&emacr;"], [2, "&Edot;"], [0, "&edot;"], [0, "&Eogon;"], [0, "&eogon;"], [0, "&Ecaron;"], [0, "&ecaron;"], [0, "&Gcirc;"], [0, "&gcirc;"], [0, "&Gbreve;"], [0, "&gbreve;"], [0, "&Gdot;"], [0, "&gdot;"], [0, "&Gcedil;"], [1, "&Hcirc;"], [0, "&hcirc;"], [0, "&Hstrok;"], [0, "&hstrok;"], [0, "&Itilde;"], [0, "&itilde;"], [0, "&Imacr;"], [0, "&imacr;"], [2, "&Iogon;"], [0, "&iogon;"], [0, "&Idot;"], [0, "&imath;"], [0, "&IJlig;"], [0, "&ijlig;"], [0, "&Jcirc;"], [0, "&jcirc;"], [0, "&Kcedil;"], [0, "&kcedil;"], [0, "&kgreen;"], [0, "&Lacute;"], [0, "&lacute;"], [0, "&Lcedil;"], [0, "&lcedil;"], [0, "&Lcaron;"], [0, "&lcaron;"], [0, "&Lmidot;"], [0, "&lmidot;"], [0, "&Lstrok;"], [0, "&lstrok;"], [0, "&Nacute;"], [0, "&nacute;"], [0, "&Ncedil;"], [0, "&ncedil;"], [0, "&Ncaron;"], [0, "&ncaron;"], [0, "&napos;"], [0, "&ENG;"], [0, "&eng;"], [0, "&Omacr;"], [0, "&omacr;"], [2, "&Odblac;"], [0, "&odblac;"], [0, "&OElig;"], [0, "&oelig;"], [0, "&Racute;"], [0, "&racute;"], [0, "&Rcedil;"], [0, "&rcedil;"], [0, "&Rcaron;"], [0, "&rcaron;"], [0, "&Sacute;"], [0, "&sacute;"], [0, "&Scirc;"], [0, "&scirc;"], [0, "&Scedil;"], [0, "&scedil;"], [0, "&Scaron;"], [0, "&scaron;"], [0, "&Tcedil;"], [0, "&tcedil;"], [0, "&Tcaron;"], [0, "&tcaron;"], [0, "&Tstrok;"], [0, "&tstrok;"], [0, "&Utilde;"], [0, "&utilde;"], [0, "&Umacr;"], [0, "&umacr;"], [0, "&Ubreve;"], [0, "&ubreve;"], [0, "&Uring;"], [0, "&uring;"], [0, "&Udblac;"], [0, "&udblac;"], [0, "&Uogon;"], [0, "&uogon;"], [0, "&Wcirc;"], [0, "&wcirc;"], [0, "&Ycirc;"], [0, "&ycirc;"], [0, "&Yuml;"], [0, "&Zacute;"], [0, "&zacute;"], [0, "&Zdot;"], [0, "&zdot;"], [0, "&Zcaron;"], [0, "&zcaron;"], [19, "&fnof;"], [34, "&imped;"], [63, "&gacute;"], [65, "&jmath;"], [142, "&circ;"], [0, "&caron;"], [16, "&breve;"], [0, "&DiacriticalDot;"], [0, "&ring;"], [0, "&ogon;"], [0, "&DiacriticalTilde;"], [0, "&dblac;"], [51, "&DownBreve;"], [127, "&Alpha;"], [0, "&Beta;"], [0, "&Gamma;"], [0, "&Delta;"], [0, "&Epsilon;"], [0, "&Zeta;"], [0, "&Eta;"], [0, "&Theta;"], [0, "&Iota;"], [0, "&Kappa;"], [0, "&Lambda;"], [0, "&Mu;"], [0, "&Nu;"], [0, "&Xi;"], [0, "&Omicron;"], [0, "&Pi;"], [0, "&Rho;"], [1, "&Sigma;"], [0, "&Tau;"], [0, "&Upsilon;"], [0, "&Phi;"], [0, "&Chi;"], [0, "&Psi;"], [0, "&ohm;"], [7, "&alpha;"], [0, "&beta;"], [0, "&gamma;"], [0, "&delta;"], [0, "&epsi;"], [0, "&zeta;"], [0, "&eta;"], [0, "&theta;"], [0, "&iota;"], [0, "&kappa;"], [0, "&lambda;"], [0, "&mu;"], [0, "&nu;"], [0, "&xi;"], [0, "&omicron;"], [0, "&pi;"], [0, "&rho;"], [0, "&sigmaf;"], [0, "&sigma;"], [0, "&tau;"], [0, "&upsi;"], [0, "&phi;"], [0, "&chi;"], [0, "&psi;"], [0, "&omega;"], [7, "&thetasym;"], [0, "&Upsi;"], [2, "&phiv;"], [0, "&piv;"], [5, "&Gammad;"], [0, "&digamma;"], [18, "&kappav;"], [0, "&rhov;"], [3, "&epsiv;"], [0, "&backepsilon;"], [10, "&IOcy;"], [0, "&DJcy;"], [0, "&GJcy;"], [0, "&Jukcy;"], [0, "&DScy;"], [0, "&Iukcy;"], [0, "&YIcy;"], [0, "&Jsercy;"], [0, "&LJcy;"], [0, "&NJcy;"], [0, "&TSHcy;"], [0, "&KJcy;"], [1, "&Ubrcy;"], [0, "&DZcy;"], [0, "&Acy;"], [0, "&Bcy;"], [0, "&Vcy;"], [0, "&Gcy;"], [0, "&Dcy;"], [0, "&IEcy;"], [0, "&ZHcy;"], [0, "&Zcy;"], [0, "&Icy;"], [0, "&Jcy;"], [0, "&Kcy;"], [0, "&Lcy;"], [0, "&Mcy;"], [0, "&Ncy;"], [0, "&Ocy;"], [0, "&Pcy;"], [0, "&Rcy;"], [0, "&Scy;"], [0, "&Tcy;"], [0, "&Ucy;"], [0, "&Fcy;"], [0, "&KHcy;"], [0, "&TScy;"], [0, "&CHcy;"], [0, "&SHcy;"], [0, "&SHCHcy;"], [0, "&HARDcy;"], [0, "&Ycy;"], [0, "&SOFTcy;"], [0, "&Ecy;"], [0, "&YUcy;"], [0, "&YAcy;"], [0, "&acy;"], [0, "&bcy;"], [0, "&vcy;"], [0, "&gcy;"], [0, "&dcy;"], [0, "&iecy;"], [0, "&zhcy;"], [0, "&zcy;"], [0, "&icy;"], [0, "&jcy;"], [0, "&kcy;"], [0, "&lcy;"], [0, "&mcy;"], [0, "&ncy;"], [0, "&ocy;"], [0, "&pcy;"], [0, "&rcy;"], [0, "&scy;"], [0, "&tcy;"], [0, "&ucy;"], [0, "&fcy;"], [0, "&khcy;"], [0, "&tscy;"], [0, "&chcy;"], [0, "&shcy;"], [0, "&shchcy;"], [0, "&hardcy;"], [0, "&ycy;"], [0, "&softcy;"], [0, "&ecy;"], [0, "&yucy;"], [0, "&yacy;"], [1, "&iocy;"], [0, "&djcy;"], [0, "&gjcy;"], [0, "&jukcy;"], [0, "&dscy;"], [0, "&iukcy;"], [0, "&yicy;"], [0, "&jsercy;"], [0, "&ljcy;"], [0, "&njcy;"], [0, "&tshcy;"], [0, "&kjcy;"], [1, "&ubrcy;"], [0, "&dzcy;"], [7074, "&ensp;"], [0, "&emsp;"], [0, "&emsp13;"], [0, "&emsp14;"], [1, "&numsp;"], [0, "&puncsp;"], [0, "&ThinSpace;"], [0, "&hairsp;"], [0, "&NegativeMediumSpace;"], [0, "&zwnj;"], [0, "&zwj;"], [0, "&lrm;"], [0, "&rlm;"], [0, "&dash;"], [2, "&ndash;"], [0, "&mdash;"], [0, "&horbar;"], [0, "&Verbar;"], [1, "&lsquo;"], [0, "&CloseCurlyQuote;"], [0, "&lsquor;"], [1, "&ldquo;"], [0, "&CloseCurlyDoubleQuote;"], [0, "&bdquo;"], [1, "&dagger;"], [0, "&Dagger;"], [0, "&bull;"], [2, "&nldr;"], [0, "&hellip;"], [9, "&permil;"], [0, "&pertenk;"], [0, "&prime;"], [0, "&Prime;"], [0, "&tprime;"], [0, "&backprime;"], [3, "&lsaquo;"], [0, "&rsaquo;"], [3, "&oline;"], [2, "&caret;"], [1, "&hybull;"], [0, "&frasl;"], [10, "&bsemi;"], [7, "&qprime;"], [7, { v: "&MediumSpace;", n: 8202, o: "&ThickSpace;" }], [0, "&NoBreak;"], [0, "&af;"], [0, "&InvisibleTimes;"], [0, "&ic;"], [72, "&euro;"], [46, "&tdot;"], [0, "&DotDot;"], [37, "&complexes;"], [2, "&incare;"], [4, "&gscr;"], [0, "&hamilt;"], [0, "&Hfr;"], [0, "&Hopf;"], [0, "&planckh;"], [0, "&hbar;"], [0, "&imagline;"], [0, "&Ifr;"], [0, "&lagran;"], [0, "&ell;"], [1, "&naturals;"], [0, "&numero;"], [0, "&copysr;"], [0, "&weierp;"], [0, "&Popf;"], [0, "&Qopf;"], [0, "&realine;"], [0, "&real;"], [0, "&reals;"], [0, "&rx;"], [3, "&trade;"], [1, "&integers;"], [2, "&mho;"], [0, "&zeetrf;"], [0, "&iiota;"], [2, "&bernou;"], [0, "&Cayleys;"], [1, "&escr;"], [0, "&Escr;"], [0, "&Fouriertrf;"], [1, "&Mellintrf;"], [0, "&order;"], [0, "&alefsym;"], [0, "&beth;"], [0, "&gimel;"], [0, "&daleth;"], [12, "&CapitalDifferentialD;"], [0, "&dd;"], [0, "&ee;"], [0, "&ii;"], [10, "&frac13;"], [0, "&frac23;"], [0, "&frac15;"], [0, "&frac25;"], [0, "&frac35;"], [0, "&frac45;"], [0, "&frac16;"], [0, "&frac56;"], [0, "&frac18;"], [0, "&frac38;"], [0, "&frac58;"], [0, "&frac78;"], [49, "&larr;"], [0, "&ShortUpArrow;"], [0, "&rarr;"], [0, "&darr;"], [0, "&harr;"], [0, "&updownarrow;"], [0, "&nwarr;"], [0, "&nearr;"], [0, "&LowerRightArrow;"], [0, "&LowerLeftArrow;"], [0, "&nlarr;"], [0, "&nrarr;"], [1, { v: "&rarrw;", n: 824, o: "&nrarrw;" }], [0, "&Larr;"], [0, "&Uarr;"], [0, "&Rarr;"], [0, "&Darr;"], [0, "&larrtl;"], [0, "&rarrtl;"], [0, "&LeftTeeArrow;"], [0, "&mapstoup;"], [0, "&map;"], [0, "&DownTeeArrow;"], [1, "&hookleftarrow;"], [0, "&hookrightarrow;"], [0, "&larrlp;"], [0, "&looparrowright;"], [0, "&harrw;"], [0, "&nharr;"], [1, "&lsh;"], [0, "&rsh;"], [0, "&ldsh;"], [0, "&rdsh;"], [1, "&crarr;"], [0, "&cularr;"], [0, "&curarr;"], [2, "&circlearrowleft;"], [0, "&circlearrowright;"], [0, "&leftharpoonup;"], [0, "&DownLeftVector;"], [0, "&RightUpVector;"], [0, "&LeftUpVector;"], [0, "&rharu;"], [0, "&DownRightVector;"], [0, "&dharr;"], [0, "&dharl;"], [0, "&RightArrowLeftArrow;"], [0, "&udarr;"], [0, "&LeftArrowRightArrow;"], [0, "&leftleftarrows;"], [0, "&upuparrows;"], [0, "&rightrightarrows;"], [0, "&ddarr;"], [0, "&leftrightharpoons;"], [0, "&Equilibrium;"], [0, "&nlArr;"], [0, "&nhArr;"], [0, "&nrArr;"], [0, "&DoubleLeftArrow;"], [0, "&DoubleUpArrow;"], [0, "&DoubleRightArrow;"], [0, "&dArr;"], [0, "&DoubleLeftRightArrow;"], [0, "&DoubleUpDownArrow;"], [0, "&nwArr;"], [0, "&neArr;"], [0, "&seArr;"], [0, "&swArr;"], [0, "&lAarr;"], [0, "&rAarr;"], [1, "&zigrarr;"], [6, "&larrb;"], [0, "&rarrb;"], [15, "&DownArrowUpArrow;"], [7, "&loarr;"], [0, "&roarr;"], [0, "&hoarr;"], [0, "&forall;"], [0, "&comp;"], [0, { v: "&part;", n: 824, o: "&npart;" }], [0, "&exist;"], [0, "&nexist;"], [0, "&empty;"], [1, "&Del;"], [0, "&Element;"], [0, "&NotElement;"], [1, "&ni;"], [0, "&notni;"], [2, "&prod;"], [0, "&coprod;"], [0, "&sum;"], [0, "&minus;"], [0, "&MinusPlus;"], [0, "&dotplus;"], [1, "&Backslash;"], [0, "&lowast;"], [0, "&compfn;"], [1, "&radic;"], [2, "&prop;"], [0, "&infin;"], [0, "&angrt;"], [0, { v: "&ang;", n: 8402, o: "&nang;" }], [0, "&angmsd;"], [0, "&angsph;"], [0, "&mid;"], [0, "&nmid;"], [0, "&DoubleVerticalBar;"], [0, "&NotDoubleVerticalBar;"], [0, "&and;"], [0, "&or;"], [0, { v: "&cap;", n: 65024, o: "&caps;" }], [0, { v: "&cup;", n: 65024, o: "&cups;" }], [0, "&int;"], [0, "&Int;"], [0, "&iiint;"], [0, "&conint;"], [0, "&Conint;"], [0, "&Cconint;"], [0, "&cwint;"], [0, "&ClockwiseContourIntegral;"], [0, "&awconint;"], [0, "&there4;"], [0, "&becaus;"], [0, "&ratio;"], [0, "&Colon;"], [0, "&dotminus;"], [1, "&mDDot;"], [0, "&homtht;"], [0, { v: "&sim;", n: 8402, o: "&nvsim;" }], [0, { v: "&backsim;", n: 817, o: "&race;" }], [0, { v: "&ac;", n: 819, o: "&acE;" }], [0, "&acd;"], [0, "&VerticalTilde;"], [0, "&NotTilde;"], [0, { v: "&eqsim;", n: 824, o: "&nesim;" }], [0, "&sime;"], [0, "&NotTildeEqual;"], [0, "&cong;"], [0, "&simne;"], [0, "&ncong;"], [0, "&ap;"], [0, "&nap;"], [0, "&ape;"], [0, { v: "&apid;", n: 824, o: "&napid;" }], [0, "&backcong;"], [0, { v: "&asympeq;", n: 8402, o: "&nvap;" }], [0, { v: "&bump;", n: 824, o: "&nbump;" }], [0, { v: "&bumpe;", n: 824, o: "&nbumpe;" }], [0, { v: "&doteq;", n: 824, o: "&nedot;" }], [0, "&doteqdot;"], [0, "&efDot;"], [0, "&erDot;"], [0, "&Assign;"], [0, "&ecolon;"], [0, "&ecir;"], [0, "&circeq;"], [1, "&wedgeq;"], [0, "&veeeq;"], [1, "&triangleq;"], [2, "&equest;"], [0, "&ne;"], [0, { v: "&Congruent;", n: 8421, o: "&bnequiv;" }], [0, "&nequiv;"], [1, { v: "&le;", n: 8402, o: "&nvle;" }], [0, { v: "&ge;", n: 8402, o: "&nvge;" }], [0, { v: "&lE;", n: 824, o: "&nlE;" }], [0, { v: "&gE;", n: 824, o: "&ngE;" }], [0, { v: "&lnE;", n: 65024, o: "&lvertneqq;" }], [0, { v: "&gnE;", n: 65024, o: "&gvertneqq;" }], [0, { v: "&ll;", n: new Map(restoreDiff([[824, "&nLtv;"], [7577, "&nLt;"]])) }], [0, { v: "&gg;", n: new Map(restoreDiff([[824, "&nGtv;"], [7577, "&nGt;"]])) }], [0, "&between;"], [0, "&NotCupCap;"], [0, "&nless;"], [0, "&ngt;"], [0, "&nle;"], [0, "&nge;"], [0, "&lesssim;"], [0, "&GreaterTilde;"], [0, "&nlsim;"], [0, "&ngsim;"], [0, "&LessGreater;"], [0, "&gl;"], [0, "&NotLessGreater;"], [0, "&NotGreaterLess;"], [0, "&pr;"], [0, "&sc;"], [0, "&prcue;"], [0, "&sccue;"], [0, "&PrecedesTilde;"], [0, { v: "&scsim;", n: 824, o: "&NotSucceedsTilde;" }], [0, "&NotPrecedes;"], [0, "&NotSucceeds;"], [0, { v: "&sub;", n: 8402, o: "&NotSubset;" }], [0, { v: "&sup;", n: 8402, o: "&NotSuperset;" }], [0, "&nsub;"], [0, "&nsup;"], [0, "&sube;"], [0, "&supe;"], [0, "&NotSubsetEqual;"], [0, "&NotSupersetEqual;"], [0, { v: "&subne;", n: 65024, o: "&varsubsetneq;" }], [0, { v: "&supne;", n: 65024, o: "&varsupsetneq;" }], [1, "&cupdot;"], [0, "&UnionPlus;"], [0, { v: "&sqsub;", n: 824, o: "&NotSquareSubset;" }], [0, { v: "&sqsup;", n: 824, o: "&NotSquareSuperset;" }], [0, "&sqsube;"], [0, "&sqsupe;"], [0, { v: "&sqcap;", n: 65024, o: "&sqcaps;" }], [0, { v: "&sqcup;", n: 65024, o: "&sqcups;" }], [0, "&CirclePlus;"], [0, "&CircleMinus;"], [0, "&CircleTimes;"], [0, "&osol;"], [0, "&CircleDot;"], [0, "&circledcirc;"], [0, "&circledast;"], [1, "&circleddash;"], [0, "&boxplus;"], [0, "&boxminus;"], [0, "&boxtimes;"], [0, "&dotsquare;"], [0, "&RightTee;"], [0, "&dashv;"], [0, "&DownTee;"], [0, "&bot;"], [1, "&models;"], [0, "&DoubleRightTee;"], [0, "&Vdash;"], [0, "&Vvdash;"], [0, "&VDash;"], [0, "&nvdash;"], [0, "&nvDash;"], [0, "&nVdash;"], [0, "&nVDash;"], [0, "&prurel;"], [1, "&LeftTriangle;"], [0, "&RightTriangle;"], [0, { v: "&LeftTriangleEqual;", n: 8402, o: "&nvltrie;" }], [0, { v: "&RightTriangleEqual;", n: 8402, o: "&nvrtrie;" }], [0, "&origof;"], [0, "&imof;"], [0, "&multimap;"], [0, "&hercon;"], [0, "&intcal;"], [0, "&veebar;"], [1, "&barvee;"], [0, "&angrtvb;"], [0, "&lrtri;"], [0, "&bigwedge;"], [0, "&bigvee;"], [0, "&bigcap;"], [0, "&bigcup;"], [0, "&diam;"], [0, "&sdot;"], [0, "&sstarf;"], [0, "&divideontimes;"], [0, "&bowtie;"], [0, "&ltimes;"], [0, "&rtimes;"], [0, "&leftthreetimes;"], [0, "&rightthreetimes;"], [0, "&backsimeq;"], [0, "&curlyvee;"], [0, "&curlywedge;"], [0, "&Sub;"], [0, "&Sup;"], [0, "&Cap;"], [0, "&Cup;"], [0, "&fork;"], [0, "&epar;"], [0, "&lessdot;"], [0, "&gtdot;"], [0, { v: "&Ll;", n: 824, o: "&nLl;" }], [0, { v: "&Gg;", n: 824, o: "&nGg;" }], [0, { v: "&leg;", n: 65024, o: "&lesg;" }], [0, { v: "&gel;", n: 65024, o: "&gesl;" }], [2, "&cuepr;"], [0, "&cuesc;"], [0, "&NotPrecedesSlantEqual;"], [0, "&NotSucceedsSlantEqual;"], [0, "&NotSquareSubsetEqual;"], [0, "&NotSquareSupersetEqual;"], [2, "&lnsim;"], [0, "&gnsim;"], [0, "&precnsim;"], [0, "&scnsim;"], [0, "&nltri;"], [0, "&NotRightTriangle;"], [0, "&nltrie;"], [0, "&NotRightTriangleEqual;"], [0, "&vellip;"], [0, "&ctdot;"], [0, "&utdot;"], [0, "&dtdot;"], [0, "&disin;"], [0, "&isinsv;"], [0, "&isins;"], [0, { v: "&isindot;", n: 824, o: "&notindot;" }], [0, "&notinvc;"], [0, "&notinvb;"], [1, { v: "&isinE;", n: 824, o: "&notinE;" }], [0, "&nisd;"], [0, "&xnis;"], [0, "&nis;"], [0, "&notnivc;"], [0, "&notnivb;"], [6, "&barwed;"], [0, "&Barwed;"], [1, "&lceil;"], [0, "&rceil;"], [0, "&LeftFloor;"], [0, "&rfloor;"], [0, "&drcrop;"], [0, "&dlcrop;"], [0, "&urcrop;"], [0, "&ulcrop;"], [0, "&bnot;"], [1, "&profline;"], [0, "&profsurf;"], [1, "&telrec;"], [0, "&target;"], [5, "&ulcorn;"], [0, "&urcorn;"], [0, "&dlcorn;"], [0, "&drcorn;"], [2, "&frown;"], [0, "&smile;"], [9, "&cylcty;"], [0, "&profalar;"], [7, "&topbot;"], [6, "&ovbar;"], [1, "&solbar;"], [60, "&angzarr;"], [51, "&lmoustache;"], [0, "&rmoustache;"], [2, "&OverBracket;"], [0, "&bbrk;"], [0, "&bbrktbrk;"], [37, "&OverParenthesis;"], [0, "&UnderParenthesis;"], [0, "&OverBrace;"], [0, "&UnderBrace;"], [2, "&trpezium;"], [4, "&elinters;"], [59, "&blank;"], [164, "&circledS;"], [55, "&boxh;"], [1, "&boxv;"], [9, "&boxdr;"], [3, "&boxdl;"], [3, "&boxur;"], [3, "&boxul;"], [3, "&boxvr;"], [7, "&boxvl;"], [7, "&boxhd;"], [7, "&boxhu;"], [7, "&boxvh;"], [19, "&boxH;"], [0, "&boxV;"], [0, "&boxdR;"], [0, "&boxDr;"], [0, "&boxDR;"], [0, "&boxdL;"], [0, "&boxDl;"], [0, "&boxDL;"], [0, "&boxuR;"], [0, "&boxUr;"], [0, "&boxUR;"], [0, "&boxuL;"], [0, "&boxUl;"], [0, "&boxUL;"], [0, "&boxvR;"], [0, "&boxVr;"], [0, "&boxVR;"], [0, "&boxvL;"], [0, "&boxVl;"], [0, "&boxVL;"], [0, "&boxHd;"], [0, "&boxhD;"], [0, "&boxHD;"], [0, "&boxHu;"], [0, "&boxhU;"], [0, "&boxHU;"], [0, "&boxvH;"], [0, "&boxVh;"], [0, "&boxVH;"], [19, "&uhblk;"], [3, "&lhblk;"], [3, "&block;"], [8, "&blk14;"], [0, "&blk12;"], [0, "&blk34;"], [13, "&square;"], [8, "&blacksquare;"], [0, "&EmptyVerySmallSquare;"], [1, "&rect;"], [0, "&marker;"], [2, "&fltns;"], [1, "&bigtriangleup;"], [0, "&blacktriangle;"], [0, "&triangle;"], [2, "&blacktriangleright;"], [0, "&rtri;"], [3, "&bigtriangledown;"], [0, "&blacktriangledown;"], [0, "&dtri;"], [2, "&blacktriangleleft;"], [0, "&ltri;"], [6, "&loz;"], [0, "&cir;"], [32, "&tridot;"], [2, "&bigcirc;"], [8, "&ultri;"], [0, "&urtri;"], [0, "&lltri;"], [0, "&EmptySmallSquare;"], [0, "&FilledSmallSquare;"], [8, "&bigstar;"], [0, "&star;"], [7, "&phone;"], [49, "&female;"], [1, "&male;"], [29, "&spades;"], [2, "&clubs;"], [1, "&hearts;"], [0, "&diamondsuit;"], [3, "&sung;"], [2, "&flat;"], [0, "&natural;"], [0, "&sharp;"], [163, "&check;"], [3, "&cross;"], [8, "&malt;"], [21, "&sext;"], [33, "&VerticalSeparator;"], [25, "&lbbrk;"], [0, "&rbbrk;"], [84, "&bsolhsub;"], [0, "&suphsol;"], [28, "&LeftDoubleBracket;"], [0, "&RightDoubleBracket;"], [0, "&lang;"], [0, "&rang;"], [0, "&Lang;"], [0, "&Rang;"], [0, "&loang;"], [0, "&roang;"], [7, "&longleftarrow;"], [0, "&longrightarrow;"], [0, "&longleftrightarrow;"], [0, "&DoubleLongLeftArrow;"], [0, "&DoubleLongRightArrow;"], [0, "&DoubleLongLeftRightArrow;"], [1, "&longmapsto;"], [2, "&dzigrarr;"], [258, "&nvlArr;"], [0, "&nvrArr;"], [0, "&nvHarr;"], [0, "&Map;"], [6, "&lbarr;"], [0, "&bkarow;"], [0, "&lBarr;"], [0, "&dbkarow;"], [0, "&drbkarow;"], [0, "&DDotrahd;"], [0, "&UpArrowBar;"], [0, "&DownArrowBar;"], [2, "&Rarrtl;"], [2, "&latail;"], [0, "&ratail;"], [0, "&lAtail;"], [0, "&rAtail;"], [0, "&larrfs;"], [0, "&rarrfs;"], [0, "&larrbfs;"], [0, "&rarrbfs;"], [2, "&nwarhk;"], [0, "&nearhk;"], [0, "&hksearow;"], [0, "&hkswarow;"], [0, "&nwnear;"], [0, "&nesear;"], [0, "&seswar;"], [0, "&swnwar;"], [8, { v: "&rarrc;", n: 824, o: "&nrarrc;" }], [1, "&cudarrr;"], [0, "&ldca;"], [0, "&rdca;"], [0, "&cudarrl;"], [0, "&larrpl;"], [2, "&curarrm;"], [0, "&cularrp;"], [7, "&rarrpl;"], [2, "&harrcir;"], [0, "&Uarrocir;"], [0, "&lurdshar;"], [0, "&ldrushar;"], [2, "&LeftRightVector;"], [0, "&RightUpDownVector;"], [0, "&DownLeftRightVector;"], [0, "&LeftUpDownVector;"], [0, "&LeftVectorBar;"], [0, "&RightVectorBar;"], [0, "&RightUpVectorBar;"], [0, "&RightDownVectorBar;"], [0, "&DownLeftVectorBar;"], [0, "&DownRightVectorBar;"], [0, "&LeftUpVectorBar;"], [0, "&LeftDownVectorBar;"], [0, "&LeftTeeVector;"], [0, "&RightTeeVector;"], [0, "&RightUpTeeVector;"], [0, "&RightDownTeeVector;"], [0, "&DownLeftTeeVector;"], [0, "&DownRightTeeVector;"], [0, "&LeftUpTeeVector;"], [0, "&LeftDownTeeVector;"], [0, "&lHar;"], [0, "&uHar;"], [0, "&rHar;"], [0, "&dHar;"], [0, "&luruhar;"], [0, "&ldrdhar;"], [0, "&ruluhar;"], [0, "&rdldhar;"], [0, "&lharul;"], [0, "&llhard;"], [0, "&rharul;"], [0, "&lrhard;"], [0, "&udhar;"], [0, "&duhar;"], [0, "&RoundImplies;"], [0, "&erarr;"], [0, "&simrarr;"], [0, "&larrsim;"], [0, "&rarrsim;"], [0, "&rarrap;"], [0, "&ltlarr;"], [1, "&gtrarr;"], [0, "&subrarr;"], [1, "&suplarr;"], [0, "&lfisht;"], [0, "&rfisht;"], [0, "&ufisht;"], [0, "&dfisht;"], [5, "&lopar;"], [0, "&ropar;"], [4, "&lbrke;"], [0, "&rbrke;"], [0, "&lbrkslu;"], [0, "&rbrksld;"], [0, "&lbrksld;"], [0, "&rbrkslu;"], [0, "&langd;"], [0, "&rangd;"], [0, "&lparlt;"], [0, "&rpargt;"], [0, "&gtlPar;"], [0, "&ltrPar;"], [3, "&vzigzag;"], [1, "&vangrt;"], [0, "&angrtvbd;"], [6, "&ange;"], [0, "&range;"], [0, "&dwangle;"], [0, "&uwangle;"], [0, "&angmsdaa;"], [0, "&angmsdab;"], [0, "&angmsdac;"], [0, "&angmsdad;"], [0, "&angmsdae;"], [0, "&angmsdaf;"], [0, "&angmsdag;"], [0, "&angmsdah;"], [0, "&bemptyv;"], [0, "&demptyv;"], [0, "&cemptyv;"], [0, "&raemptyv;"], [0, "&laemptyv;"], [0, "&ohbar;"], [0, "&omid;"], [0, "&opar;"], [1, "&operp;"], [1, "&olcross;"], [0, "&odsold;"], [1, "&olcir;"], [0, "&ofcir;"], [0, "&olt;"], [0, "&ogt;"], [0, "&cirscir;"], [0, "&cirE;"], [0, "&solb;"], [0, "&bsolb;"], [3, "&boxbox;"], [3, "&trisb;"], [0, "&rtriltri;"], [0, { v: "&LeftTriangleBar;", n: 824, o: "&NotLeftTriangleBar;" }], [0, { v: "&RightTriangleBar;", n: 824, o: "&NotRightTriangleBar;" }], [11, "&iinfin;"], [0, "&infintie;"], [0, "&nvinfin;"], [4, "&eparsl;"], [0, "&smeparsl;"], [0, "&eqvparsl;"], [5, "&blacklozenge;"], [8, "&RuleDelayed;"], [1, "&dsol;"], [9, "&bigodot;"], [0, "&bigoplus;"], [0, "&bigotimes;"], [1, "&biguplus;"], [1, "&bigsqcup;"], [5, "&iiiint;"], [0, "&fpartint;"], [2, "&cirfnint;"], [0, "&awint;"], [0, "&rppolint;"], [0, "&scpolint;"], [0, "&npolint;"], [0, "&pointint;"], [0, "&quatint;"], [0, "&intlarhk;"], [10, "&pluscir;"], [0, "&plusacir;"], [0, "&simplus;"], [0, "&plusdu;"], [0, "&plussim;"], [0, "&plustwo;"], [1, "&mcomma;"], [0, "&minusdu;"], [2, "&loplus;"], [0, "&roplus;"], [0, "&Cross;"], [0, "&timesd;"], [0, "&timesbar;"], [1, "&smashp;"], [0, "&lotimes;"], [0, "&rotimes;"], [0, "&otimesas;"], [0, "&Otimes;"], [0, "&odiv;"], [0, "&triplus;"], [0, "&triminus;"], [0, "&tritime;"], [0, "&intprod;"], [2, "&amalg;"], [0, "&capdot;"], [1, "&ncup;"], [0, "&ncap;"], [0, "&capand;"], [0, "&cupor;"], [0, "&cupcap;"], [0, "&capcup;"], [0, "&cupbrcap;"], [0, "&capbrcup;"], [0, "&cupcup;"], [0, "&capcap;"], [0, "&ccups;"], [0, "&ccaps;"], [2, "&ccupssm;"], [2, "&And;"], [0, "&Or;"], [0, "&andand;"], [0, "&oror;"], [0, "&orslope;"], [0, "&andslope;"], [1, "&andv;"], [0, "&orv;"], [0, "&andd;"], [0, "&ord;"], [1, "&wedbar;"], [6, "&sdote;"], [3, "&simdot;"], [2, { v: "&congdot;", n: 824, o: "&ncongdot;" }], [0, "&easter;"], [0, "&apacir;"], [0, { v: "&apE;", n: 824, o: "&napE;" }], [0, "&eplus;"], [0, "&pluse;"], [0, "&Esim;"], [0, "&Colone;"], [0, "&Equal;"], [1, "&ddotseq;"], [0, "&equivDD;"], [0, "&ltcir;"], [0, "&gtcir;"], [0, "&ltquest;"], [0, "&gtquest;"], [0, { v: "&leqslant;", n: 824, o: "&nleqslant;" }], [0, { v: "&geqslant;", n: 824, o: "&ngeqslant;" }], [0, "&lesdot;"], [0, "&gesdot;"], [0, "&lesdoto;"], [0, "&gesdoto;"], [0, "&lesdotor;"], [0, "&gesdotol;"], [0, "&lap;"], [0, "&gap;"], [0, "&lne;"], [0, "&gne;"], [0, "&lnap;"], [0, "&gnap;"], [0, "&lEg;"], [0, "&gEl;"], [0, "&lsime;"], [0, "&gsime;"], [0, "&lsimg;"], [0, "&gsiml;"], [0, "&lgE;"], [0, "&glE;"], [0, "&lesges;"], [0, "&gesles;"], [0, "&els;"], [0, "&egs;"], [0, "&elsdot;"], [0, "&egsdot;"], [0, "&el;"], [0, "&eg;"], [2, "&siml;"], [0, "&simg;"], [0, "&simlE;"], [0, "&simgE;"], [0, { v: "&LessLess;", n: 824, o: "&NotNestedLessLess;" }], [0, { v: "&GreaterGreater;", n: 824, o: "&NotNestedGreaterGreater;" }], [1, "&glj;"], [0, "&gla;"], [0, "&ltcc;"], [0, "&gtcc;"], [0, "&lescc;"], [0, "&gescc;"], [0, "&smt;"], [0, "&lat;"], [0, { v: "&smte;", n: 65024, o: "&smtes;" }], [0, { v: "&late;", n: 65024, o: "&lates;" }], [0, "&bumpE;"], [0, { v: "&PrecedesEqual;", n: 824, o: "&NotPrecedesEqual;" }], [0, { v: "&sce;", n: 824, o: "&NotSucceedsEqual;" }], [2, "&prE;"], [0, "&scE;"], [0, "&precneqq;"], [0, "&scnE;"], [0, "&prap;"], [0, "&scap;"], [0, "&precnapprox;"], [0, "&scnap;"], [0, "&Pr;"], [0, "&Sc;"], [0, "&subdot;"], [0, "&supdot;"], [0, "&subplus;"], [0, "&supplus;"], [0, "&submult;"], [0, "&supmult;"], [0, "&subedot;"], [0, "&supedot;"], [0, { v: "&subE;", n: 824, o: "&nsubE;" }], [0, { v: "&supE;", n: 824, o: "&nsupE;" }], [0, "&subsim;"], [0, "&supsim;"], [2, { v: "&subnE;", n: 65024, o: "&varsubsetneqq;" }], [0, { v: "&supnE;", n: 65024, o: "&varsupsetneqq;" }], [2, "&csub;"], [0, "&csup;"], [0, "&csube;"], [0, "&csupe;"], [0, "&subsup;"], [0, "&supsub;"], [0, "&subsub;"], [0, "&supsup;"], [0, "&suphsub;"], [0, "&supdsub;"], [0, "&forkv;"], [0, "&topfork;"], [0, "&mlcp;"], [8, "&Dashv;"], [1, "&Vdashl;"], [0, "&Barv;"], [0, "&vBar;"], [0, "&vBarv;"], [1, "&Vbar;"], [0, "&Not;"], [0, "&bNot;"], [0, "&rnmid;"], [0, "&cirmid;"], [0, "&midcir;"], [0, "&topcir;"], [0, "&nhpar;"], [0, "&parsim;"], [9, { v: "&parsl;", n: 8421, o: "&nparsl;" }], [44343, { n: new Map(restoreDiff([[56476, "&Ascr;"], [1, "&Cscr;"], [0, "&Dscr;"], [2, "&Gscr;"], [2, "&Jscr;"], [0, "&Kscr;"], [2, "&Nscr;"], [0, "&Oscr;"], [0, "&Pscr;"], [0, "&Qscr;"], [1, "&Sscr;"], [0, "&Tscr;"], [0, "&Uscr;"], [0, "&Vscr;"], [0, "&Wscr;"], [0, "&Xscr;"], [0, "&Yscr;"], [0, "&Zscr;"], [0, "&ascr;"], [0, "&bscr;"], [0, "&cscr;"], [0, "&dscr;"], [1, "&fscr;"], [1, "&hscr;"], [0, "&iscr;"], [0, "&jscr;"], [0, "&kscr;"], [0, "&lscr;"], [0, "&mscr;"], [0, "&nscr;"], [1, "&pscr;"], [0, "&qscr;"], [0, "&rscr;"], [0, "&sscr;"], [0, "&tscr;"], [0, "&uscr;"], [0, "&vscr;"], [0, "&wscr;"], [0, "&xscr;"], [0, "&yscr;"], [0, "&zscr;"], [52, "&Afr;"], [0, "&Bfr;"], [1, "&Dfr;"], [0, "&Efr;"], [0, "&Ffr;"], [0, "&Gfr;"], [2, "&Jfr;"], [0, "&Kfr;"], [0, "&Lfr;"], [0, "&Mfr;"], [0, "&Nfr;"], [0, "&Ofr;"], [0, "&Pfr;"], [0, "&Qfr;"], [1, "&Sfr;"], [0, "&Tfr;"], [0, "&Ufr;"], [0, "&Vfr;"], [0, "&Wfr;"], [0, "&Xfr;"], [0, "&Yfr;"], [1, "&afr;"], [0, "&bfr;"], [0, "&cfr;"], [0, "&dfr;"], [0, "&efr;"], [0, "&ffr;"], [0, "&gfr;"], [0, "&hfr;"], [0, "&ifr;"], [0, "&jfr;"], [0, "&kfr;"], [0, "&lfr;"], [0, "&mfr;"], [0, "&nfr;"], [0, "&ofr;"], [0, "&pfr;"], [0, "&qfr;"], [0, "&rfr;"], [0, "&sfr;"], [0, "&tfr;"], [0, "&ufr;"], [0, "&vfr;"], [0, "&wfr;"], [0, "&xfr;"], [0, "&yfr;"], [0, "&zfr;"], [0, "&Aopf;"], [0, "&Bopf;"], [1, "&Dopf;"], [0, "&Eopf;"], [0, "&Fopf;"], [0, "&Gopf;"], [1, "&Iopf;"], [0, "&Jopf;"], [0, "&Kopf;"], [0, "&Lopf;"], [0, "&Mopf;"], [1, "&Oopf;"], [3, "&Sopf;"], [0, "&Topf;"], [0, "&Uopf;"], [0, "&Vopf;"], [0, "&Wopf;"], [0, "&Xopf;"], [0, "&Yopf;"], [1, "&aopf;"], [0, "&bopf;"], [0, "&copf;"], [0, "&dopf;"], [0, "&eopf;"], [0, "&fopf;"], [0, "&gopf;"], [0, "&hopf;"], [0, "&iopf;"], [0, "&jopf;"], [0, "&kopf;"], [0, "&lopf;"], [0, "&mopf;"], [0, "&nopf;"], [0, "&oopf;"], [0, "&popf;"], [0, "&qopf;"], [0, "&ropf;"], [0, "&sopf;"], [0, "&topf;"], [0, "&uopf;"], [0, "&vopf;"], [0, "&wopf;"], [0, "&xopf;"], [0, "&yopf;"], [0, "&zopf;"]])) }], [8906, "&fflig;"], [0, "&filig;"], [0, "&fllig;"], [0, "&ffilig;"], [0, "&ffllig;"]]));

// ../../../node_modules/entities/lib/esm/escape.js
var xmlCodeMap = /* @__PURE__ */ new Map([
  [34, "&quot;"],
  [38, "&amp;"],
  [39, "&apos;"],
  [60, "&lt;"],
  [62, "&gt;"]
]);
var getCodePoint = (
  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
  String.prototype.codePointAt != null ? (str, index2) => str.codePointAt(index2) : (
    // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
    (c2, index2) => (c2.charCodeAt(index2) & 64512) === 55296 ? (c2.charCodeAt(index2) - 55296) * 1024 + c2.charCodeAt(index2 + 1) - 56320 + 65536 : c2.charCodeAt(index2)
  )
);
function getEscaper(regex, map2) {
  return function escape3(data) {
    let match2;
    let lastIdx = 0;
    let result = "";
    while (match2 = regex.exec(data)) {
      if (lastIdx !== match2.index) {
        result += data.substring(lastIdx, match2.index);
      }
      result += map2.get(match2[0].charCodeAt(0));
      lastIdx = match2.index + 1;
    }
    return result + data.substring(lastIdx);
  };
}
var escapeUTF8 = getEscaper(/[&<>'"]/g, xmlCodeMap);
var escapeAttribute = getEscaper(/["&\u00A0]/g, /* @__PURE__ */ new Map([
  [34, "&quot;"],
  [38, "&amp;"],
  [160, "&nbsp;"]
]));
var escapeText = getEscaper(/[&<>\u00A0]/g, /* @__PURE__ */ new Map([
  [38, "&amp;"],
  [60, "&lt;"],
  [62, "&gt;"],
  [160, "&nbsp;"]
]));

// ../../../node_modules/entities/lib/esm/index.js
var EntityLevel;
(function(EntityLevel2) {
  EntityLevel2[EntityLevel2["XML"] = 0] = "XML";
  EntityLevel2[EntityLevel2["HTML"] = 1] = "HTML";
})(EntityLevel || (EntityLevel = {}));
var EncodingMode;
(function(EncodingMode2) {
  EncodingMode2[EncodingMode2["UTF8"] = 0] = "UTF8";
  EncodingMode2[EncodingMode2["ASCII"] = 1] = "ASCII";
  EncodingMode2[EncodingMode2["Extensive"] = 2] = "Extensive";
  EncodingMode2[EncodingMode2["Attribute"] = 3] = "Attribute";
  EncodingMode2[EncodingMode2["Text"] = 4] = "Text";
})(EncodingMode || (EncodingMode = {}));

// ../../../node_modules/markdown-it/lib/common/utils.mjs
function _class(obj) {
  return Object.prototype.toString.call(obj);
}
function isString(obj) {
  return _class(obj) === "[object String]";
}
var _hasOwnProperty = Object.prototype.hasOwnProperty;
function has(object, key) {
  return _hasOwnProperty.call(object, key);
}
function assign(obj) {
  const sources = Array.prototype.slice.call(arguments, 1);
  sources.forEach(function(source) {
    if (!source) {
      return;
    }
    if (typeof source !== "object") {
      throw new TypeError(source + "must be object");
    }
    Object.keys(source).forEach(function(key) {
      obj[key] = source[key];
    });
  });
  return obj;
}
function arrayReplaceAt(src, pos, newElements) {
  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));
}
function isValidEntityCode(c2) {
  if (c2 >= 55296 && c2 <= 57343) {
    return false;
  }
  if (c2 >= 64976 && c2 <= 65007) {
    return false;
  }
  if ((c2 & 65535) === 65535 || (c2 & 65535) === 65534) {
    return false;
  }
  if (c2 >= 0 && c2 <= 8) {
    return false;
  }
  if (c2 === 11) {
    return false;
  }
  if (c2 >= 14 && c2 <= 31) {
    return false;
  }
  if (c2 >= 127 && c2 <= 159) {
    return false;
  }
  if (c2 > 1114111) {
    return false;
  }
  return true;
}
function fromCodePoint2(c2) {
  if (c2 > 65535) {
    c2 -= 65536;
    const surrogate1 = 55296 + (c2 >> 10);
    const surrogate2 = 56320 + (c2 & 1023);
    return String.fromCharCode(surrogate1, surrogate2);
  }
  return String.fromCharCode(c2);
}
var UNESCAPE_MD_RE = /\\([!"#$%&'()*+,\-./:;<=>?@[\\\]^_`{|}~])/g;
var ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;
var UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + "|" + ENTITY_RE.source, "gi");
var DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;
function replaceEntityPattern(match2, name) {
  if (name.charCodeAt(0) === 35 && DIGITAL_ENTITY_TEST_RE.test(name)) {
    const code2 = name[1].toLowerCase() === "x" ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);
    if (isValidEntityCode(code2)) {
      return fromCodePoint2(code2);
    }
    return match2;
  }
  const decoded = decodeHTML(match2);
  if (decoded !== match2) {
    return decoded;
  }
  return match2;
}
function unescapeMd(str) {
  if (str.indexOf("\\") < 0) {
    return str;
  }
  return str.replace(UNESCAPE_MD_RE, "$1");
}
function unescapeAll(str) {
  if (str.indexOf("\\") < 0 && str.indexOf("&") < 0) {
    return str;
  }
  return str.replace(UNESCAPE_ALL_RE, function(match2, escaped, entity2) {
    if (escaped) {
      return escaped;
    }
    return replaceEntityPattern(match2, entity2);
  });
}
var HTML_ESCAPE_TEST_RE = /[&<>"]/;
var HTML_ESCAPE_REPLACE_RE = /[&<>"]/g;
var HTML_REPLACEMENTS = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;"
};
function replaceUnsafeChar(ch) {
  return HTML_REPLACEMENTS[ch];
}
function escapeHtml(str) {
  if (HTML_ESCAPE_TEST_RE.test(str)) {
    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);
  }
  return str;
}
var REGEXP_ESCAPE_RE = /[.?*+^$[\]\\(){}|-]/g;
function escapeRE(str) {
  return str.replace(REGEXP_ESCAPE_RE, "\\$&");
}
function isSpace(code2) {
  switch (code2) {
    case 9:
    case 32:
      return true;
  }
  return false;
}
function isWhiteSpace(code2) {
  if (code2 >= 8192 && code2 <= 8202) {
    return true;
  }
  switch (code2) {
    case 9:
    // \t
    case 10:
    // \n
    case 11:
    // \v
    case 12:
    // \f
    case 13:
    // \r
    case 32:
    case 160:
    case 5760:
    case 8239:
    case 8287:
    case 12288:
      return true;
  }
  return false;
}
function isPunctChar(ch) {
  return regex_default4.test(ch) || regex_default5.test(ch);
}
function isMdAsciiPunct(ch) {
  switch (ch) {
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 123:
    case 124:
    case 125:
    case 126:
      return true;
    default:
      return false;
  }
}
function normalizeReference(str) {
  str = str.trim().replace(/\s+/g, " ");
  if ("ẞ".toLowerCase() === "Ṿ") {
    str = str.replace(/ẞ/g, "ß");
  }
  return str.toLowerCase().toUpperCase();
}
var lib = { mdurl: mdurl_exports, ucmicro: uc_exports };

// ../../../node_modules/markdown-it/lib/helpers/index.mjs
var helpers_exports = {};
__export(helpers_exports, {
  parseLinkDestination: () => parseLinkDestination,
  parseLinkLabel: () => parseLinkLabel,
  parseLinkTitle: () => parseLinkTitle
});

// ../../../node_modules/markdown-it/lib/helpers/parse_link_label.mjs
function parseLinkLabel(state, start, disableNested) {
  let level, found, marker, prevPos;
  const max2 = state.posMax;
  const oldPos = state.pos;
  state.pos = start + 1;
  level = 1;
  while (state.pos < max2) {
    marker = state.src.charCodeAt(state.pos);
    if (marker === 93) {
      level--;
      if (level === 0) {
        found = true;
        break;
      }
    }
    prevPos = state.pos;
    state.md.inline.skipToken(state);
    if (marker === 91) {
      if (prevPos === state.pos - 1) {
        level++;
      } else if (disableNested) {
        state.pos = oldPos;
        return -1;
      }
    }
  }
  let labelEnd = -1;
  if (found) {
    labelEnd = state.pos;
  }
  state.pos = oldPos;
  return labelEnd;
}

// ../../../node_modules/markdown-it/lib/helpers/parse_link_destination.mjs
function parseLinkDestination(str, start, max2) {
  let code2;
  let pos = start;
  const result = {
    ok: false,
    pos: 0,
    str: ""
  };
  if (str.charCodeAt(pos) === 60) {
    pos++;
    while (pos < max2) {
      code2 = str.charCodeAt(pos);
      if (code2 === 10) {
        return result;
      }
      if (code2 === 60) {
        return result;
      }
      if (code2 === 62) {
        result.pos = pos + 1;
        result.str = unescapeAll(str.slice(start + 1, pos));
        result.ok = true;
        return result;
      }
      if (code2 === 92 && pos + 1 < max2) {
        pos += 2;
        continue;
      }
      pos++;
    }
    return result;
  }
  let level = 0;
  while (pos < max2) {
    code2 = str.charCodeAt(pos);
    if (code2 === 32) {
      break;
    }
    if (code2 < 32 || code2 === 127) {
      break;
    }
    if (code2 === 92 && pos + 1 < max2) {
      if (str.charCodeAt(pos + 1) === 32) {
        break;
      }
      pos += 2;
      continue;
    }
    if (code2 === 40) {
      level++;
      if (level > 32) {
        return result;
      }
    }
    if (code2 === 41) {
      if (level === 0) {
        break;
      }
      level--;
    }
    pos++;
  }
  if (start === pos) {
    return result;
  }
  if (level !== 0) {
    return result;
  }
  result.str = unescapeAll(str.slice(start, pos));
  result.pos = pos;
  result.ok = true;
  return result;
}

// ../../../node_modules/markdown-it/lib/helpers/parse_link_title.mjs
function parseLinkTitle(str, start, max2, prev_state) {
  let code2;
  let pos = start;
  const state = {
    // if `true`, this is a valid link title
    ok: false,
    // if `true`, this link can be continued on the next line
    can_continue: false,
    // if `ok`, it's the position of the first character after the closing marker
    pos: 0,
    // if `ok`, it's the unescaped title
    str: "",
    // expected closing marker character code
    marker: 0
  };
  if (prev_state) {
    state.str = prev_state.str;
    state.marker = prev_state.marker;
  } else {
    if (pos >= max2) {
      return state;
    }
    let marker = str.charCodeAt(pos);
    if (marker !== 34 && marker !== 39 && marker !== 40) {
      return state;
    }
    start++;
    pos++;
    if (marker === 40) {
      marker = 41;
    }
    state.marker = marker;
  }
  while (pos < max2) {
    code2 = str.charCodeAt(pos);
    if (code2 === state.marker) {
      state.pos = pos + 1;
      state.str += unescapeAll(str.slice(start, pos));
      state.ok = true;
      return state;
    } else if (code2 === 40 && state.marker === 41) {
      return state;
    } else if (code2 === 92 && pos + 1 < max2) {
      pos++;
    }
    pos++;
  }
  state.can_continue = true;
  state.str += unescapeAll(str.slice(start, pos));
  return state;
}

// ../../../node_modules/markdown-it/lib/renderer.mjs
var default_rules = {};
default_rules.code_inline = function(tokens, idx, options, env2, slf) {
  const token = tokens[idx];
  return "<code" + slf.renderAttrs(token) + ">" + escapeHtml(token.content) + "</code>";
};
default_rules.code_block = function(tokens, idx, options, env2, slf) {
  const token = tokens[idx];
  return "<pre" + slf.renderAttrs(token) + "><code>" + escapeHtml(tokens[idx].content) + "</code></pre>\n";
};
default_rules.fence = function(tokens, idx, options, env2, slf) {
  const token = tokens[idx];
  const info = token.info ? unescapeAll(token.info).trim() : "";
  let langName = "";
  let langAttrs = "";
  if (info) {
    const arr = info.split(/(\s+)/g);
    langName = arr[0];
    langAttrs = arr.slice(2).join("");
  }
  let highlighted;
  if (options.highlight) {
    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);
  } else {
    highlighted = escapeHtml(token.content);
  }
  if (highlighted.indexOf("<pre") === 0) {
    return highlighted + "\n";
  }
  if (info) {
    const i = token.attrIndex("class");
    const tmpAttrs = token.attrs ? token.attrs.slice() : [];
    if (i < 0) {
      tmpAttrs.push(["class", options.langPrefix + langName]);
    } else {
      tmpAttrs[i] = tmpAttrs[i].slice();
      tmpAttrs[i][1] += " " + options.langPrefix + langName;
    }
    const tmpToken = {
      attrs: tmpAttrs
    };
    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>
`;
  }
  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>
`;
};
default_rules.image = function(tokens, idx, options, env2, slf) {
  const token = tokens[idx];
  token.attrs[token.attrIndex("alt")][1] = slf.renderInlineAsText(token.children, options, env2);
  return slf.renderToken(tokens, idx, options);
};
default_rules.hardbreak = function(tokens, idx, options) {
  return options.xhtmlOut ? "<br />\n" : "<br>\n";
};
default_rules.softbreak = function(tokens, idx, options) {
  return options.breaks ? options.xhtmlOut ? "<br />\n" : "<br>\n" : "\n";
};
default_rules.text = function(tokens, idx) {
  return escapeHtml(tokens[idx].content);
};
default_rules.html_block = function(tokens, idx) {
  return tokens[idx].content;
};
default_rules.html_inline = function(tokens, idx) {
  return tokens[idx].content;
};
function Renderer() {
  this.rules = assign({}, default_rules);
}
Renderer.prototype.renderAttrs = function renderAttrs(token) {
  let i, l, result;
  if (!token.attrs) {
    return "";
  }
  result = "";
  for (i = 0, l = token.attrs.length; i < l; i++) {
    result += " " + escapeHtml(token.attrs[i][0]) + '="' + escapeHtml(token.attrs[i][1]) + '"';
  }
  return result;
};
Renderer.prototype.renderToken = function renderToken(tokens, idx, options) {
  const token = tokens[idx];
  let result = "";
  if (token.hidden) {
    return "";
  }
  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {
    result += "\n";
  }
  result += (token.nesting === -1 ? "</" : "<") + token.tag;
  result += this.renderAttrs(token);
  if (token.nesting === 0 && options.xhtmlOut) {
    result += " /";
  }
  let needLf = false;
  if (token.block) {
    needLf = true;
    if (token.nesting === 1) {
      if (idx + 1 < tokens.length) {
        const nextToken = tokens[idx + 1];
        if (nextToken.type === "inline" || nextToken.hidden) {
          needLf = false;
        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {
          needLf = false;
        }
      }
    }
  }
  result += needLf ? ">\n" : ">";
  return result;
};
Renderer.prototype.renderInline = function(tokens, options, env2) {
  let result = "";
  const rules = this.rules;
  for (let i = 0, len = tokens.length; i < len; i++) {
    const type = tokens[i].type;
    if (typeof rules[type] !== "undefined") {
      result += rules[type](tokens, i, options, env2, this);
    } else {
      result += this.renderToken(tokens, i, options);
    }
  }
  return result;
};
Renderer.prototype.renderInlineAsText = function(tokens, options, env2) {
  let result = "";
  for (let i = 0, len = tokens.length; i < len; i++) {
    switch (tokens[i].type) {
      case "text":
        result += tokens[i].content;
        break;
      case "image":
        result += this.renderInlineAsText(tokens[i].children, options, env2);
        break;
      case "html_inline":
      case "html_block":
        result += tokens[i].content;
        break;
      case "softbreak":
      case "hardbreak":
        result += "\n";
        break;
      default:
    }
  }
  return result;
};
Renderer.prototype.render = function(tokens, options, env2) {
  let result = "";
  const rules = this.rules;
  for (let i = 0, len = tokens.length; i < len; i++) {
    const type = tokens[i].type;
    if (type === "inline") {
      result += this.renderInline(tokens[i].children, options, env2);
    } else if (typeof rules[type] !== "undefined") {
      result += rules[type](tokens, i, options, env2, this);
    } else {
      result += this.renderToken(tokens, i, options, env2);
    }
  }
  return result;
};
var renderer_default = Renderer;

// ../../../node_modules/markdown-it/lib/ruler.mjs
function Ruler() {
  this.__rules__ = [];
  this.__cache__ = null;
}
Ruler.prototype.__find__ = function(name) {
  for (let i = 0; i < this.__rules__.length; i++) {
    if (this.__rules__[i].name === name) {
      return i;
    }
  }
  return -1;
};
Ruler.prototype.__compile__ = function() {
  const self = this;
  const chains = [""];
  self.__rules__.forEach(function(rule) {
    if (!rule.enabled) {
      return;
    }
    rule.alt.forEach(function(altName) {
      if (chains.indexOf(altName) < 0) {
        chains.push(altName);
      }
    });
  });
  self.__cache__ = {};
  chains.forEach(function(chain) {
    self.__cache__[chain] = [];
    self.__rules__.forEach(function(rule) {
      if (!rule.enabled) {
        return;
      }
      if (chain && rule.alt.indexOf(chain) < 0) {
        return;
      }
      self.__cache__[chain].push(rule.fn);
    });
  });
};
Ruler.prototype.at = function(name, fn, options) {
  const index2 = this.__find__(name);
  const opt = options || {};
  if (index2 === -1) {
    throw new Error("Parser rule not found: " + name);
  }
  this.__rules__[index2].fn = fn;
  this.__rules__[index2].alt = opt.alt || [];
  this.__cache__ = null;
};
Ruler.prototype.before = function(beforeName, ruleName, fn, options) {
  const index2 = this.__find__(beforeName);
  const opt = options || {};
  if (index2 === -1) {
    throw new Error("Parser rule not found: " + beforeName);
  }
  this.__rules__.splice(index2, 0, {
    name: ruleName,
    enabled: true,
    fn,
    alt: opt.alt || []
  });
  this.__cache__ = null;
};
Ruler.prototype.after = function(afterName, ruleName, fn, options) {
  const index2 = this.__find__(afterName);
  const opt = options || {};
  if (index2 === -1) {
    throw new Error("Parser rule not found: " + afterName);
  }
  this.__rules__.splice(index2 + 1, 0, {
    name: ruleName,
    enabled: true,
    fn,
    alt: opt.alt || []
  });
  this.__cache__ = null;
};
Ruler.prototype.push = function(ruleName, fn, options) {
  const opt = options || {};
  this.__rules__.push({
    name: ruleName,
    enabled: true,
    fn,
    alt: opt.alt || []
  });
  this.__cache__ = null;
};
Ruler.prototype.enable = function(list2, ignoreInvalid) {
  if (!Array.isArray(list2)) {
    list2 = [list2];
  }
  const result = [];
  list2.forEach(function(name) {
    const idx = this.__find__(name);
    if (idx < 0) {
      if (ignoreInvalid) {
        return;
      }
      throw new Error("Rules manager: invalid rule name " + name);
    }
    this.__rules__[idx].enabled = true;
    result.push(name);
  }, this);
  this.__cache__ = null;
  return result;
};
Ruler.prototype.enableOnly = function(list2, ignoreInvalid) {
  if (!Array.isArray(list2)) {
    list2 = [list2];
  }
  this.__rules__.forEach(function(rule) {
    rule.enabled = false;
  });
  this.enable(list2, ignoreInvalid);
};
Ruler.prototype.disable = function(list2, ignoreInvalid) {
  if (!Array.isArray(list2)) {
    list2 = [list2];
  }
  const result = [];
  list2.forEach(function(name) {
    const idx = this.__find__(name);
    if (idx < 0) {
      if (ignoreInvalid) {
        return;
      }
      throw new Error("Rules manager: invalid rule name " + name);
    }
    this.__rules__[idx].enabled = false;
    result.push(name);
  }, this);
  this.__cache__ = null;
  return result;
};
Ruler.prototype.getRules = function(chainName) {
  if (this.__cache__ === null) {
    this.__compile__();
  }
  return this.__cache__[chainName] || [];
};
var ruler_default = Ruler;

// ../../../node_modules/markdown-it/lib/token.mjs
function Token(type, tag, nesting) {
  this.type = type;
  this.tag = tag;
  this.attrs = null;
  this.map = null;
  this.nesting = nesting;
  this.level = 0;
  this.children = null;
  this.content = "";
  this.markup = "";
  this.info = "";
  this.meta = null;
  this.block = false;
  this.hidden = false;
}
Token.prototype.attrIndex = function attrIndex(name) {
  if (!this.attrs) {
    return -1;
  }
  const attrs = this.attrs;
  for (let i = 0, len = attrs.length; i < len; i++) {
    if (attrs[i][0] === name) {
      return i;
    }
  }
  return -1;
};
Token.prototype.attrPush = function attrPush(attrData) {
  if (this.attrs) {
    this.attrs.push(attrData);
  } else {
    this.attrs = [attrData];
  }
};
Token.prototype.attrSet = function attrSet(name, value) {
  const idx = this.attrIndex(name);
  const attrData = [name, value];
  if (idx < 0) {
    this.attrPush(attrData);
  } else {
    this.attrs[idx] = attrData;
  }
};
Token.prototype.attrGet = function attrGet(name) {
  const idx = this.attrIndex(name);
  let value = null;
  if (idx >= 0) {
    value = this.attrs[idx][1];
  }
  return value;
};
Token.prototype.attrJoin = function attrJoin(name, value) {
  const idx = this.attrIndex(name);
  if (idx < 0) {
    this.attrPush([name, value]);
  } else {
    this.attrs[idx][1] = this.attrs[idx][1] + " " + value;
  }
};
var token_default = Token;

// ../../../node_modules/markdown-it/lib/rules_core/state_core.mjs
function StateCore(src, md2, env2) {
  this.src = src;
  this.env = env2;
  this.tokens = [];
  this.inlineMode = false;
  this.md = md2;
}
StateCore.prototype.Token = token_default;
var state_core_default = StateCore;

// ../../../node_modules/markdown-it/lib/rules_core/normalize.mjs
var NEWLINES_RE = /\r\n?|\n/g;
var NULL_RE = /\0/g;
function normalize(state) {
  let str;
  str = state.src.replace(NEWLINES_RE, "\n");
  str = str.replace(NULL_RE, "�");
  state.src = str;
}

// ../../../node_modules/markdown-it/lib/rules_core/block.mjs
function block(state) {
  let token;
  if (state.inlineMode) {
    token = new state.Token("inline", "", 0);
    token.content = state.src;
    token.map = [0, 1];
    token.children = [];
    state.tokens.push(token);
  } else {
    state.md.block.parse(state.src, state.md, state.env, state.tokens);
  }
}

// ../../../node_modules/markdown-it/lib/rules_core/inline.mjs
function inline(state) {
  const tokens = state.tokens;
  for (let i = 0, l = tokens.length; i < l; i++) {
    const tok = tokens[i];
    if (tok.type === "inline") {
      state.md.inline.parse(tok.content, state.md, state.env, tok.children);
    }
  }
}

// ../../../node_modules/markdown-it/lib/rules_core/linkify.mjs
function isLinkOpen(str) {
  return /^<a[>\s]/i.test(str);
}
function isLinkClose(str) {
  return /^<\/a\s*>/i.test(str);
}
function linkify(state) {
  const blockTokens = state.tokens;
  if (!state.md.options.linkify) {
    return;
  }
  for (let j = 0, l = blockTokens.length; j < l; j++) {
    if (blockTokens[j].type !== "inline" || !state.md.linkify.pretest(blockTokens[j].content)) {
      continue;
    }
    let tokens = blockTokens[j].children;
    let htmlLinkLevel = 0;
    for (let i = tokens.length - 1; i >= 0; i--) {
      const currentToken = tokens[i];
      if (currentToken.type === "link_close") {
        i--;
        while (tokens[i].level !== currentToken.level && tokens[i].type !== "link_open") {
          i--;
        }
        continue;
      }
      if (currentToken.type === "html_inline") {
        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {
          htmlLinkLevel--;
        }
        if (isLinkClose(currentToken.content)) {
          htmlLinkLevel++;
        }
      }
      if (htmlLinkLevel > 0) {
        continue;
      }
      if (currentToken.type === "text" && state.md.linkify.test(currentToken.content)) {
        const text2 = currentToken.content;
        let links = state.md.linkify.match(text2);
        const nodes = [];
        let level = currentToken.level;
        let lastPos = 0;
        if (links.length > 0 && links[0].index === 0 && i > 0 && tokens[i - 1].type === "text_special") {
          links = links.slice(1);
        }
        for (let ln = 0; ln < links.length; ln++) {
          const url = links[ln].url;
          const fullUrl = state.md.normalizeLink(url);
          if (!state.md.validateLink(fullUrl)) {
            continue;
          }
          let urlText = links[ln].text;
          if (!links[ln].schema) {
            urlText = state.md.normalizeLinkText("http://" + urlText).replace(/^http:\/\//, "");
          } else if (links[ln].schema === "mailto:" && !/^mailto:/i.test(urlText)) {
            urlText = state.md.normalizeLinkText("mailto:" + urlText).replace(/^mailto:/, "");
          } else {
            urlText = state.md.normalizeLinkText(urlText);
          }
          const pos = links[ln].index;
          if (pos > lastPos) {
            const token = new state.Token("text", "", 0);
            token.content = text2.slice(lastPos, pos);
            token.level = level;
            nodes.push(token);
          }
          const token_o = new state.Token("link_open", "a", 1);
          token_o.attrs = [["href", fullUrl]];
          token_o.level = level++;
          token_o.markup = "linkify";
          token_o.info = "auto";
          nodes.push(token_o);
          const token_t = new state.Token("text", "", 0);
          token_t.content = urlText;
          token_t.level = level;
          nodes.push(token_t);
          const token_c = new state.Token("link_close", "a", -1);
          token_c.level = --level;
          token_c.markup = "linkify";
          token_c.info = "auto";
          nodes.push(token_c);
          lastPos = links[ln].lastIndex;
        }
        if (lastPos < text2.length) {
          const token = new state.Token("text", "", 0);
          token.content = text2.slice(lastPos);
          token.level = level;
          nodes.push(token);
        }
        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);
      }
    }
  }
}

// ../../../node_modules/markdown-it/lib/rules_core/replacements.mjs
var RARE_RE = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/;
var SCOPED_ABBR_TEST_RE = /\((c|tm|r)\)/i;
var SCOPED_ABBR_RE = /\((c|tm|r)\)/ig;
var SCOPED_ABBR = {
  c: "©",
  r: "®",
  tm: "™"
};
function replaceFn(match2, name) {
  return SCOPED_ABBR[name.toLowerCase()];
}
function replace_scoped(inlineTokens) {
  let inside_autolink = 0;
  for (let i = inlineTokens.length - 1; i >= 0; i--) {
    const token = inlineTokens[i];
    if (token.type === "text" && !inside_autolink) {
      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);
    }
    if (token.type === "link_open" && token.info === "auto") {
      inside_autolink--;
    }
    if (token.type === "link_close" && token.info === "auto") {
      inside_autolink++;
    }
  }
}
function replace_rare(inlineTokens) {
  let inside_autolink = 0;
  for (let i = inlineTokens.length - 1; i >= 0; i--) {
    const token = inlineTokens[i];
    if (token.type === "text" && !inside_autolink) {
      if (RARE_RE.test(token.content)) {
        token.content = token.content.replace(/\+-/g, "±").replace(/\.{2,}/g, "…").replace(/([?!])…/g, "$1..").replace(/([?!]){4,}/g, "$1$1$1").replace(/,{2,}/g, ",").replace(/(^|[^-])---(?=[^-]|$)/mg, "$1—").replace(/(^|\s)--(?=\s|$)/mg, "$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/mg, "$1–");
      }
    }
    if (token.type === "link_open" && token.info === "auto") {
      inside_autolink--;
    }
    if (token.type === "link_close" && token.info === "auto") {
      inside_autolink++;
    }
  }
}
function replace(state) {
  let blkIdx;
  if (!state.md.options.typographer) {
    return;
  }
  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {
    if (state.tokens[blkIdx].type !== "inline") {
      continue;
    }
    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {
      replace_scoped(state.tokens[blkIdx].children);
    }
    if (RARE_RE.test(state.tokens[blkIdx].content)) {
      replace_rare(state.tokens[blkIdx].children);
    }
  }
}

// ../../../node_modules/markdown-it/lib/rules_core/smartquotes.mjs
var QUOTE_TEST_RE = /['"]/;
var QUOTE_RE = /['"]/g;
var APOSTROPHE = "’";
function replaceAt(str, index2, ch) {
  return str.slice(0, index2) + ch + str.slice(index2 + 1);
}
function process_inlines(tokens, state) {
  let j;
  const stack = [];
  for (let i = 0; i < tokens.length; i++) {
    const token = tokens[i];
    const thisLevel = tokens[i].level;
    for (j = stack.length - 1; j >= 0; j--) {
      if (stack[j].level <= thisLevel) {
        break;
      }
    }
    stack.length = j + 1;
    if (token.type !== "text") {
      continue;
    }
    let text2 = token.content;
    let pos = 0;
    let max2 = text2.length;
    OUTER:
      while (pos < max2) {
        QUOTE_RE.lastIndex = pos;
        const t2 = QUOTE_RE.exec(text2);
        if (!t2) {
          break;
        }
        let canOpen = true;
        let canClose = true;
        pos = t2.index + 1;
        const isSingle = t2[0] === "'";
        let lastChar = 32;
        if (t2.index - 1 >= 0) {
          lastChar = text2.charCodeAt(t2.index - 1);
        } else {
          for (j = i - 1; j >= 0; j--) {
            if (tokens[j].type === "softbreak" || tokens[j].type === "hardbreak") break;
            if (!tokens[j].content) continue;
            lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);
            break;
          }
        }
        let nextChar = 32;
        if (pos < max2) {
          nextChar = text2.charCodeAt(pos);
        } else {
          for (j = i + 1; j < tokens.length; j++) {
            if (tokens[j].type === "softbreak" || tokens[j].type === "hardbreak") break;
            if (!tokens[j].content) continue;
            nextChar = tokens[j].content.charCodeAt(0);
            break;
          }
        }
        const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));
        const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));
        const isLastWhiteSpace = isWhiteSpace(lastChar);
        const isNextWhiteSpace = isWhiteSpace(nextChar);
        if (isNextWhiteSpace) {
          canOpen = false;
        } else if (isNextPunctChar) {
          if (!(isLastWhiteSpace || isLastPunctChar)) {
            canOpen = false;
          }
        }
        if (isLastWhiteSpace) {
          canClose = false;
        } else if (isLastPunctChar) {
          if (!(isNextWhiteSpace || isNextPunctChar)) {
            canClose = false;
          }
        }
        if (nextChar === 34 && t2[0] === '"') {
          if (lastChar >= 48 && lastChar <= 57) {
            canClose = canOpen = false;
          }
        }
        if (canOpen && canClose) {
          canOpen = isLastPunctChar;
          canClose = isNextPunctChar;
        }
        if (!canOpen && !canClose) {
          if (isSingle) {
            token.content = replaceAt(token.content, t2.index, APOSTROPHE);
          }
          continue;
        }
        if (canClose) {
          for (j = stack.length - 1; j >= 0; j--) {
            let item = stack[j];
            if (stack[j].level < thisLevel) {
              break;
            }
            if (item.single === isSingle && stack[j].level === thisLevel) {
              item = stack[j];
              let openQuote;
              let closeQuote;
              if (isSingle) {
                openQuote = state.md.options.quotes[2];
                closeQuote = state.md.options.quotes[3];
              } else {
                openQuote = state.md.options.quotes[0];
                closeQuote = state.md.options.quotes[1];
              }
              token.content = replaceAt(token.content, t2.index, closeQuote);
              tokens[item.token].content = replaceAt(
                tokens[item.token].content,
                item.pos,
                openQuote
              );
              pos += closeQuote.length - 1;
              if (item.token === i) {
                pos += openQuote.length - 1;
              }
              text2 = token.content;
              max2 = text2.length;
              stack.length = j;
              continue OUTER;
            }
          }
        }
        if (canOpen) {
          stack.push({
            token: i,
            pos: t2.index,
            single: isSingle,
            level: thisLevel
          });
        } else if (canClose && isSingle) {
          token.content = replaceAt(token.content, t2.index, APOSTROPHE);
        }
      }
  }
}
function smartquotes(state) {
  if (!state.md.options.typographer) {
    return;
  }
  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {
    if (state.tokens[blkIdx].type !== "inline" || !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {
      continue;
    }
    process_inlines(state.tokens[blkIdx].children, state);
  }
}

// ../../../node_modules/markdown-it/lib/rules_core/text_join.mjs
function text_join(state) {
  let curr, last;
  const blockTokens = state.tokens;
  const l = blockTokens.length;
  for (let j = 0; j < l; j++) {
    if (blockTokens[j].type !== "inline") continue;
    const tokens = blockTokens[j].children;
    const max2 = tokens.length;
    for (curr = 0; curr < max2; curr++) {
      if (tokens[curr].type === "text_special") {
        tokens[curr].type = "text";
      }
    }
    for (curr = last = 0; curr < max2; curr++) {
      if (tokens[curr].type === "text" && curr + 1 < max2 && tokens[curr + 1].type === "text") {
        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;
      } else {
        if (curr !== last) {
          tokens[last] = tokens[curr];
        }
        last++;
      }
    }
    if (curr !== last) {
      tokens.length = last;
    }
  }
}

// ../../../node_modules/markdown-it/lib/parser_core.mjs
var _rules = [
  ["normalize", normalize],
  ["block", block],
  ["inline", inline],
  ["linkify", linkify],
  ["replacements", replace],
  ["smartquotes", smartquotes],
  // `text_join` finds `text_special` tokens (for escape sequences)
  // and joins them with the rest of the text
  ["text_join", text_join]
];
function Core() {
  this.ruler = new ruler_default();
  for (let i = 0; i < _rules.length; i++) {
    this.ruler.push(_rules[i][0], _rules[i][1]);
  }
}
Core.prototype.process = function(state) {
  const rules = this.ruler.getRules("");
  for (let i = 0, l = rules.length; i < l; i++) {
    rules[i](state);
  }
};
Core.prototype.State = state_core_default;
var parser_core_default = Core;

// ../../../node_modules/markdown-it/lib/rules_block/state_block.mjs
function StateBlock(src, md2, env2, tokens) {
  this.src = src;
  this.md = md2;
  this.env = env2;
  this.tokens = tokens;
  this.bMarks = [];
  this.eMarks = [];
  this.tShift = [];
  this.sCount = [];
  this.bsCount = [];
  this.blkIndent = 0;
  this.line = 0;
  this.lineMax = 0;
  this.tight = false;
  this.ddIndent = -1;
  this.listIndent = -1;
  this.parentType = "root";
  this.level = 0;
  const s = this.src;
  for (let start = 0, pos = 0, indent = 0, offset4 = 0, len = s.length, indent_found = false; pos < len; pos++) {
    const ch = s.charCodeAt(pos);
    if (!indent_found) {
      if (isSpace(ch)) {
        indent++;
        if (ch === 9) {
          offset4 += 4 - offset4 % 4;
        } else {
          offset4++;
        }
        continue;
      } else {
        indent_found = true;
      }
    }
    if (ch === 10 || pos === len - 1) {
      if (ch !== 10) {
        pos++;
      }
      this.bMarks.push(start);
      this.eMarks.push(pos);
      this.tShift.push(indent);
      this.sCount.push(offset4);
      this.bsCount.push(0);
      indent_found = false;
      indent = 0;
      offset4 = 0;
      start = pos + 1;
    }
  }
  this.bMarks.push(s.length);
  this.eMarks.push(s.length);
  this.tShift.push(0);
  this.sCount.push(0);
  this.bsCount.push(0);
  this.lineMax = this.bMarks.length - 1;
}
StateBlock.prototype.push = function(type, tag, nesting) {
  const token = new token_default(type, tag, nesting);
  token.block = true;
  if (nesting < 0) this.level--;
  token.level = this.level;
  if (nesting > 0) this.level++;
  this.tokens.push(token);
  return token;
};
StateBlock.prototype.isEmpty = function isEmpty(line) {
  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];
};
StateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {
  for (let max2 = this.lineMax; from < max2; from++) {
    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {
      break;
    }
  }
  return from;
};
StateBlock.prototype.skipSpaces = function skipSpaces(pos) {
  for (let max2 = this.src.length; pos < max2; pos++) {
    const ch = this.src.charCodeAt(pos);
    if (!isSpace(ch)) {
      break;
    }
  }
  return pos;
};
StateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min2) {
  if (pos <= min2) {
    return pos;
  }
  while (pos > min2) {
    if (!isSpace(this.src.charCodeAt(--pos))) {
      return pos + 1;
    }
  }
  return pos;
};
StateBlock.prototype.skipChars = function skipChars(pos, code2) {
  for (let max2 = this.src.length; pos < max2; pos++) {
    if (this.src.charCodeAt(pos) !== code2) {
      break;
    }
  }
  return pos;
};
StateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code2, min2) {
  if (pos <= min2) {
    return pos;
  }
  while (pos > min2) {
    if (code2 !== this.src.charCodeAt(--pos)) {
      return pos + 1;
    }
  }
  return pos;
};
StateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {
  if (begin >= end) {
    return "";
  }
  const queue = new Array(end - begin);
  for (let i = 0, line = begin; line < end; line++, i++) {
    let lineIndent = 0;
    const lineStart = this.bMarks[line];
    let first = lineStart;
    let last;
    if (line + 1 < end || keepLastLF) {
      last = this.eMarks[line] + 1;
    } else {
      last = this.eMarks[line];
    }
    while (first < last && lineIndent < indent) {
      const ch = this.src.charCodeAt(first);
      if (isSpace(ch)) {
        if (ch === 9) {
          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;
        } else {
          lineIndent++;
        }
      } else if (first - lineStart < this.tShift[line]) {
        lineIndent++;
      } else {
        break;
      }
      first++;
    }
    if (lineIndent > indent) {
      queue[i] = new Array(lineIndent - indent + 1).join(" ") + this.src.slice(first, last);
    } else {
      queue[i] = this.src.slice(first, last);
    }
  }
  return queue.join("");
};
StateBlock.prototype.Token = token_default;
var state_block_default = StateBlock;

// ../../../node_modules/markdown-it/lib/rules_block/table.mjs
var MAX_AUTOCOMPLETED_CELLS = 65536;
function getLine(state, line) {
  const pos = state.bMarks[line] + state.tShift[line];
  const max2 = state.eMarks[line];
  return state.src.slice(pos, max2);
}
function escapedSplit(str) {
  const result = [];
  const max2 = str.length;
  let pos = 0;
  let ch = str.charCodeAt(pos);
  let isEscaped = false;
  let lastPos = 0;
  let current = "";
  while (pos < max2) {
    if (ch === 124) {
      if (!isEscaped) {
        result.push(current + str.substring(lastPos, pos));
        current = "";
        lastPos = pos + 1;
      } else {
        current += str.substring(lastPos, pos - 1);
        lastPos = pos;
      }
    }
    isEscaped = ch === 92;
    pos++;
    ch = str.charCodeAt(pos);
  }
  result.push(current + str.substring(lastPos));
  return result;
}
function table(state, startLine, endLine, silent) {
  if (startLine + 2 > endLine) {
    return false;
  }
  let nextLine = startLine + 1;
  if (state.sCount[nextLine] < state.blkIndent) {
    return false;
  }
  if (state.sCount[nextLine] - state.blkIndent >= 4) {
    return false;
  }
  let pos = state.bMarks[nextLine] + state.tShift[nextLine];
  if (pos >= state.eMarks[nextLine]) {
    return false;
  }
  const firstCh = state.src.charCodeAt(pos++);
  if (firstCh !== 124 && firstCh !== 45 && firstCh !== 58) {
    return false;
  }
  if (pos >= state.eMarks[nextLine]) {
    return false;
  }
  const secondCh = state.src.charCodeAt(pos++);
  if (secondCh !== 124 && secondCh !== 45 && secondCh !== 58 && !isSpace(secondCh)) {
    return false;
  }
  if (firstCh === 45 && isSpace(secondCh)) {
    return false;
  }
  while (pos < state.eMarks[nextLine]) {
    const ch = state.src.charCodeAt(pos);
    if (ch !== 124 && ch !== 45 && ch !== 58 && !isSpace(ch)) {
      return false;
    }
    pos++;
  }
  let lineText = getLine(state, startLine + 1);
  let columns = lineText.split("|");
  const aligns = [];
  for (let i = 0; i < columns.length; i++) {
    const t2 = columns[i].trim();
    if (!t2) {
      if (i === 0 || i === columns.length - 1) {
        continue;
      } else {
        return false;
      }
    }
    if (!/^:?-+:?$/.test(t2)) {
      return false;
    }
    if (t2.charCodeAt(t2.length - 1) === 58) {
      aligns.push(t2.charCodeAt(0) === 58 ? "center" : "right");
    } else if (t2.charCodeAt(0) === 58) {
      aligns.push("left");
    } else {
      aligns.push("");
    }
  }
  lineText = getLine(state, startLine).trim();
  if (lineText.indexOf("|") === -1) {
    return false;
  }
  if (state.sCount[startLine] - state.blkIndent >= 4) {
    return false;
  }
  columns = escapedSplit(lineText);
  if (columns.length && columns[0] === "") columns.shift();
  if (columns.length && columns[columns.length - 1] === "") columns.pop();
  const columnCount = columns.length;
  if (columnCount === 0 || columnCount !== aligns.length) {
    return false;
  }
  if (silent) {
    return true;
  }
  const oldParentType = state.parentType;
  state.parentType = "table";
  const terminatorRules = state.md.block.ruler.getRules("blockquote");
  const token_to = state.push("table_open", "table", 1);
  const tableLines = [startLine, 0];
  token_to.map = tableLines;
  const token_tho = state.push("thead_open", "thead", 1);
  token_tho.map = [startLine, startLine + 1];
  const token_htro = state.push("tr_open", "tr", 1);
  token_htro.map = [startLine, startLine + 1];
  for (let i = 0; i < columns.length; i++) {
    const token_ho = state.push("th_open", "th", 1);
    if (aligns[i]) {
      token_ho.attrs = [["style", "text-align:" + aligns[i]]];
    }
    const token_il = state.push("inline", "", 0);
    token_il.content = columns[i].trim();
    token_il.children = [];
    state.push("th_close", "th", -1);
  }
  state.push("tr_close", "tr", -1);
  state.push("thead_close", "thead", -1);
  let tbodyLines;
  let autocompletedCells = 0;
  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {
    if (state.sCount[nextLine] < state.blkIndent) {
      break;
    }
    let terminate = false;
    for (let i = 0, l = terminatorRules.length; i < l; i++) {
      if (terminatorRules[i](state, nextLine, endLine, true)) {
        terminate = true;
        break;
      }
    }
    if (terminate) {
      break;
    }
    lineText = getLine(state, nextLine).trim();
    if (!lineText) {
      break;
    }
    if (state.sCount[nextLine] - state.blkIndent >= 4) {
      break;
    }
    columns = escapedSplit(lineText);
    if (columns.length && columns[0] === "") columns.shift();
    if (columns.length && columns[columns.length - 1] === "") columns.pop();
    autocompletedCells += columnCount - columns.length;
    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) {
      break;
    }
    if (nextLine === startLine + 2) {
      const token_tbo = state.push("tbody_open", "tbody", 1);
      token_tbo.map = tbodyLines = [startLine + 2, 0];
    }
    const token_tro = state.push("tr_open", "tr", 1);
    token_tro.map = [nextLine, nextLine + 1];
    for (let i = 0; i < columnCount; i++) {
      const token_tdo = state.push("td_open", "td", 1);
      if (aligns[i]) {
        token_tdo.attrs = [["style", "text-align:" + aligns[i]]];
      }
      const token_il = state.push("inline", "", 0);
      token_il.content = columns[i] ? columns[i].trim() : "";
      token_il.children = [];
      state.push("td_close", "td", -1);
    }
    state.push("tr_close", "tr", -1);
  }
  if (tbodyLines) {
    state.push("tbody_close", "tbody", -1);
    tbodyLines[1] = nextLine;
  }
  state.push("table_close", "table", -1);
  tableLines[1] = nextLine;
  state.parentType = oldParentType;
  state.line = nextLine;
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_block/code.mjs
function code(state, startLine, endLine) {
  if (state.sCount[startLine] - state.blkIndent < 4) {
    return false;
  }
  let nextLine = startLine + 1;
  let last = nextLine;
  while (nextLine < endLine) {
    if (state.isEmpty(nextLine)) {
      nextLine++;
      continue;
    }
    if (state.sCount[nextLine] - state.blkIndent >= 4) {
      nextLine++;
      last = nextLine;
      continue;
    }
    break;
  }
  state.line = last;
  const token = state.push("code_block", "code", 0);
  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + "\n";
  token.map = [startLine, state.line];
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_block/fence.mjs
function fence(state, startLine, endLine, silent) {
  let pos = state.bMarks[startLine] + state.tShift[startLine];
  let max2 = state.eMarks[startLine];
  if (state.sCount[startLine] - state.blkIndent >= 4) {
    return false;
  }
  if (pos + 3 > max2) {
    return false;
  }
  const marker = state.src.charCodeAt(pos);
  if (marker !== 126 && marker !== 96) {
    return false;
  }
  let mem = pos;
  pos = state.skipChars(pos, marker);
  let len = pos - mem;
  if (len < 3) {
    return false;
  }
  const markup = state.src.slice(mem, pos);
  const params = state.src.slice(pos, max2);
  if (marker === 96) {
    if (params.indexOf(String.fromCharCode(marker)) >= 0) {
      return false;
    }
  }
  if (silent) {
    return true;
  }
  let nextLine = startLine;
  let haveEndMarker = false;
  for (; ; ) {
    nextLine++;
    if (nextLine >= endLine) {
      break;
    }
    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];
    max2 = state.eMarks[nextLine];
    if (pos < max2 && state.sCount[nextLine] < state.blkIndent) {
      break;
    }
    if (state.src.charCodeAt(pos) !== marker) {
      continue;
    }
    if (state.sCount[nextLine] - state.blkIndent >= 4) {
      continue;
    }
    pos = state.skipChars(pos, marker);
    if (pos - mem < len) {
      continue;
    }
    pos = state.skipSpaces(pos);
    if (pos < max2) {
      continue;
    }
    haveEndMarker = true;
    break;
  }
  len = state.sCount[startLine];
  state.line = nextLine + (haveEndMarker ? 1 : 0);
  const token = state.push("fence", "code", 0);
  token.info = params;
  token.content = state.getLines(startLine + 1, nextLine, len, true);
  token.markup = markup;
  token.map = [startLine, state.line];
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_block/blockquote.mjs
function blockquote(state, startLine, endLine, silent) {
  let pos = state.bMarks[startLine] + state.tShift[startLine];
  let max2 = state.eMarks[startLine];
  const oldLineMax = state.lineMax;
  if (state.sCount[startLine] - state.blkIndent >= 4) {
    return false;
  }
  if (state.src.charCodeAt(pos) !== 62) {
    return false;
  }
  if (silent) {
    return true;
  }
  const oldBMarks = [];
  const oldBSCount = [];
  const oldSCount = [];
  const oldTShift = [];
  const terminatorRules = state.md.block.ruler.getRules("blockquote");
  const oldParentType = state.parentType;
  state.parentType = "blockquote";
  let lastLineEmpty = false;
  let nextLine;
  for (nextLine = startLine; nextLine < endLine; nextLine++) {
    const isOutdented = state.sCount[nextLine] < state.blkIndent;
    pos = state.bMarks[nextLine] + state.tShift[nextLine];
    max2 = state.eMarks[nextLine];
    if (pos >= max2) {
      break;
    }
    if (state.src.charCodeAt(pos++) === 62 && !isOutdented) {
      let initial = state.sCount[nextLine] + 1;
      let spaceAfterMarker;
      let adjustTab;
      if (state.src.charCodeAt(pos) === 32) {
        pos++;
        initial++;
        adjustTab = false;
        spaceAfterMarker = true;
      } else if (state.src.charCodeAt(pos) === 9) {
        spaceAfterMarker = true;
        if ((state.bsCount[nextLine] + initial) % 4 === 3) {
          pos++;
          initial++;
          adjustTab = false;
        } else {
          adjustTab = true;
        }
      } else {
        spaceAfterMarker = false;
      }
      let offset4 = initial;
      oldBMarks.push(state.bMarks[nextLine]);
      state.bMarks[nextLine] = pos;
      while (pos < max2) {
        const ch = state.src.charCodeAt(pos);
        if (isSpace(ch)) {
          if (ch === 9) {
            offset4 += 4 - (offset4 + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;
          } else {
            offset4++;
          }
        } else {
          break;
        }
        pos++;
      }
      lastLineEmpty = pos >= max2;
      oldBSCount.push(state.bsCount[nextLine]);
      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);
      oldSCount.push(state.sCount[nextLine]);
      state.sCount[nextLine] = offset4 - initial;
      oldTShift.push(state.tShift[nextLine]);
      state.tShift[nextLine] = pos - state.bMarks[nextLine];
      continue;
    }
    if (lastLineEmpty) {
      break;
    }
    let terminate = false;
    for (let i = 0, l = terminatorRules.length; i < l; i++) {
      if (terminatorRules[i](state, nextLine, endLine, true)) {
        terminate = true;
        break;
      }
    }
    if (terminate) {
      state.lineMax = nextLine;
      if (state.blkIndent !== 0) {
        oldBMarks.push(state.bMarks[nextLine]);
        oldBSCount.push(state.bsCount[nextLine]);
        oldTShift.push(state.tShift[nextLine]);
        oldSCount.push(state.sCount[nextLine]);
        state.sCount[nextLine] -= state.blkIndent;
      }
      break;
    }
    oldBMarks.push(state.bMarks[nextLine]);
    oldBSCount.push(state.bsCount[nextLine]);
    oldTShift.push(state.tShift[nextLine]);
    oldSCount.push(state.sCount[nextLine]);
    state.sCount[nextLine] = -1;
  }
  const oldIndent = state.blkIndent;
  state.blkIndent = 0;
  const token_o = state.push("blockquote_open", "blockquote", 1);
  token_o.markup = ">";
  const lines = [startLine, 0];
  token_o.map = lines;
  state.md.block.tokenize(state, startLine, nextLine);
  const token_c = state.push("blockquote_close", "blockquote", -1);
  token_c.markup = ">";
  state.lineMax = oldLineMax;
  state.parentType = oldParentType;
  lines[1] = state.line;
  for (let i = 0; i < oldTShift.length; i++) {
    state.bMarks[i + startLine] = oldBMarks[i];
    state.tShift[i + startLine] = oldTShift[i];
    state.sCount[i + startLine] = oldSCount[i];
    state.bsCount[i + startLine] = oldBSCount[i];
  }
  state.blkIndent = oldIndent;
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_block/hr.mjs
function hr(state, startLine, endLine, silent) {
  const max2 = state.eMarks[startLine];
  if (state.sCount[startLine] - state.blkIndent >= 4) {
    return false;
  }
  let pos = state.bMarks[startLine] + state.tShift[startLine];
  const marker = state.src.charCodeAt(pos++);
  if (marker !== 42 && marker !== 45 && marker !== 95) {
    return false;
  }
  let cnt = 1;
  while (pos < max2) {
    const ch = state.src.charCodeAt(pos++);
    if (ch !== marker && !isSpace(ch)) {
      return false;
    }
    if (ch === marker) {
      cnt++;
    }
  }
  if (cnt < 3) {
    return false;
  }
  if (silent) {
    return true;
  }
  state.line = startLine + 1;
  const token = state.push("hr", "hr", 0);
  token.map = [startLine, state.line];
  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_block/list.mjs
function skipBulletListMarker(state, startLine) {
  const max2 = state.eMarks[startLine];
  let pos = state.bMarks[startLine] + state.tShift[startLine];
  const marker = state.src.charCodeAt(pos++);
  if (marker !== 42 && marker !== 45 && marker !== 43) {
    return -1;
  }
  if (pos < max2) {
    const ch = state.src.charCodeAt(pos);
    if (!isSpace(ch)) {
      return -1;
    }
  }
  return pos;
}
function skipOrderedListMarker(state, startLine) {
  const start = state.bMarks[startLine] + state.tShift[startLine];
  const max2 = state.eMarks[startLine];
  let pos = start;
  if (pos + 1 >= max2) {
    return -1;
  }
  let ch = state.src.charCodeAt(pos++);
  if (ch < 48 || ch > 57) {
    return -1;
  }
  for (; ; ) {
    if (pos >= max2) {
      return -1;
    }
    ch = state.src.charCodeAt(pos++);
    if (ch >= 48 && ch <= 57) {
      if (pos - start >= 10) {
        return -1;
      }
      continue;
    }
    if (ch === 41 || ch === 46) {
      break;
    }
    return -1;
  }
  if (pos < max2) {
    ch = state.src.charCodeAt(pos);
    if (!isSpace(ch)) {
      return -1;
    }
  }
  return pos;
}
function markTightParagraphs(state, idx) {
  const level = state.level + 2;
  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {
    if (state.tokens[i].level === level && state.tokens[i].type === "paragraph_open") {
      state.tokens[i + 2].hidden = true;
      state.tokens[i].hidden = true;
      i += 2;
    }
  }
}
function list(state, startLine, endLine, silent) {
  let max2, pos, start, token;
  let nextLine = startLine;
  let tight = true;
  if (state.sCount[nextLine] - state.blkIndent >= 4) {
    return false;
  }
  if (state.listIndent >= 0 && state.sCount[nextLine] - state.listIndent >= 4 && state.sCount[nextLine] < state.blkIndent) {
    return false;
  }
  let isTerminatingParagraph = false;
  if (silent && state.parentType === "paragraph") {
    if (state.sCount[nextLine] >= state.blkIndent) {
      isTerminatingParagraph = true;
    }
  }
  let isOrdered;
  let markerValue;
  let posAfterMarker;
  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {
    isOrdered = true;
    start = state.bMarks[nextLine] + state.tShift[nextLine];
    markerValue = Number(state.src.slice(start, posAfterMarker - 1));
    if (isTerminatingParagraph && markerValue !== 1) return false;
  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {
    isOrdered = false;
  } else {
    return false;
  }
  if (isTerminatingParagraph) {
    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false;
  }
  if (silent) {
    return true;
  }
  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1);
  const listTokIdx = state.tokens.length;
  if (isOrdered) {
    token = state.push("ordered_list_open", "ol", 1);
    if (markerValue !== 1) {
      token.attrs = [["start", markerValue]];
    }
  } else {
    token = state.push("bullet_list_open", "ul", 1);
  }
  const listLines = [nextLine, 0];
  token.map = listLines;
  token.markup = String.fromCharCode(markerCharCode);
  let prevEmptyEnd = false;
  const terminatorRules = state.md.block.ruler.getRules("list");
  const oldParentType = state.parentType;
  state.parentType = "list";
  while (nextLine < endLine) {
    pos = posAfterMarker;
    max2 = state.eMarks[nextLine];
    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine]);
    let offset4 = initial;
    while (pos < max2) {
      const ch = state.src.charCodeAt(pos);
      if (ch === 9) {
        offset4 += 4 - (offset4 + state.bsCount[nextLine]) % 4;
      } else if (ch === 32) {
        offset4++;
      } else {
        break;
      }
      pos++;
    }
    const contentStart = pos;
    let indentAfterMarker;
    if (contentStart >= max2) {
      indentAfterMarker = 1;
    } else {
      indentAfterMarker = offset4 - initial;
    }
    if (indentAfterMarker > 4) {
      indentAfterMarker = 1;
    }
    const indent = initial + indentAfterMarker;
    token = state.push("list_item_open", "li", 1);
    token.markup = String.fromCharCode(markerCharCode);
    const itemLines = [nextLine, 0];
    token.map = itemLines;
    if (isOrdered) {
      token.info = state.src.slice(start, posAfterMarker - 1);
    }
    const oldTight = state.tight;
    const oldTShift = state.tShift[nextLine];
    const oldSCount = state.sCount[nextLine];
    const oldListIndent = state.listIndent;
    state.listIndent = state.blkIndent;
    state.blkIndent = indent;
    state.tight = true;
    state.tShift[nextLine] = contentStart - state.bMarks[nextLine];
    state.sCount[nextLine] = offset4;
    if (contentStart >= max2 && state.isEmpty(nextLine + 1)) {
      state.line = Math.min(state.line + 2, endLine);
    } else {
      state.md.block.tokenize(state, nextLine, endLine, true);
    }
    if (!state.tight || prevEmptyEnd) {
      tight = false;
    }
    prevEmptyEnd = state.line - nextLine > 1 && state.isEmpty(state.line - 1);
    state.blkIndent = state.listIndent;
    state.listIndent = oldListIndent;
    state.tShift[nextLine] = oldTShift;
    state.sCount[nextLine] = oldSCount;
    state.tight = oldTight;
    token = state.push("list_item_close", "li", -1);
    token.markup = String.fromCharCode(markerCharCode);
    nextLine = state.line;
    itemLines[1] = nextLine;
    if (nextLine >= endLine) {
      break;
    }
    if (state.sCount[nextLine] < state.blkIndent) {
      break;
    }
    if (state.sCount[nextLine] - state.blkIndent >= 4) {
      break;
    }
    let terminate = false;
    for (let i = 0, l = terminatorRules.length; i < l; i++) {
      if (terminatorRules[i](state, nextLine, endLine, true)) {
        terminate = true;
        break;
      }
    }
    if (terminate) {
      break;
    }
    if (isOrdered) {
      posAfterMarker = skipOrderedListMarker(state, nextLine);
      if (posAfterMarker < 0) {
        break;
      }
      start = state.bMarks[nextLine] + state.tShift[nextLine];
    } else {
      posAfterMarker = skipBulletListMarker(state, nextLine);
      if (posAfterMarker < 0) {
        break;
      }
    }
    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {
      break;
    }
  }
  if (isOrdered) {
    token = state.push("ordered_list_close", "ol", -1);
  } else {
    token = state.push("bullet_list_close", "ul", -1);
  }
  token.markup = String.fromCharCode(markerCharCode);
  listLines[1] = nextLine;
  state.line = nextLine;
  state.parentType = oldParentType;
  if (tight) {
    markTightParagraphs(state, listTokIdx);
  }
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_block/reference.mjs
function reference(state, startLine, _endLine, silent) {
  let pos = state.bMarks[startLine] + state.tShift[startLine];
  let max2 = state.eMarks[startLine];
  let nextLine = startLine + 1;
  if (state.sCount[startLine] - state.blkIndent >= 4) {
    return false;
  }
  if (state.src.charCodeAt(pos) !== 91) {
    return false;
  }
  function getNextLine(nextLine2) {
    const endLine = state.lineMax;
    if (nextLine2 >= endLine || state.isEmpty(nextLine2)) {
      return null;
    }
    let isContinuation = false;
    if (state.sCount[nextLine2] - state.blkIndent > 3) {
      isContinuation = true;
    }
    if (state.sCount[nextLine2] < 0) {
      isContinuation = true;
    }
    if (!isContinuation) {
      const terminatorRules = state.md.block.ruler.getRules("reference");
      const oldParentType = state.parentType;
      state.parentType = "reference";
      let terminate = false;
      for (let i = 0, l = terminatorRules.length; i < l; i++) {
        if (terminatorRules[i](state, nextLine2, endLine, true)) {
          terminate = true;
          break;
        }
      }
      state.parentType = oldParentType;
      if (terminate) {
        return null;
      }
    }
    const pos2 = state.bMarks[nextLine2] + state.tShift[nextLine2];
    const max3 = state.eMarks[nextLine2];
    return state.src.slice(pos2, max3 + 1);
  }
  let str = state.src.slice(pos, max2 + 1);
  max2 = str.length;
  let labelEnd = -1;
  for (pos = 1; pos < max2; pos++) {
    const ch = str.charCodeAt(pos);
    if (ch === 91) {
      return false;
    } else if (ch === 93) {
      labelEnd = pos;
      break;
    } else if (ch === 10) {
      const lineContent = getNextLine(nextLine);
      if (lineContent !== null) {
        str += lineContent;
        max2 = str.length;
        nextLine++;
      }
    } else if (ch === 92) {
      pos++;
      if (pos < max2 && str.charCodeAt(pos) === 10) {
        const lineContent = getNextLine(nextLine);
        if (lineContent !== null) {
          str += lineContent;
          max2 = str.length;
          nextLine++;
        }
      }
    }
  }
  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 58) {
    return false;
  }
  for (pos = labelEnd + 2; pos < max2; pos++) {
    const ch = str.charCodeAt(pos);
    if (ch === 10) {
      const lineContent = getNextLine(nextLine);
      if (lineContent !== null) {
        str += lineContent;
        max2 = str.length;
        nextLine++;
      }
    } else if (isSpace(ch)) {
    } else {
      break;
    }
  }
  const destRes = state.md.helpers.parseLinkDestination(str, pos, max2);
  if (!destRes.ok) {
    return false;
  }
  const href = state.md.normalizeLink(destRes.str);
  if (!state.md.validateLink(href)) {
    return false;
  }
  pos = destRes.pos;
  const destEndPos = pos;
  const destEndLineNo = nextLine;
  const start = pos;
  for (; pos < max2; pos++) {
    const ch = str.charCodeAt(pos);
    if (ch === 10) {
      const lineContent = getNextLine(nextLine);
      if (lineContent !== null) {
        str += lineContent;
        max2 = str.length;
        nextLine++;
      }
    } else if (isSpace(ch)) {
    } else {
      break;
    }
  }
  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max2);
  while (titleRes.can_continue) {
    const lineContent = getNextLine(nextLine);
    if (lineContent === null) break;
    str += lineContent;
    pos = max2;
    max2 = str.length;
    nextLine++;
    titleRes = state.md.helpers.parseLinkTitle(str, pos, max2, titleRes);
  }
  let title;
  if (pos < max2 && start !== pos && titleRes.ok) {
    title = titleRes.str;
    pos = titleRes.pos;
  } else {
    title = "";
    pos = destEndPos;
    nextLine = destEndLineNo;
  }
  while (pos < max2) {
    const ch = str.charCodeAt(pos);
    if (!isSpace(ch)) {
      break;
    }
    pos++;
  }
  if (pos < max2 && str.charCodeAt(pos) !== 10) {
    if (title) {
      title = "";
      pos = destEndPos;
      nextLine = destEndLineNo;
      while (pos < max2) {
        const ch = str.charCodeAt(pos);
        if (!isSpace(ch)) {
          break;
        }
        pos++;
      }
    }
  }
  if (pos < max2 && str.charCodeAt(pos) !== 10) {
    return false;
  }
  const label = normalizeReference(str.slice(1, labelEnd));
  if (!label) {
    return false;
  }
  if (silent) {
    return true;
  }
  if (typeof state.env.references === "undefined") {
    state.env.references = {};
  }
  if (typeof state.env.references[label] === "undefined") {
    state.env.references[label] = { title, href };
  }
  state.line = nextLine;
  return true;
}

// ../../../node_modules/markdown-it/lib/common/html_blocks.mjs
var html_blocks_default = [
  "address",
  "article",
  "aside",
  "base",
  "basefont",
  "blockquote",
  "body",
  "caption",
  "center",
  "col",
  "colgroup",
  "dd",
  "details",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "iframe",
  "legend",
  "li",
  "link",
  "main",
  "menu",
  "menuitem",
  "nav",
  "noframes",
  "ol",
  "optgroup",
  "option",
  "p",
  "param",
  "search",
  "section",
  "summary",
  "table",
  "tbody",
  "td",
  "tfoot",
  "th",
  "thead",
  "title",
  "tr",
  "track",
  "ul"
];

// ../../../node_modules/markdown-it/lib/common/html_re.mjs
var attr_name = "[a-zA-Z_:][a-zA-Z0-9:._-]*";
var unquoted = "[^\"'=<>`\\x00-\\x20]+";
var single_quoted = "'[^']*'";
var double_quoted = '"[^"]*"';
var attr_value = "(?:" + unquoted + "|" + single_quoted + "|" + double_quoted + ")";
var attribute = "(?:\\s+" + attr_name + "(?:\\s*=\\s*" + attr_value + ")?)";
var open_tag = "<[A-Za-z][A-Za-z0-9\\-]*" + attribute + "*\\s*\\/?>";
var close_tag = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>";
var comment = "<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->";
var processing = "<[?][\\s\\S]*?[?]>";
var declaration = "<![A-Za-z][^>]*>";
var cdata = "<!\\[CDATA\\[[\\s\\S]*?\\]\\]>";
var HTML_TAG_RE = new RegExp("^(?:" + open_tag + "|" + close_tag + "|" + comment + "|" + processing + "|" + declaration + "|" + cdata + ")");
var HTML_OPEN_CLOSE_TAG_RE = new RegExp("^(?:" + open_tag + "|" + close_tag + ")");

// ../../../node_modules/markdown-it/lib/rules_block/html_block.mjs
var HTML_SEQUENCES = [
  [/^<(script|pre|style|textarea)(?=(\s|>|$))/i, /<\/(script|pre|style|textarea)>/i, true],
  [/^<!--/, /-->/, true],
  [/^<\?/, /\?>/, true],
  [/^<![A-Z]/, />/, true],
  [/^<!\[CDATA\[/, /\]\]>/, true],
  [new RegExp("^</?(" + html_blocks_default.join("|") + ")(?=(\\s|/?>|$))", "i"), /^$/, true],
  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + "\\s*$"), /^$/, false]
];
function html_block(state, startLine, endLine, silent) {
  let pos = state.bMarks[startLine] + state.tShift[startLine];
  let max2 = state.eMarks[startLine];
  if (state.sCount[startLine] - state.blkIndent >= 4) {
    return false;
  }
  if (!state.md.options.html) {
    return false;
  }
  if (state.src.charCodeAt(pos) !== 60) {
    return false;
  }
  let lineText = state.src.slice(pos, max2);
  let i = 0;
  for (; i < HTML_SEQUENCES.length; i++) {
    if (HTML_SEQUENCES[i][0].test(lineText)) {
      break;
    }
  }
  if (i === HTML_SEQUENCES.length) {
    return false;
  }
  if (silent) {
    return HTML_SEQUENCES[i][2];
  }
  let nextLine = startLine + 1;
  if (!HTML_SEQUENCES[i][1].test(lineText)) {
    for (; nextLine < endLine; nextLine++) {
      if (state.sCount[nextLine] < state.blkIndent) {
        break;
      }
      pos = state.bMarks[nextLine] + state.tShift[nextLine];
      max2 = state.eMarks[nextLine];
      lineText = state.src.slice(pos, max2);
      if (HTML_SEQUENCES[i][1].test(lineText)) {
        if (lineText.length !== 0) {
          nextLine++;
        }
        break;
      }
    }
  }
  state.line = nextLine;
  const token = state.push("html_block", "", 0);
  token.map = [startLine, nextLine];
  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_block/heading.mjs
function heading(state, startLine, endLine, silent) {
  let pos = state.bMarks[startLine] + state.tShift[startLine];
  let max2 = state.eMarks[startLine];
  if (state.sCount[startLine] - state.blkIndent >= 4) {
    return false;
  }
  let ch = state.src.charCodeAt(pos);
  if (ch !== 35 || pos >= max2) {
    return false;
  }
  let level = 1;
  ch = state.src.charCodeAt(++pos);
  while (ch === 35 && pos < max2 && level <= 6) {
    level++;
    ch = state.src.charCodeAt(++pos);
  }
  if (level > 6 || pos < max2 && !isSpace(ch)) {
    return false;
  }
  if (silent) {
    return true;
  }
  max2 = state.skipSpacesBack(max2, pos);
  const tmp = state.skipCharsBack(max2, 35, pos);
  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {
    max2 = tmp;
  }
  state.line = startLine + 1;
  const token_o = state.push("heading_open", "h" + String(level), 1);
  token_o.markup = "########".slice(0, level);
  token_o.map = [startLine, state.line];
  const token_i = state.push("inline", "", 0);
  token_i.content = state.src.slice(pos, max2).trim();
  token_i.map = [startLine, state.line];
  token_i.children = [];
  const token_c = state.push("heading_close", "h" + String(level), -1);
  token_c.markup = "########".slice(0, level);
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_block/lheading.mjs
function lheading(state, startLine, endLine) {
  const terminatorRules = state.md.block.ruler.getRules("paragraph");
  if (state.sCount[startLine] - state.blkIndent >= 4) {
    return false;
  }
  const oldParentType = state.parentType;
  state.parentType = "paragraph";
  let level = 0;
  let marker;
  let nextLine = startLine + 1;
  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
    if (state.sCount[nextLine] - state.blkIndent > 3) {
      continue;
    }
    if (state.sCount[nextLine] >= state.blkIndent) {
      let pos = state.bMarks[nextLine] + state.tShift[nextLine];
      const max2 = state.eMarks[nextLine];
      if (pos < max2) {
        marker = state.src.charCodeAt(pos);
        if (marker === 45 || marker === 61) {
          pos = state.skipChars(pos, marker);
          pos = state.skipSpaces(pos);
          if (pos >= max2) {
            level = marker === 61 ? 1 : 2;
            break;
          }
        }
      }
    }
    if (state.sCount[nextLine] < 0) {
      continue;
    }
    let terminate = false;
    for (let i = 0, l = terminatorRules.length; i < l; i++) {
      if (terminatorRules[i](state, nextLine, endLine, true)) {
        terminate = true;
        break;
      }
    }
    if (terminate) {
      break;
    }
  }
  if (!level) {
    return false;
  }
  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();
  state.line = nextLine + 1;
  const token_o = state.push("heading_open", "h" + String(level), 1);
  token_o.markup = String.fromCharCode(marker);
  token_o.map = [startLine, state.line];
  const token_i = state.push("inline", "", 0);
  token_i.content = content;
  token_i.map = [startLine, state.line - 1];
  token_i.children = [];
  const token_c = state.push("heading_close", "h" + String(level), -1);
  token_c.markup = String.fromCharCode(marker);
  state.parentType = oldParentType;
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_block/paragraph.mjs
function paragraph(state, startLine, endLine) {
  const terminatorRules = state.md.block.ruler.getRules("paragraph");
  const oldParentType = state.parentType;
  let nextLine = startLine + 1;
  state.parentType = "paragraph";
  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
    if (state.sCount[nextLine] - state.blkIndent > 3) {
      continue;
    }
    if (state.sCount[nextLine] < 0) {
      continue;
    }
    let terminate = false;
    for (let i = 0, l = terminatorRules.length; i < l; i++) {
      if (terminatorRules[i](state, nextLine, endLine, true)) {
        terminate = true;
        break;
      }
    }
    if (terminate) {
      break;
    }
  }
  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();
  state.line = nextLine;
  const token_o = state.push("paragraph_open", "p", 1);
  token_o.map = [startLine, state.line];
  const token_i = state.push("inline", "", 0);
  token_i.content = content;
  token_i.map = [startLine, state.line];
  token_i.children = [];
  state.push("paragraph_close", "p", -1);
  state.parentType = oldParentType;
  return true;
}

// ../../../node_modules/markdown-it/lib/parser_block.mjs
var _rules2 = [
  // First 2 params - rule name & source. Secondary array - list of rules,
  // which can be terminated by this one.
  ["table", table, ["paragraph", "reference"]],
  ["code", code],
  ["fence", fence, ["paragraph", "reference", "blockquote", "list"]],
  ["blockquote", blockquote, ["paragraph", "reference", "blockquote", "list"]],
  ["hr", hr, ["paragraph", "reference", "blockquote", "list"]],
  ["list", list, ["paragraph", "reference", "blockquote"]],
  ["reference", reference],
  ["html_block", html_block, ["paragraph", "reference", "blockquote"]],
  ["heading", heading, ["paragraph", "reference", "blockquote"]],
  ["lheading", lheading],
  ["paragraph", paragraph]
];
function ParserBlock() {
  this.ruler = new ruler_default();
  for (let i = 0; i < _rules2.length; i++) {
    this.ruler.push(_rules2[i][0], _rules2[i][1], { alt: (_rules2[i][2] || []).slice() });
  }
}
ParserBlock.prototype.tokenize = function(state, startLine, endLine) {
  const rules = this.ruler.getRules("");
  const len = rules.length;
  const maxNesting = state.md.options.maxNesting;
  let line = startLine;
  let hasEmptyLines = false;
  while (line < endLine) {
    state.line = line = state.skipEmptyLines(line);
    if (line >= endLine) {
      break;
    }
    if (state.sCount[line] < state.blkIndent) {
      break;
    }
    if (state.level >= maxNesting) {
      state.line = endLine;
      break;
    }
    const prevLine = state.line;
    let ok = false;
    for (let i = 0; i < len; i++) {
      ok = rules[i](state, line, endLine, false);
      if (ok) {
        if (prevLine >= state.line) {
          throw new Error("block rule didn't increment state.line");
        }
        break;
      }
    }
    if (!ok) throw new Error("none of the block rules matched");
    state.tight = !hasEmptyLines;
    if (state.isEmpty(state.line - 1)) {
      hasEmptyLines = true;
    }
    line = state.line;
    if (line < endLine && state.isEmpty(line)) {
      hasEmptyLines = true;
      line++;
      state.line = line;
    }
  }
};
ParserBlock.prototype.parse = function(src, md2, env2, outTokens) {
  if (!src) {
    return;
  }
  const state = new this.State(src, md2, env2, outTokens);
  this.tokenize(state, state.line, state.lineMax);
};
ParserBlock.prototype.State = state_block_default;
var parser_block_default = ParserBlock;

// ../../../node_modules/markdown-it/lib/rules_inline/state_inline.mjs
function StateInline(src, md2, env2, outTokens) {
  this.src = src;
  this.env = env2;
  this.md = md2;
  this.tokens = outTokens;
  this.tokens_meta = Array(outTokens.length);
  this.pos = 0;
  this.posMax = this.src.length;
  this.level = 0;
  this.pending = "";
  this.pendingLevel = 0;
  this.cache = {};
  this.delimiters = [];
  this._prev_delimiters = [];
  this.backticks = {};
  this.backticksScanned = false;
  this.linkLevel = 0;
}
StateInline.prototype.pushPending = function() {
  const token = new token_default("text", "", 0);
  token.content = this.pending;
  token.level = this.pendingLevel;
  this.tokens.push(token);
  this.pending = "";
  return token;
};
StateInline.prototype.push = function(type, tag, nesting) {
  if (this.pending) {
    this.pushPending();
  }
  const token = new token_default(type, tag, nesting);
  let token_meta = null;
  if (nesting < 0) {
    this.level--;
    this.delimiters = this._prev_delimiters.pop();
  }
  token.level = this.level;
  if (nesting > 0) {
    this.level++;
    this._prev_delimiters.push(this.delimiters);
    this.delimiters = [];
    token_meta = { delimiters: this.delimiters };
  }
  this.pendingLevel = this.level;
  this.tokens.push(token);
  this.tokens_meta.push(token_meta);
  return token;
};
StateInline.prototype.scanDelims = function(start, canSplitWord) {
  const max2 = this.posMax;
  const marker = this.src.charCodeAt(start);
  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 32;
  let pos = start;
  while (pos < max2 && this.src.charCodeAt(pos) === marker) {
    pos++;
  }
  const count3 = pos - start;
  const nextChar = pos < max2 ? this.src.charCodeAt(pos) : 32;
  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));
  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));
  const isLastWhiteSpace = isWhiteSpace(lastChar);
  const isNextWhiteSpace = isWhiteSpace(nextChar);
  const left_flanking = !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar);
  const right_flanking = !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar);
  const can_open = left_flanking && (canSplitWord || !right_flanking || isLastPunctChar);
  const can_close = right_flanking && (canSplitWord || !left_flanking || isNextPunctChar);
  return { can_open, can_close, length: count3 };
};
StateInline.prototype.Token = token_default;
var state_inline_default = StateInline;

// ../../../node_modules/markdown-it/lib/rules_inline/text.mjs
function isTerminatorChar(ch) {
  switch (ch) {
    case 10:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 42:
    case 43:
    case 45:
    case 58:
    case 60:
    case 61:
    case 62:
    case 64:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 123:
    case 125:
    case 126:
      return true;
    default:
      return false;
  }
}
function text(state, silent) {
  let pos = state.pos;
  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {
    pos++;
  }
  if (pos === state.pos) {
    return false;
  }
  if (!silent) {
    state.pending += state.src.slice(state.pos, pos);
  }
  state.pos = pos;
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_inline/linkify.mjs
var SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;
function linkify2(state, silent) {
  if (!state.md.options.linkify) return false;
  if (state.linkLevel > 0) return false;
  const pos = state.pos;
  const max2 = state.posMax;
  if (pos + 3 > max2) return false;
  if (state.src.charCodeAt(pos) !== 58) return false;
  if (state.src.charCodeAt(pos + 1) !== 47) return false;
  if (state.src.charCodeAt(pos + 2) !== 47) return false;
  const match2 = state.pending.match(SCHEME_RE);
  if (!match2) return false;
  const proto = match2[1];
  const link2 = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));
  if (!link2) return false;
  let url = link2.url;
  if (url.length <= proto.length) return false;
  url = url.replace(/\*+$/, "");
  const fullUrl = state.md.normalizeLink(url);
  if (!state.md.validateLink(fullUrl)) return false;
  if (!silent) {
    state.pending = state.pending.slice(0, -proto.length);
    const token_o = state.push("link_open", "a", 1);
    token_o.attrs = [["href", fullUrl]];
    token_o.markup = "linkify";
    token_o.info = "auto";
    const token_t = state.push("text", "", 0);
    token_t.content = state.md.normalizeLinkText(url);
    const token_c = state.push("link_close", "a", -1);
    token_c.markup = "linkify";
    token_c.info = "auto";
  }
  state.pos += url.length - proto.length;
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_inline/newline.mjs
function newline(state, silent) {
  let pos = state.pos;
  if (state.src.charCodeAt(pos) !== 10) {
    return false;
  }
  const pmax = state.pending.length - 1;
  const max2 = state.posMax;
  if (!silent) {
    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 32) {
      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 32) {
        let ws = pmax - 1;
        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 32) ws--;
        state.pending = state.pending.slice(0, ws);
        state.push("hardbreak", "br", 0);
      } else {
        state.pending = state.pending.slice(0, -1);
        state.push("softbreak", "br", 0);
      }
    } else {
      state.push("softbreak", "br", 0);
    }
  }
  pos++;
  while (pos < max2 && isSpace(state.src.charCodeAt(pos))) {
    pos++;
  }
  state.pos = pos;
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_inline/escape.mjs
var ESCAPED = [];
for (let i = 0; i < 256; i++) {
  ESCAPED.push(0);
}
"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(ch) {
  ESCAPED[ch.charCodeAt(0)] = 1;
});
function escape2(state, silent) {
  let pos = state.pos;
  const max2 = state.posMax;
  if (state.src.charCodeAt(pos) !== 92) return false;
  pos++;
  if (pos >= max2) return false;
  let ch1 = state.src.charCodeAt(pos);
  if (ch1 === 10) {
    if (!silent) {
      state.push("hardbreak", "br", 0);
    }
    pos++;
    while (pos < max2) {
      ch1 = state.src.charCodeAt(pos);
      if (!isSpace(ch1)) break;
      pos++;
    }
    state.pos = pos;
    return true;
  }
  let escapedStr = state.src[pos];
  if (ch1 >= 55296 && ch1 <= 56319 && pos + 1 < max2) {
    const ch2 = state.src.charCodeAt(pos + 1);
    if (ch2 >= 56320 && ch2 <= 57343) {
      escapedStr += state.src[pos + 1];
      pos++;
    }
  }
  const origStr = "\\" + escapedStr;
  if (!silent) {
    const token = state.push("text_special", "", 0);
    if (ch1 < 256 && ESCAPED[ch1] !== 0) {
      token.content = escapedStr;
    } else {
      token.content = origStr;
    }
    token.markup = origStr;
    token.info = "escape";
  }
  state.pos = pos + 1;
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_inline/backticks.mjs
function backtick(state, silent) {
  let pos = state.pos;
  const ch = state.src.charCodeAt(pos);
  if (ch !== 96) {
    return false;
  }
  const start = pos;
  pos++;
  const max2 = state.posMax;
  while (pos < max2 && state.src.charCodeAt(pos) === 96) {
    pos++;
  }
  const marker = state.src.slice(start, pos);
  const openerLength = marker.length;
  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {
    if (!silent) state.pending += marker;
    state.pos += openerLength;
    return true;
  }
  let matchEnd = pos;
  let matchStart;
  while ((matchStart = state.src.indexOf("`", matchEnd)) !== -1) {
    matchEnd = matchStart + 1;
    while (matchEnd < max2 && state.src.charCodeAt(matchEnd) === 96) {
      matchEnd++;
    }
    const closerLength = matchEnd - matchStart;
    if (closerLength === openerLength) {
      if (!silent) {
        const token = state.push("code_inline", "code", 0);
        token.markup = marker;
        token.content = state.src.slice(pos, matchStart).replace(/\n/g, " ").replace(/^ (.+) $/, "$1");
      }
      state.pos = matchEnd;
      return true;
    }
    state.backticks[closerLength] = matchStart;
  }
  state.backticksScanned = true;
  if (!silent) state.pending += marker;
  state.pos += openerLength;
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_inline/strikethrough.mjs
function strikethrough_tokenize(state, silent) {
  const start = state.pos;
  const marker = state.src.charCodeAt(start);
  if (silent) {
    return false;
  }
  if (marker !== 126) {
    return false;
  }
  const scanned = state.scanDelims(state.pos, true);
  let len = scanned.length;
  const ch = String.fromCharCode(marker);
  if (len < 2) {
    return false;
  }
  let token;
  if (len % 2) {
    token = state.push("text", "", 0);
    token.content = ch;
    len--;
  }
  for (let i = 0; i < len; i += 2) {
    token = state.push("text", "", 0);
    token.content = ch + ch;
    state.delimiters.push({
      marker,
      length: 0,
      // disable "rule of 3" length checks meant for emphasis
      token: state.tokens.length - 1,
      end: -1,
      open: scanned.can_open,
      close: scanned.can_close
    });
  }
  state.pos += scanned.length;
  return true;
}
function postProcess(state, delimiters) {
  let token;
  const loneMarkers = [];
  const max2 = delimiters.length;
  for (let i = 0; i < max2; i++) {
    const startDelim = delimiters[i];
    if (startDelim.marker !== 126) {
      continue;
    }
    if (startDelim.end === -1) {
      continue;
    }
    const endDelim = delimiters[startDelim.end];
    token = state.tokens[startDelim.token];
    token.type = "s_open";
    token.tag = "s";
    token.nesting = 1;
    token.markup = "~~";
    token.content = "";
    token = state.tokens[endDelim.token];
    token.type = "s_close";
    token.tag = "s";
    token.nesting = -1;
    token.markup = "~~";
    token.content = "";
    if (state.tokens[endDelim.token - 1].type === "text" && state.tokens[endDelim.token - 1].content === "~") {
      loneMarkers.push(endDelim.token - 1);
    }
  }
  while (loneMarkers.length) {
    const i = loneMarkers.pop();
    let j = i + 1;
    while (j < state.tokens.length && state.tokens[j].type === "s_close") {
      j++;
    }
    j--;
    if (i !== j) {
      token = state.tokens[j];
      state.tokens[j] = state.tokens[i];
      state.tokens[i] = token;
    }
  }
}
function strikethrough_postProcess(state) {
  const tokens_meta = state.tokens_meta;
  const max2 = state.tokens_meta.length;
  postProcess(state, state.delimiters);
  for (let curr = 0; curr < max2; curr++) {
    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {
      postProcess(state, tokens_meta[curr].delimiters);
    }
  }
}
var strikethrough_default = {
  tokenize: strikethrough_tokenize,
  postProcess: strikethrough_postProcess
};

// ../../../node_modules/markdown-it/lib/rules_inline/emphasis.mjs
function emphasis_tokenize(state, silent) {
  const start = state.pos;
  const marker = state.src.charCodeAt(start);
  if (silent) {
    return false;
  }
  if (marker !== 95 && marker !== 42) {
    return false;
  }
  const scanned = state.scanDelims(state.pos, marker === 42);
  for (let i = 0; i < scanned.length; i++) {
    const token = state.push("text", "", 0);
    token.content = String.fromCharCode(marker);
    state.delimiters.push({
      // Char code of the starting marker (number).
      //
      marker,
      // Total length of these series of delimiters.
      //
      length: scanned.length,
      // A position of the token this delimiter corresponds to.
      //
      token: state.tokens.length - 1,
      // If this delimiter is matched as a valid opener, `end` will be
      // equal to its position, otherwise it's `-1`.
      //
      end: -1,
      // Boolean flags that determine if this delimiter could open or close
      // an emphasis.
      //
      open: scanned.can_open,
      close: scanned.can_close
    });
  }
  state.pos += scanned.length;
  return true;
}
function postProcess2(state, delimiters) {
  const max2 = delimiters.length;
  for (let i = max2 - 1; i >= 0; i--) {
    const startDelim = delimiters[i];
    if (startDelim.marker !== 95 && startDelim.marker !== 42) {
      continue;
    }
    if (startDelim.end === -1) {
      continue;
    }
    const endDelim = delimiters[startDelim.end];
    const isStrong = i > 0 && delimiters[i - 1].end === startDelim.end + 1 && // check that first two markers match and adjacent
    delimiters[i - 1].marker === startDelim.marker && delimiters[i - 1].token === startDelim.token - 1 && // check that last two markers are adjacent (we can safely assume they match)
    delimiters[startDelim.end + 1].token === endDelim.token + 1;
    const ch = String.fromCharCode(startDelim.marker);
    const token_o = state.tokens[startDelim.token];
    token_o.type = isStrong ? "strong_open" : "em_open";
    token_o.tag = isStrong ? "strong" : "em";
    token_o.nesting = 1;
    token_o.markup = isStrong ? ch + ch : ch;
    token_o.content = "";
    const token_c = state.tokens[endDelim.token];
    token_c.type = isStrong ? "strong_close" : "em_close";
    token_c.tag = isStrong ? "strong" : "em";
    token_c.nesting = -1;
    token_c.markup = isStrong ? ch + ch : ch;
    token_c.content = "";
    if (isStrong) {
      state.tokens[delimiters[i - 1].token].content = "";
      state.tokens[delimiters[startDelim.end + 1].token].content = "";
      i--;
    }
  }
}
function emphasis_post_process(state) {
  const tokens_meta = state.tokens_meta;
  const max2 = state.tokens_meta.length;
  postProcess2(state, state.delimiters);
  for (let curr = 0; curr < max2; curr++) {
    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {
      postProcess2(state, tokens_meta[curr].delimiters);
    }
  }
}
var emphasis_default = {
  tokenize: emphasis_tokenize,
  postProcess: emphasis_post_process
};

// ../../../node_modules/markdown-it/lib/rules_inline/link.mjs
function link(state, silent) {
  let code2, label, res, ref;
  let href = "";
  let title = "";
  let start = state.pos;
  let parseReference = true;
  if (state.src.charCodeAt(state.pos) !== 91) {
    return false;
  }
  const oldPos = state.pos;
  const max2 = state.posMax;
  const labelStart = state.pos + 1;
  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);
  if (labelEnd < 0) {
    return false;
  }
  let pos = labelEnd + 1;
  if (pos < max2 && state.src.charCodeAt(pos) === 40) {
    parseReference = false;
    pos++;
    for (; pos < max2; pos++) {
      code2 = state.src.charCodeAt(pos);
      if (!isSpace(code2) && code2 !== 10) {
        break;
      }
    }
    if (pos >= max2) {
      return false;
    }
    start = pos;
    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);
    if (res.ok) {
      href = state.md.normalizeLink(res.str);
      if (state.md.validateLink(href)) {
        pos = res.pos;
      } else {
        href = "";
      }
      start = pos;
      for (; pos < max2; pos++) {
        code2 = state.src.charCodeAt(pos);
        if (!isSpace(code2) && code2 !== 10) {
          break;
        }
      }
      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);
      if (pos < max2 && start !== pos && res.ok) {
        title = res.str;
        pos = res.pos;
        for (; pos < max2; pos++) {
          code2 = state.src.charCodeAt(pos);
          if (!isSpace(code2) && code2 !== 10) {
            break;
          }
        }
      }
    }
    if (pos >= max2 || state.src.charCodeAt(pos) !== 41) {
      parseReference = true;
    }
    pos++;
  }
  if (parseReference) {
    if (typeof state.env.references === "undefined") {
      return false;
    }
    if (pos < max2 && state.src.charCodeAt(pos) === 91) {
      start = pos + 1;
      pos = state.md.helpers.parseLinkLabel(state, pos);
      if (pos >= 0) {
        label = state.src.slice(start, pos++);
      } else {
        pos = labelEnd + 1;
      }
    } else {
      pos = labelEnd + 1;
    }
    if (!label) {
      label = state.src.slice(labelStart, labelEnd);
    }
    ref = state.env.references[normalizeReference(label)];
    if (!ref) {
      state.pos = oldPos;
      return false;
    }
    href = ref.href;
    title = ref.title;
  }
  if (!silent) {
    state.pos = labelStart;
    state.posMax = labelEnd;
    const token_o = state.push("link_open", "a", 1);
    const attrs = [["href", href]];
    token_o.attrs = attrs;
    if (title) {
      attrs.push(["title", title]);
    }
    state.linkLevel++;
    state.md.inline.tokenize(state);
    state.linkLevel--;
    state.push("link_close", "a", -1);
  }
  state.pos = pos;
  state.posMax = max2;
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_inline/image.mjs
function image(state, silent) {
  let code2, content, label, pos, ref, res, title, start;
  let href = "";
  const oldPos = state.pos;
  const max2 = state.posMax;
  if (state.src.charCodeAt(state.pos) !== 33) {
    return false;
  }
  if (state.src.charCodeAt(state.pos + 1) !== 91) {
    return false;
  }
  const labelStart = state.pos + 2;
  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);
  if (labelEnd < 0) {
    return false;
  }
  pos = labelEnd + 1;
  if (pos < max2 && state.src.charCodeAt(pos) === 40) {
    pos++;
    for (; pos < max2; pos++) {
      code2 = state.src.charCodeAt(pos);
      if (!isSpace(code2) && code2 !== 10) {
        break;
      }
    }
    if (pos >= max2) {
      return false;
    }
    start = pos;
    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);
    if (res.ok) {
      href = state.md.normalizeLink(res.str);
      if (state.md.validateLink(href)) {
        pos = res.pos;
      } else {
        href = "";
      }
    }
    start = pos;
    for (; pos < max2; pos++) {
      code2 = state.src.charCodeAt(pos);
      if (!isSpace(code2) && code2 !== 10) {
        break;
      }
    }
    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);
    if (pos < max2 && start !== pos && res.ok) {
      title = res.str;
      pos = res.pos;
      for (; pos < max2; pos++) {
        code2 = state.src.charCodeAt(pos);
        if (!isSpace(code2) && code2 !== 10) {
          break;
        }
      }
    } else {
      title = "";
    }
    if (pos >= max2 || state.src.charCodeAt(pos) !== 41) {
      state.pos = oldPos;
      return false;
    }
    pos++;
  } else {
    if (typeof state.env.references === "undefined") {
      return false;
    }
    if (pos < max2 && state.src.charCodeAt(pos) === 91) {
      start = pos + 1;
      pos = state.md.helpers.parseLinkLabel(state, pos);
      if (pos >= 0) {
        label = state.src.slice(start, pos++);
      } else {
        pos = labelEnd + 1;
      }
    } else {
      pos = labelEnd + 1;
    }
    if (!label) {
      label = state.src.slice(labelStart, labelEnd);
    }
    ref = state.env.references[normalizeReference(label)];
    if (!ref) {
      state.pos = oldPos;
      return false;
    }
    href = ref.href;
    title = ref.title;
  }
  if (!silent) {
    content = state.src.slice(labelStart, labelEnd);
    const tokens = [];
    state.md.inline.parse(
      content,
      state.md,
      state.env,
      tokens
    );
    const token = state.push("image", "img", 0);
    const attrs = [["src", href], ["alt", ""]];
    token.attrs = attrs;
    token.children = tokens;
    token.content = content;
    if (title) {
      attrs.push(["title", title]);
    }
  }
  state.pos = pos;
  state.posMax = max2;
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_inline/autolink.mjs
var EMAIL_RE = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;
var AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\x00-\x20]*)$/;
function autolink(state, silent) {
  let pos = state.pos;
  if (state.src.charCodeAt(pos) !== 60) {
    return false;
  }
  const start = state.pos;
  const max2 = state.posMax;
  for (; ; ) {
    if (++pos >= max2) return false;
    const ch = state.src.charCodeAt(pos);
    if (ch === 60) return false;
    if (ch === 62) break;
  }
  const url = state.src.slice(start + 1, pos);
  if (AUTOLINK_RE.test(url)) {
    const fullUrl = state.md.normalizeLink(url);
    if (!state.md.validateLink(fullUrl)) {
      return false;
    }
    if (!silent) {
      const token_o = state.push("link_open", "a", 1);
      token_o.attrs = [["href", fullUrl]];
      token_o.markup = "autolink";
      token_o.info = "auto";
      const token_t = state.push("text", "", 0);
      token_t.content = state.md.normalizeLinkText(url);
      const token_c = state.push("link_close", "a", -1);
      token_c.markup = "autolink";
      token_c.info = "auto";
    }
    state.pos += url.length + 2;
    return true;
  }
  if (EMAIL_RE.test(url)) {
    const fullUrl = state.md.normalizeLink("mailto:" + url);
    if (!state.md.validateLink(fullUrl)) {
      return false;
    }
    if (!silent) {
      const token_o = state.push("link_open", "a", 1);
      token_o.attrs = [["href", fullUrl]];
      token_o.markup = "autolink";
      token_o.info = "auto";
      const token_t = state.push("text", "", 0);
      token_t.content = state.md.normalizeLinkText(url);
      const token_c = state.push("link_close", "a", -1);
      token_c.markup = "autolink";
      token_c.info = "auto";
    }
    state.pos += url.length + 2;
    return true;
  }
  return false;
}

// ../../../node_modules/markdown-it/lib/rules_inline/html_inline.mjs
function isLinkOpen2(str) {
  return /^<a[>\s]/i.test(str);
}
function isLinkClose2(str) {
  return /^<\/a\s*>/i.test(str);
}
function isLetter(ch) {
  const lc = ch | 32;
  return lc >= 97 && lc <= 122;
}
function html_inline(state, silent) {
  if (!state.md.options.html) {
    return false;
  }
  const max2 = state.posMax;
  const pos = state.pos;
  if (state.src.charCodeAt(pos) !== 60 || pos + 2 >= max2) {
    return false;
  }
  const ch = state.src.charCodeAt(pos + 1);
  if (ch !== 33 && ch !== 63 && ch !== 47 && !isLetter(ch)) {
    return false;
  }
  const match2 = state.src.slice(pos).match(HTML_TAG_RE);
  if (!match2) {
    return false;
  }
  if (!silent) {
    const token = state.push("html_inline", "", 0);
    token.content = match2[0];
    if (isLinkOpen2(token.content)) state.linkLevel++;
    if (isLinkClose2(token.content)) state.linkLevel--;
  }
  state.pos += match2[0].length;
  return true;
}

// ../../../node_modules/markdown-it/lib/rules_inline/entity.mjs
var DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;
var NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;
function entity(state, silent) {
  const pos = state.pos;
  const max2 = state.posMax;
  if (state.src.charCodeAt(pos) !== 38) return false;
  if (pos + 1 >= max2) return false;
  const ch = state.src.charCodeAt(pos + 1);
  if (ch === 35) {
    const match2 = state.src.slice(pos).match(DIGITAL_RE);
    if (match2) {
      if (!silent) {
        const code2 = match2[1][0].toLowerCase() === "x" ? parseInt(match2[1].slice(1), 16) : parseInt(match2[1], 10);
        const token = state.push("text_special", "", 0);
        token.content = isValidEntityCode(code2) ? fromCodePoint2(code2) : fromCodePoint2(65533);
        token.markup = match2[0];
        token.info = "entity";
      }
      state.pos += match2[0].length;
      return true;
    }
  } else {
    const match2 = state.src.slice(pos).match(NAMED_RE);
    if (match2) {
      const decoded = decodeHTML(match2[0]);
      if (decoded !== match2[0]) {
        if (!silent) {
          const token = state.push("text_special", "", 0);
          token.content = decoded;
          token.markup = match2[0];
          token.info = "entity";
        }
        state.pos += match2[0].length;
        return true;
      }
    }
  }
  return false;
}

// ../../../node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs
function processDelimiters(delimiters) {
  const openersBottom = {};
  const max2 = delimiters.length;
  if (!max2) return;
  let headerIdx = 0;
  let lastTokenIdx = -2;
  const jumps = [];
  for (let closerIdx = 0; closerIdx < max2; closerIdx++) {
    const closer = delimiters[closerIdx];
    jumps.push(0);
    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {
      headerIdx = closerIdx;
    }
    lastTokenIdx = closer.token;
    closer.length = closer.length || 0;
    if (!closer.close) continue;
    if (!openersBottom.hasOwnProperty(closer.marker)) {
      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1];
    }
    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + closer.length % 3];
    let openerIdx = headerIdx - jumps[headerIdx] - 1;
    let newMinOpenerIdx = openerIdx;
    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {
      const opener = delimiters[openerIdx];
      if (opener.marker !== closer.marker) continue;
      if (opener.open && opener.end < 0) {
        let isOddMatch = false;
        if (opener.close || closer.open) {
          if ((opener.length + closer.length) % 3 === 0) {
            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {
              isOddMatch = true;
            }
          }
        }
        if (!isOddMatch) {
          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ? jumps[openerIdx - 1] + 1 : 0;
          jumps[closerIdx] = closerIdx - openerIdx + lastJump;
          jumps[openerIdx] = lastJump;
          closer.open = false;
          opener.end = closerIdx;
          opener.close = false;
          newMinOpenerIdx = -1;
          lastTokenIdx = -2;
          break;
        }
      }
    }
    if (newMinOpenerIdx !== -1) {
      openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length || 0) % 3] = newMinOpenerIdx;
    }
  }
}
function link_pairs(state) {
  const tokens_meta = state.tokens_meta;
  const max2 = state.tokens_meta.length;
  processDelimiters(state.delimiters);
  for (let curr = 0; curr < max2; curr++) {
    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {
      processDelimiters(tokens_meta[curr].delimiters);
    }
  }
}

// ../../../node_modules/markdown-it/lib/rules_inline/fragments_join.mjs
function fragments_join(state) {
  let curr, last;
  let level = 0;
  const tokens = state.tokens;
  const max2 = state.tokens.length;
  for (curr = last = 0; curr < max2; curr++) {
    if (tokens[curr].nesting < 0) level--;
    tokens[curr].level = level;
    if (tokens[curr].nesting > 0) level++;
    if (tokens[curr].type === "text" && curr + 1 < max2 && tokens[curr + 1].type === "text") {
      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;
    } else {
      if (curr !== last) {
        tokens[last] = tokens[curr];
      }
      last++;
    }
  }
  if (curr !== last) {
    tokens.length = last;
  }
}

// ../../../node_modules/markdown-it/lib/parser_inline.mjs
var _rules3 = [
  ["text", text],
  ["linkify", linkify2],
  ["newline", newline],
  ["escape", escape2],
  ["backticks", backtick],
  ["strikethrough", strikethrough_default.tokenize],
  ["emphasis", emphasis_default.tokenize],
  ["link", link],
  ["image", image],
  ["autolink", autolink],
  ["html_inline", html_inline],
  ["entity", entity]
];
var _rules22 = [
  ["balance_pairs", link_pairs],
  ["strikethrough", strikethrough_default.postProcess],
  ["emphasis", emphasis_default.postProcess],
  // rules for pairs separate '**' into its own text tokens, which may be left unused,
  // rule below merges unused segments back with the rest of the text
  ["fragments_join", fragments_join]
];
function ParserInline() {
  this.ruler = new ruler_default();
  for (let i = 0; i < _rules3.length; i++) {
    this.ruler.push(_rules3[i][0], _rules3[i][1]);
  }
  this.ruler2 = new ruler_default();
  for (let i = 0; i < _rules22.length; i++) {
    this.ruler2.push(_rules22[i][0], _rules22[i][1]);
  }
}
ParserInline.prototype.skipToken = function(state) {
  const pos = state.pos;
  const rules = this.ruler.getRules("");
  const len = rules.length;
  const maxNesting = state.md.options.maxNesting;
  const cache = state.cache;
  if (typeof cache[pos] !== "undefined") {
    state.pos = cache[pos];
    return;
  }
  let ok = false;
  if (state.level < maxNesting) {
    for (let i = 0; i < len; i++) {
      state.level++;
      ok = rules[i](state, true);
      state.level--;
      if (ok) {
        if (pos >= state.pos) {
          throw new Error("inline rule didn't increment state.pos");
        }
        break;
      }
    }
  } else {
    state.pos = state.posMax;
  }
  if (!ok) {
    state.pos++;
  }
  cache[pos] = state.pos;
};
ParserInline.prototype.tokenize = function(state) {
  const rules = this.ruler.getRules("");
  const len = rules.length;
  const end = state.posMax;
  const maxNesting = state.md.options.maxNesting;
  while (state.pos < end) {
    const prevPos = state.pos;
    let ok = false;
    if (state.level < maxNesting) {
      for (let i = 0; i < len; i++) {
        ok = rules[i](state, false);
        if (ok) {
          if (prevPos >= state.pos) {
            throw new Error("inline rule didn't increment state.pos");
          }
          break;
        }
      }
    }
    if (ok) {
      if (state.pos >= end) {
        break;
      }
      continue;
    }
    state.pending += state.src[state.pos++];
  }
  if (state.pending) {
    state.pushPending();
  }
};
ParserInline.prototype.parse = function(str, md2, env2, outTokens) {
  const state = new this.State(str, md2, env2, outTokens);
  this.tokenize(state);
  const rules = this.ruler2.getRules("");
  const len = rules.length;
  for (let i = 0; i < len; i++) {
    rules[i](state);
  }
};
ParserInline.prototype.State = state_inline_default;
var parser_inline_default = ParserInline;

// ../../../node_modules/linkify-it/lib/re.mjs
function re_default(opts) {
  const re = {};
  opts = opts || {};
  re.src_Any = regex_default.source;
  re.src_Cc = regex_default2.source;
  re.src_Z = regex_default6.source;
  re.src_P = regex_default4.source;
  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join("|");
  re.src_ZCc = [re.src_Z, re.src_Cc].join("|");
  const text_separators = "[><｜]";
  re.src_pseudo_letter = "(?:(?!" + text_separators + "|" + re.src_ZPCc + ")" + re.src_Any + ")";
  re.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)";
  re.src_auth = "(?:(?:(?!" + re.src_ZCc + "|[@/\\[\\]()]).)+@)?";
  re.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?";
  re.src_host_terminator = "(?=$|" + text_separators + "|" + re.src_ZPCc + ")(?!" + (opts["---"] ? "-(?!--)|" : "-|") + "_|:\\d|\\.-|\\.(?!$|" + re.src_ZPCc + "))";
  re.src_path = "(?:[/?#](?:(?!" + re.src_ZCc + "|" + text_separators + `|[()[\\]{}.,"'?!\\-;]).|\\[(?:(?!` + re.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + re.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + re.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + re.src_ZCc + `|["]).)+\\"|\\'(?:(?!` + re.src_ZCc + "|[']).)+\\'|\\'(?=" + re.src_pseudo_letter + "|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!" + re.src_ZCc + "|[.]|$)|" + (opts["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + // allow `,,,` in paths
  ",(?!" + re.src_ZCc + "|$)|;(?!" + re.src_ZCc + "|$)|\\!+(?!" + re.src_ZCc + "|[!]|$)|\\?(?!" + re.src_ZCc + "|[?]|$))+|\\/)?";
  re.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*';
  re.src_xn = "xn--[a-z0-9\\-]{1,59}";
  re.src_domain_root = // Allow letters & digits (http://test1)
  "(?:" + re.src_xn + "|" + re.src_pseudo_letter + "{1,63})";
  re.src_domain = "(?:" + re.src_xn + "|(?:" + re.src_pseudo_letter + ")|(?:" + re.src_pseudo_letter + "(?:-|" + re.src_pseudo_letter + "){0,61}" + re.src_pseudo_letter + "))";
  re.src_host = "(?:(?:(?:(?:" + re.src_domain + ")\\.)*" + re.src_domain + "))";
  re.tpl_host_fuzzy = "(?:" + re.src_ip4 + "|(?:(?:(?:" + re.src_domain + ")\\.)+(?:%TLDS%)))";
  re.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + re.src_domain + ")\\.)+(?:%TLDS%))";
  re.src_host_strict = re.src_host + re.src_host_terminator;
  re.tpl_host_fuzzy_strict = re.tpl_host_fuzzy + re.src_host_terminator;
  re.src_host_port_strict = re.src_host + re.src_port + re.src_host_terminator;
  re.tpl_host_port_fuzzy_strict = re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;
  re.tpl_host_port_no_ip_fuzzy_strict = re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;
  re.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + re.src_ZPCc + "|>|$))";
  re.tpl_email_fuzzy = "(^|" + text_separators + '|"|\\(|' + re.src_ZCc + ")(" + re.src_email_name + "@" + re.tpl_host_fuzzy_strict + ")";
  re.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
  // but can start with > (markdown blockquote)
  "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + re.src_ZPCc + "))((?![$+<=>^`|｜])" + re.tpl_host_port_fuzzy_strict + re.src_path + ")";
  re.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
  // but can start with > (markdown blockquote)
  "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + re.src_ZPCc + "))((?![$+<=>^`|｜])" + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ")";
  return re;
}

// ../../../node_modules/linkify-it/index.mjs
function assign2(obj) {
  const sources = Array.prototype.slice.call(arguments, 1);
  sources.forEach(function(source) {
    if (!source) {
      return;
    }
    Object.keys(source).forEach(function(key) {
      obj[key] = source[key];
    });
  });
  return obj;
}
function _class2(obj) {
  return Object.prototype.toString.call(obj);
}
function isString2(obj) {
  return _class2(obj) === "[object String]";
}
function isObject2(obj) {
  return _class2(obj) === "[object Object]";
}
function isRegExp(obj) {
  return _class2(obj) === "[object RegExp]";
}
function isFunction3(obj) {
  return _class2(obj) === "[object Function]";
}
function escapeRE2(str) {
  return str.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
}
var defaultOptions = {
  fuzzyLink: true,
  fuzzyEmail: true,
  fuzzyIP: false
};
function isOptionsObj(obj) {
  return Object.keys(obj || {}).reduce(function(acc, k2) {
    return acc || defaultOptions.hasOwnProperty(k2);
  }, false);
}
var defaultSchemas = {
  "http:": {
    validate: function(text2, pos, self) {
      const tail = text2.slice(pos);
      if (!self.re.http) {
        self.re.http = new RegExp(
          "^\\/\\/" + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path,
          "i"
        );
      }
      if (self.re.http.test(tail)) {
        return tail.match(self.re.http)[0].length;
      }
      return 0;
    }
  },
  "https:": "http:",
  "ftp:": "http:",
  "//": {
    validate: function(text2, pos, self) {
      const tail = text2.slice(pos);
      if (!self.re.no_http) {
        self.re.no_http = new RegExp(
          "^" + self.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'
          // with code comments
          "(?:localhost|(?:(?:" + self.re.src_domain + ")\\.)+" + self.re.src_domain_root + ")" + self.re.src_port + self.re.src_host_terminator + self.re.src_path,
          "i"
        );
      }
      if (self.re.no_http.test(tail)) {
        if (pos >= 3 && text2[pos - 3] === ":") {
          return 0;
        }
        if (pos >= 3 && text2[pos - 3] === "/") {
          return 0;
        }
        return tail.match(self.re.no_http)[0].length;
      }
      return 0;
    }
  },
  "mailto:": {
    validate: function(text2, pos, self) {
      const tail = text2.slice(pos);
      if (!self.re.mailto) {
        self.re.mailto = new RegExp(
          "^" + self.re.src_email_name + "@" + self.re.src_host_strict,
          "i"
        );
      }
      if (self.re.mailto.test(tail)) {
        return tail.match(self.re.mailto)[0].length;
      }
      return 0;
    }
  }
};
var tlds_2ch_src_re = "a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]";
var tlds_default = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");
function resetScanCache(self) {
  self.__index__ = -1;
  self.__text_cache__ = "";
}
function createValidator(re) {
  return function(text2, pos) {
    const tail = text2.slice(pos);
    if (re.test(tail)) {
      return tail.match(re)[0].length;
    }
    return 0;
  };
}
function createNormalizer() {
  return function(match2, self) {
    self.normalize(match2);
  };
}
function compile(self) {
  const re = self.re = re_default(self.__opts__);
  const tlds2 = self.__tlds__.slice();
  self.onCompile();
  if (!self.__tlds_replaced__) {
    tlds2.push(tlds_2ch_src_re);
  }
  tlds2.push(re.src_xn);
  re.src_tlds = tlds2.join("|");
  function untpl(tpl) {
    return tpl.replace("%TLDS%", re.src_tlds);
  }
  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), "i");
  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), "i");
  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), "i");
  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), "i");
  const aliases = [];
  self.__compiled__ = {};
  function schemaError(name, val) {
    throw new Error('(LinkifyIt) Invalid schema "' + name + '": ' + val);
  }
  Object.keys(self.__schemas__).forEach(function(name) {
    const val = self.__schemas__[name];
    if (val === null) {
      return;
    }
    const compiled = { validate: null, link: null };
    self.__compiled__[name] = compiled;
    if (isObject2(val)) {
      if (isRegExp(val.validate)) {
        compiled.validate = createValidator(val.validate);
      } else if (isFunction3(val.validate)) {
        compiled.validate = val.validate;
      } else {
        schemaError(name, val);
      }
      if (isFunction3(val.normalize)) {
        compiled.normalize = val.normalize;
      } else if (!val.normalize) {
        compiled.normalize = createNormalizer();
      } else {
        schemaError(name, val);
      }
      return;
    }
    if (isString2(val)) {
      aliases.push(name);
      return;
    }
    schemaError(name, val);
  });
  aliases.forEach(function(alias) {
    if (!self.__compiled__[self.__schemas__[alias]]) {
      return;
    }
    self.__compiled__[alias].validate = self.__compiled__[self.__schemas__[alias]].validate;
    self.__compiled__[alias].normalize = self.__compiled__[self.__schemas__[alias]].normalize;
  });
  self.__compiled__[""] = { validate: null, normalize: createNormalizer() };
  const slist = Object.keys(self.__compiled__).filter(function(name) {
    return name.length > 0 && self.__compiled__[name];
  }).map(escapeRE2).join("|");
  self.re.schema_test = RegExp("(^|(?!_)(?:[><｜]|" + re.src_ZPCc + "))(" + slist + ")", "i");
  self.re.schema_search = RegExp("(^|(?!_)(?:[><｜]|" + re.src_ZPCc + "))(" + slist + ")", "ig");
  self.re.schema_at_start = RegExp("^" + self.re.schema_search.source, "i");
  self.re.pretest = RegExp(
    "(" + self.re.schema_test.source + ")|(" + self.re.host_fuzzy_test.source + ")|@",
    "i"
  );
  resetScanCache(self);
}
function Match(self, shift4) {
  const start = self.__index__;
  const end = self.__last_index__;
  const text2 = self.__text_cache__.slice(start, end);
  this.schema = self.__schema__.toLowerCase();
  this.index = start + shift4;
  this.lastIndex = end + shift4;
  this.raw = text2;
  this.text = text2;
  this.url = text2;
}
function createMatch(self, shift4) {
  const match2 = new Match(self, shift4);
  self.__compiled__[match2.schema].normalize(match2, self);
  return match2;
}
function LinkifyIt(schemas, options) {
  if (!(this instanceof LinkifyIt)) {
    return new LinkifyIt(schemas, options);
  }
  if (!options) {
    if (isOptionsObj(schemas)) {
      options = schemas;
      schemas = {};
    }
  }
  this.__opts__ = assign2({}, defaultOptions, options);
  this.__index__ = -1;
  this.__last_index__ = -1;
  this.__schema__ = "";
  this.__text_cache__ = "";
  this.__schemas__ = assign2({}, defaultSchemas, schemas);
  this.__compiled__ = {};
  this.__tlds__ = tlds_default;
  this.__tlds_replaced__ = false;
  this.re = {};
  compile(this);
}
LinkifyIt.prototype.add = function add(schema, definition) {
  this.__schemas__[schema] = definition;
  compile(this);
  return this;
};
LinkifyIt.prototype.set = function set(options) {
  this.__opts__ = assign2(this.__opts__, options);
  return this;
};
LinkifyIt.prototype.test = function test(text2) {
  this.__text_cache__ = text2;
  this.__index__ = -1;
  if (!text2.length) {
    return false;
  }
  let m2, ml, me2, len, shift4, next, re, tld_pos, at_pos;
  if (this.re.schema_test.test(text2)) {
    re = this.re.schema_search;
    re.lastIndex = 0;
    while ((m2 = re.exec(text2)) !== null) {
      len = this.testSchemaAt(text2, m2[2], re.lastIndex);
      if (len) {
        this.__schema__ = m2[2];
        this.__index__ = m2.index + m2[1].length;
        this.__last_index__ = m2.index + m2[0].length + len;
        break;
      }
    }
  }
  if (this.__opts__.fuzzyLink && this.__compiled__["http:"]) {
    tld_pos = text2.search(this.re.host_fuzzy_test);
    if (tld_pos >= 0) {
      if (this.__index__ < 0 || tld_pos < this.__index__) {
        if ((ml = text2.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {
          shift4 = ml.index + ml[1].length;
          if (this.__index__ < 0 || shift4 < this.__index__) {
            this.__schema__ = "";
            this.__index__ = shift4;
            this.__last_index__ = ml.index + ml[0].length;
          }
        }
      }
    }
  }
  if (this.__opts__.fuzzyEmail && this.__compiled__["mailto:"]) {
    at_pos = text2.indexOf("@");
    if (at_pos >= 0) {
      if ((me2 = text2.match(this.re.email_fuzzy)) !== null) {
        shift4 = me2.index + me2[1].length;
        next = me2.index + me2[0].length;
        if (this.__index__ < 0 || shift4 < this.__index__ || shift4 === this.__index__ && next > this.__last_index__) {
          this.__schema__ = "mailto:";
          this.__index__ = shift4;
          this.__last_index__ = next;
        }
      }
    }
  }
  return this.__index__ >= 0;
};
LinkifyIt.prototype.pretest = function pretest(text2) {
  return this.re.pretest.test(text2);
};
LinkifyIt.prototype.testSchemaAt = function testSchemaAt(text2, schema, pos) {
  if (!this.__compiled__[schema.toLowerCase()]) {
    return 0;
  }
  return this.__compiled__[schema.toLowerCase()].validate(text2, pos, this);
};
LinkifyIt.prototype.match = function match(text2) {
  const result = [];
  let shift4 = 0;
  if (this.__index__ >= 0 && this.__text_cache__ === text2) {
    result.push(createMatch(this, shift4));
    shift4 = this.__last_index__;
  }
  let tail = shift4 ? text2.slice(shift4) : text2;
  while (this.test(tail)) {
    result.push(createMatch(this, shift4));
    tail = tail.slice(this.__last_index__);
    shift4 += this.__last_index__;
  }
  if (result.length) {
    return result;
  }
  return null;
};
LinkifyIt.prototype.matchAtStart = function matchAtStart(text2) {
  this.__text_cache__ = text2;
  this.__index__ = -1;
  if (!text2.length) return null;
  const m2 = this.re.schema_at_start.exec(text2);
  if (!m2) return null;
  const len = this.testSchemaAt(text2, m2[2], m2[0].length);
  if (!len) return null;
  this.__schema__ = m2[2];
  this.__index__ = m2.index + m2[1].length;
  this.__last_index__ = m2.index + m2[0].length + len;
  return createMatch(this, 0);
};
LinkifyIt.prototype.tlds = function tlds(list2, keepOld) {
  list2 = Array.isArray(list2) ? list2 : [list2];
  if (!keepOld) {
    this.__tlds__ = list2.slice();
    this.__tlds_replaced__ = true;
    compile(this);
    return this;
  }
  this.__tlds__ = this.__tlds__.concat(list2).sort().filter(function(el, idx, arr) {
    return el !== arr[idx - 1];
  }).reverse();
  compile(this);
  return this;
};
LinkifyIt.prototype.normalize = function normalize2(match2) {
  if (!match2.schema) {
    match2.url = "http://" + match2.url;
  }
  if (match2.schema === "mailto:" && !/^mailto:/i.test(match2.url)) {
    match2.url = "mailto:" + match2.url;
  }
};
LinkifyIt.prototype.onCompile = function onCompile() {
};
var linkify_it_default = LinkifyIt;

// ../../../node_modules/punycode.js/punycode.es6.js
var maxInt = 2147483647;
var base = 36;
var tMin = 1;
var tMax = 26;
var skew = 38;
var damp = 700;
var initialBias = 72;
var initialN = 128;
var delimiter = "-";
var regexPunycode = /^xn--/;
var regexNonASCII = /[^\0-\x7F]/;
var regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g;
var errors = {
  "overflow": "Overflow: input needs wider integers to process",
  "not-basic": "Illegal input >= 0x80 (not a basic code point)",
  "invalid-input": "Invalid input"
};
var baseMinusTMin = base - tMin;
var floor = Math.floor;
var stringFromCharCode = String.fromCharCode;
function error(type) {
  throw new RangeError(errors[type]);
}
function map(array, callback) {
  const result = [];
  let length = array.length;
  while (length--) {
    result[length] = callback(array[length]);
  }
  return result;
}
function mapDomain(domain, callback) {
  const parts = domain.split("@");
  let result = "";
  if (parts.length > 1) {
    result = parts[0] + "@";
    domain = parts[1];
  }
  domain = domain.replace(regexSeparators, ".");
  const labels = domain.split(".");
  const encoded = map(labels, callback).join(".");
  return result + encoded;
}
function ucs2decode(string) {
  const output = [];
  let counter = 0;
  const length = string.length;
  while (counter < length) {
    const value = string.charCodeAt(counter++);
    if (value >= 55296 && value <= 56319 && counter < length) {
      const extra = string.charCodeAt(counter++);
      if ((extra & 64512) == 56320) {
        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);
      } else {
        output.push(value);
        counter--;
      }
    } else {
      output.push(value);
    }
  }
  return output;
}
var ucs2encode = (codePoints) => String.fromCodePoint(...codePoints);
var basicToDigit = function(codePoint) {
  if (codePoint >= 48 && codePoint < 58) {
    return 26 + (codePoint - 48);
  }
  if (codePoint >= 65 && codePoint < 91) {
    return codePoint - 65;
  }
  if (codePoint >= 97 && codePoint < 123) {
    return codePoint - 97;
  }
  return base;
};
var digitToBasic = function(digit, flag) {
  return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
};
var adapt = function(delta, numPoints, firstTime) {
  let k2 = 0;
  delta = firstTime ? floor(delta / damp) : delta >> 1;
  delta += floor(delta / numPoints);
  for (; delta > baseMinusTMin * tMax >> 1; k2 += base) {
    delta = floor(delta / baseMinusTMin);
  }
  return floor(k2 + (baseMinusTMin + 1) * delta / (delta + skew));
};
var decode2 = function(input) {
  const output = [];
  const inputLength = input.length;
  let i = 0;
  let n = initialN;
  let bias = initialBias;
  let basic = input.lastIndexOf(delimiter);
  if (basic < 0) {
    basic = 0;
  }
  for (let j = 0; j < basic; ++j) {
    if (input.charCodeAt(j) >= 128) {
      error("not-basic");
    }
    output.push(input.charCodeAt(j));
  }
  for (let index2 = basic > 0 ? basic + 1 : 0; index2 < inputLength; ) {
    const oldi = i;
    for (let w2 = 1, k2 = base; ; k2 += base) {
      if (index2 >= inputLength) {
        error("invalid-input");
      }
      const digit = basicToDigit(input.charCodeAt(index2++));
      if (digit >= base) {
        error("invalid-input");
      }
      if (digit > floor((maxInt - i) / w2)) {
        error("overflow");
      }
      i += digit * w2;
      const t2 = k2 <= bias ? tMin : k2 >= bias + tMax ? tMax : k2 - bias;
      if (digit < t2) {
        break;
      }
      const baseMinusT = base - t2;
      if (w2 > floor(maxInt / baseMinusT)) {
        error("overflow");
      }
      w2 *= baseMinusT;
    }
    const out = output.length + 1;
    bias = adapt(i - oldi, out, oldi == 0);
    if (floor(i / out) > maxInt - n) {
      error("overflow");
    }
    n += floor(i / out);
    i %= out;
    output.splice(i++, 0, n);
  }
  return String.fromCodePoint(...output);
};
var encode2 = function(input) {
  const output = [];
  input = ucs2decode(input);
  const inputLength = input.length;
  let n = initialN;
  let delta = 0;
  let bias = initialBias;
  for (const currentValue of input) {
    if (currentValue < 128) {
      output.push(stringFromCharCode(currentValue));
    }
  }
  const basicLength = output.length;
  let handledCPCount = basicLength;
  if (basicLength) {
    output.push(delimiter);
  }
  while (handledCPCount < inputLength) {
    let m2 = maxInt;
    for (const currentValue of input) {
      if (currentValue >= n && currentValue < m2) {
        m2 = currentValue;
      }
    }
    const handledCPCountPlusOne = handledCPCount + 1;
    if (m2 - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
      error("overflow");
    }
    delta += (m2 - n) * handledCPCountPlusOne;
    n = m2;
    for (const currentValue of input) {
      if (currentValue < n && ++delta > maxInt) {
        error("overflow");
      }
      if (currentValue === n) {
        let q = delta;
        for (let k2 = base; ; k2 += base) {
          const t2 = k2 <= bias ? tMin : k2 >= bias + tMax ? tMax : k2 - bias;
          if (q < t2) {
            break;
          }
          const qMinusT = q - t2;
          const baseMinusT = base - t2;
          output.push(
            stringFromCharCode(digitToBasic(t2 + qMinusT % baseMinusT, 0))
          );
          q = floor(qMinusT / baseMinusT);
        }
        output.push(stringFromCharCode(digitToBasic(q, 0)));
        bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);
        delta = 0;
        ++handledCPCount;
      }
    }
    ++delta;
    ++n;
  }
  return output.join("");
};
var toUnicode = function(input) {
  return mapDomain(input, function(string) {
    return regexPunycode.test(string) ? decode2(string.slice(4).toLowerCase()) : string;
  });
};
var toASCII = function(input) {
  return mapDomain(input, function(string) {
    return regexNonASCII.test(string) ? "xn--" + encode2(string) : string;
  });
};
var punycode = {
  /**
   * A string representing the current Punycode.js version number.
   * @memberOf punycode
   * @type String
   */
  "version": "2.3.1",
  /**
   * An object of methods to convert from JavaScript's internal character
   * representation (UCS-2) to Unicode code points, and back.
   * @see <https://mathiasbynens.be/notes/javascript-encoding>
   * @memberOf punycode
   * @type Object
   */
  "ucs2": {
    "decode": ucs2decode,
    "encode": ucs2encode
  },
  "decode": decode2,
  "encode": encode2,
  "toASCII": toASCII,
  "toUnicode": toUnicode
};
var punycode_es6_default = punycode;

// ../../../node_modules/markdown-it/lib/presets/default.mjs
var default_default = {
  options: {
    // Enable HTML tags in source
    html: false,
    // Use '/' to close single tags (<br />)
    xhtmlOut: false,
    // Convert '\n' in paragraphs into <br>
    breaks: false,
    // CSS language prefix for fenced blocks
    langPrefix: "language-",
    // autoconvert URL-like texts to links
    linkify: false,
    // Enable some language-neutral replacements + quotes beautification
    typographer: false,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    // Internal protection, recursion limit
    maxNesting: 100
  },
  components: {
    core: {},
    block: {},
    inline: {}
  }
};

// ../../../node_modules/markdown-it/lib/presets/zero.mjs
var zero_default = {
  options: {
    // Enable HTML tags in source
    html: false,
    // Use '/' to close single tags (<br />)
    xhtmlOut: false,
    // Convert '\n' in paragraphs into <br>
    breaks: false,
    // CSS language prefix for fenced blocks
    langPrefix: "language-",
    // autoconvert URL-like texts to links
    linkify: false,
    // Enable some language-neutral replacements + quotes beautification
    typographer: false,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    // Internal protection, recursion limit
    maxNesting: 20
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "text"
      ],
      rules2: [
        "balance_pairs",
        "fragments_join"
      ]
    }
  }
};

// ../../../node_modules/markdown-it/lib/presets/commonmark.mjs
var commonmark_default = {
  options: {
    // Enable HTML tags in source
    html: true,
    // Use '/' to close single tags (<br />)
    xhtmlOut: true,
    // Convert '\n' in paragraphs into <br>
    breaks: false,
    // CSS language prefix for fenced blocks
    langPrefix: "language-",
    // autoconvert URL-like texts to links
    linkify: false,
    // Enable some language-neutral replacements + quotes beautification
    typographer: false,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    // Internal protection, recursion limit
    maxNesting: 20
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "blockquote",
        "code",
        "fence",
        "heading",
        "hr",
        "html_block",
        "lheading",
        "list",
        "reference",
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "autolink",
        "backticks",
        "emphasis",
        "entity",
        "escape",
        "html_inline",
        "image",
        "link",
        "newline",
        "text"
      ],
      rules2: [
        "balance_pairs",
        "emphasis",
        "fragments_join"
      ]
    }
  }
};

// ../../../node_modules/markdown-it/lib/index.mjs
var config = {
  default: default_default,
  zero: zero_default,
  commonmark: commonmark_default
};
var BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;
var GOOD_DATA_RE = /^data:image\/(gif|png|jpeg|webp);/;
function validateLink(url) {
  const str = url.trim().toLowerCase();
  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true;
}
var RECODE_HOSTNAME_FOR = ["http:", "https:", "mailto:"];
function normalizeLink(url) {
  const parsed = parse_default(url, true);
  if (parsed.hostname) {
    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {
      try {
        parsed.hostname = punycode_es6_default.toASCII(parsed.hostname);
      } catch (er) {
      }
    }
  }
  return encode_default(format(parsed));
}
function normalizeLinkText(url) {
  const parsed = parse_default(url, true);
  if (parsed.hostname) {
    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {
      try {
        parsed.hostname = punycode_es6_default.toUnicode(parsed.hostname);
      } catch (er) {
      }
    }
  }
  return decode_default(format(parsed), decode_default.defaultChars + "%");
}
function MarkdownIt(presetName, options) {
  if (!(this instanceof MarkdownIt)) {
    return new MarkdownIt(presetName, options);
  }
  if (!options) {
    if (!isString(presetName)) {
      options = presetName || {};
      presetName = "default";
    }
  }
  this.inline = new parser_inline_default();
  this.block = new parser_block_default();
  this.core = new parser_core_default();
  this.renderer = new renderer_default();
  this.linkify = new linkify_it_default();
  this.validateLink = validateLink;
  this.normalizeLink = normalizeLink;
  this.normalizeLinkText = normalizeLinkText;
  this.utils = utils_exports;
  this.helpers = assign({}, helpers_exports);
  this.options = {};
  this.configure(presetName);
  if (options) {
    this.set(options);
  }
}
MarkdownIt.prototype.set = function(options) {
  assign(this.options, options);
  return this;
};
MarkdownIt.prototype.configure = function(presets) {
  const self = this;
  if (isString(presets)) {
    const presetName = presets;
    presets = config[presetName];
    if (!presets) {
      throw new Error('Wrong `markdown-it` preset "' + presetName + '", check name');
    }
  }
  if (!presets) {
    throw new Error("Wrong `markdown-it` preset, can't be empty");
  }
  if (presets.options) {
    self.set(presets.options);
  }
  if (presets.components) {
    Object.keys(presets.components).forEach(function(name) {
      if (presets.components[name].rules) {
        self[name].ruler.enableOnly(presets.components[name].rules);
      }
      if (presets.components[name].rules2) {
        self[name].ruler2.enableOnly(presets.components[name].rules2);
      }
    });
  }
  return this;
};
MarkdownIt.prototype.enable = function(list2, ignoreInvalid) {
  let result = [];
  if (!Array.isArray(list2)) {
    list2 = [list2];
  }
  ["core", "block", "inline"].forEach(function(chain) {
    result = result.concat(this[chain].ruler.enable(list2, true));
  }, this);
  result = result.concat(this.inline.ruler2.enable(list2, true));
  const missed = list2.filter(function(name) {
    return result.indexOf(name) < 0;
  });
  if (missed.length && !ignoreInvalid) {
    throw new Error("MarkdownIt. Failed to enable unknown rule(s): " + missed);
  }
  return this;
};
MarkdownIt.prototype.disable = function(list2, ignoreInvalid) {
  let result = [];
  if (!Array.isArray(list2)) {
    list2 = [list2];
  }
  ["core", "block", "inline"].forEach(function(chain) {
    result = result.concat(this[chain].ruler.disable(list2, true));
  }, this);
  result = result.concat(this.inline.ruler2.disable(list2, true));
  const missed = list2.filter(function(name) {
    return result.indexOf(name) < 0;
  });
  if (missed.length && !ignoreInvalid) {
    throw new Error("MarkdownIt. Failed to disable unknown rule(s): " + missed);
  }
  return this;
};
MarkdownIt.prototype.use = function(plugin) {
  const args = [this].concat(Array.prototype.slice.call(arguments, 1));
  plugin.apply(plugin, args);
  return this;
};
MarkdownIt.prototype.parse = function(src, env2) {
  if (typeof src !== "string") {
    throw new Error("Input data should be a String");
  }
  const state = new this.core.State(src, this, env2);
  this.core.process(state);
  return state.tokens;
};
MarkdownIt.prototype.render = function(src, env2) {
  env2 = env2 || {};
  return this.renderer.render(this.parse(src, env2), this.options, env2);
};
MarkdownIt.prototype.parseInline = function(src, env2) {
  const state = new this.core.State(src, this, env2);
  state.inlineMode = true;
  this.core.process(state);
  return state.tokens;
};
MarkdownIt.prototype.renderInline = function(src, env2) {
  env2 = env2 || {};
  return this.renderer.render(this.parseInline(src, env2), this.options, env2);
};
var lib_default = MarkdownIt;

// ../../../node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs
var React42 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-menu/dist/index.mjs
var React41 = __toESM(require_react(), 1);

// ../../../node_modules/@radix-ui/react-collection/dist/index.mjs
var import_react5 = __toESM(require_react(), 1);
var import_jsx_runtime12 = __toESM(require_jsx_runtime(), 1);
var import_react6 = __toESM(require_react(), 1);
var import_jsx_runtime13 = __toESM(require_jsx_runtime(), 1);
function createCollection(name) {
  const PROVIDER_NAME2 = name + "CollectionProvider";
  const [createCollectionContext, createCollectionScope6] = createContextScope(PROVIDER_NAME2);
  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(
    PROVIDER_NAME2,
    { collectionRef: { current: null }, itemMap: /* @__PURE__ */ new Map() }
  );
  const CollectionProvider = (props) => {
    const { scope, children } = props;
    const ref = import_react5.default.useRef(null);
    const itemMap = import_react5.default.useRef(/* @__PURE__ */ new Map()).current;
    return (0, import_jsx_runtime12.jsx)(CollectionProviderImpl, { scope, itemMap, collectionRef: ref, children });
  };
  CollectionProvider.displayName = PROVIDER_NAME2;
  const COLLECTION_SLOT_NAME = name + "CollectionSlot";
  const CollectionSlotImpl = createSlot(COLLECTION_SLOT_NAME);
  const CollectionSlot = import_react5.default.forwardRef(
    (props, forwardedRef) => {
      const { scope, children } = props;
      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);
      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);
      return (0, import_jsx_runtime12.jsx)(CollectionSlotImpl, { ref: composedRefs, children });
    }
  );
  CollectionSlot.displayName = COLLECTION_SLOT_NAME;
  const ITEM_SLOT_NAME = name + "CollectionItemSlot";
  const ITEM_DATA_ATTR = "data-radix-collection-item";
  const CollectionItemSlotImpl = createSlot(ITEM_SLOT_NAME);
  const CollectionItemSlot = import_react5.default.forwardRef(
    (props, forwardedRef) => {
      const { scope, children, ...itemData } = props;
      const ref = import_react5.default.useRef(null);
      const composedRefs = useComposedRefs(forwardedRef, ref);
      const context = useCollectionContext(ITEM_SLOT_NAME, scope);
      import_react5.default.useEffect(() => {
        context.itemMap.set(ref, { ref, ...itemData });
        return () => void context.itemMap.delete(ref);
      });
      return (0, import_jsx_runtime12.jsx)(CollectionItemSlotImpl, { ...{ [ITEM_DATA_ATTR]: "" }, ref: composedRefs, children });
    }
  );
  CollectionItemSlot.displayName = ITEM_SLOT_NAME;
  function useCollection6(scope) {
    const context = useCollectionContext(name + "CollectionConsumer", scope);
    const getItems = import_react5.default.useCallback(() => {
      const collectionNode = context.collectionRef.current;
      if (!collectionNode) return [];
      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));
      const items = Array.from(context.itemMap.values());
      const orderedItems = items.sort(
        (a2, b) => orderedNodes.indexOf(a2.ref.current) - orderedNodes.indexOf(b.ref.current)
      );
      return orderedItems;
    }, [context.collectionRef, context.itemMap]);
    return getItems;
  }
  return [
    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },
    useCollection6,
    createCollectionScope6
  ];
}

// ../../../node_modules/@radix-ui/react-direction/dist/index.mjs
var React36 = __toESM(require_react(), 1);
var import_jsx_runtime14 = __toESM(require_jsx_runtime(), 1);
var DirectionContext = React36.createContext(void 0);
function useDirection(localDir) {
  const globalDir = React36.useContext(DirectionContext);
  return localDir || globalDir || "ltr";
}

// ../../../node_modules/@radix-ui/react-popper/dist/index.mjs
var React39 = __toESM(require_react(), 1);

// ../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs
var sides = ["top", "right", "bottom", "left"];
var alignments = ["start", "end"];
var placements = sides.reduce((acc, side) => acc.concat(side, side + "-" + alignments[0], side + "-" + alignments[1]), []);
var min = Math.min;
var max = Math.max;
var round = Math.round;
var floor2 = Math.floor;
var createCoords = (v) => ({
  x: v,
  y: v
});
var oppositeSideMap = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
var oppositeAlignmentMap = {
  start: "end",
  end: "start"
};
function clamp(start, value, end) {
  return max(start, min(value, end));
}
function evaluate(value, param) {
  return typeof value === "function" ? value(param) : value;
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getOppositeAxis(axis) {
  return axis === "x" ? "y" : "x";
}
function getAxisLength(axis) {
  return axis === "y" ? "height" : "width";
}
function getSideAxis(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "y" : "x";
}
function getAlignmentAxis(placement) {
  return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const length = getAxisLength(alignmentAxis);
  let mainAlignmentSide = alignmentAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];
}
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
}
function getSideList(side, isStart, rtl) {
  const lr = ["left", "right"];
  const rl = ["right", "left"];
  const tb = ["top", "bottom"];
  const bt = ["bottom", "top"];
  switch (side) {
    case "top":
    case "bottom":
      if (rtl) return isStart ? rl : lr;
      return isStart ? lr : rl;
    case "left":
    case "right":
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  const alignment = getAlignment(placement);
  let list2 = getSideList(getSide(placement), direction === "start", rtl);
  if (alignment) {
    list2 = list2.map((side) => side + "-" + alignment);
    if (flipAlignment) {
      list2 = list2.concat(list2.map(getOppositeAlignmentPlacement));
    }
  }
  return list2;
}
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getPaddingObject(padding) {
  return typeof padding !== "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  const {
    x,
    y,
    width,
    height
  } = rect;
  return {
    width,
    height,
    top: y,
    left: x,
    right: x + width,
    bottom: y + height,
    x,
    y
  };
}

// ../../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference: reference2,
    floating
  } = _ref;
  const sideAxis = getSideAxis(placement);
  const alignmentAxis = getAlignmentAxis(placement);
  const alignLength = getAxisLength(alignmentAxis);
  const side = getSide(placement);
  const isVertical = sideAxis === "y";
  const commonX = reference2.x + reference2.width / 2 - floating.width / 2;
  const commonY = reference2.y + reference2.height / 2 - floating.height / 2;
  const commonAlign = reference2[alignLength] / 2 - floating[alignLength] / 2;
  let coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference2.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference2.y + reference2.height
      };
      break;
    case "right":
      coords = {
        x: reference2.x + reference2.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference2.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference2.x,
        y: reference2.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
var computePosition = async (reference2, floating, config2) => {
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2
  } = config2;
  const validMiddleware = middleware.filter(Boolean);
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
  let rects = await platform2.getElementRects({
    reference: reference2,
    floating,
    strategy
  });
  let {
    x,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < validMiddleware.length; i++) {
    const {
      name,
      fn
    } = validMiddleware[i];
    const {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn({
      x,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference: reference2,
        floating
      }
    });
    x = nextX != null ? nextX : x;
    y = nextY != null ? nextY : y;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data
      }
    };
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === "object") {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform2.getElementRects({
            reference: reference2,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x,
          y
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
    }
  }
  return {
    x,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
async function detectOverflow(state, options) {
  var _await$platform$isEle;
  if (options === void 0) {
    options = {};
  }
  const {
    x,
    y,
    platform: platform2,
    rects,
    elements,
    strategy
  } = state;
  const {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = false,
    padding = 0
  } = evaluate(options, state);
  const paddingObject = getPaddingObject(padding);
  const altContext = elementContext === "floating" ? "reference" : "floating";
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = rectToClientRect(await platform2.getClippingRect({
    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  }));
  const rect = elementContext === "floating" ? {
    x,
    y,
    width: rects.floating.width,
    height: rects.floating.height
  } : rects.reference;
  const offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating));
  const offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  };
  const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements,
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}
var arrow = (options) => ({
  name: "arrow",
  options,
  async fn(state) {
    const {
      x,
      y,
      placement,
      rects,
      platform: platform2,
      elements,
      middlewareData
    } = state;
    const {
      element,
      padding = 0
    } = evaluate(options, state) || {};
    if (element == null) {
      return {};
    }
    const paddingObject = getPaddingObject(padding);
    const coords = {
      x,
      y
    };
    const axis = getAlignmentAxis(placement);
    const length = getAxisLength(axis);
    const arrowDimensions = await platform2.getDimensions(element);
    const isYAxis = axis === "y";
    const minProp = isYAxis ? "top" : "left";
    const maxProp = isYAxis ? "bottom" : "right";
    const clientProp = isYAxis ? "clientHeight" : "clientWidth";
    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
    const startDiff = coords[axis] - rects.reference[axis];
    const arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element));
    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
    if (!clientSize || !await (platform2.isElement == null ? void 0 : platform2.isElement(arrowOffsetParent))) {
      clientSize = elements.floating[clientProp] || rects.floating[length];
    }
    const centerToReference = endDiff / 2 - startDiff / 2;
    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;
    const minPadding = min(paddingObject[minProp], largestPossiblePadding);
    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);
    const min$1 = minPadding;
    const max2 = clientSize - arrowDimensions[length] - maxPadding;
    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
    const offset4 = clamp(min$1, center, max2);
    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset4 && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;
    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max2 : 0;
    return {
      [axis]: coords[axis] + alignmentOffset,
      data: {
        [axis]: offset4,
        centerOffset: center - offset4 - alignmentOffset,
        ...shouldAddOffset && {
          alignmentOffset
        }
      },
      reset: shouldAddOffset
    };
  }
});
var flip = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "flip",
    options,
    async fn(state) {
      var _middlewareData$arrow, _middlewareData$flip;
      const {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform: platform2,
        elements
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = "bestFit",
        fallbackAxisSideDirection = "none",
        flipAlignment = true,
        ...detectOverflowOptions
      } = evaluate(options, state);
      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
        return {};
      }
      const side = getSide(placement);
      const initialSideAxis = getSideAxis(initialPlacement);
      const isBasePlacement = getSide(initialPlacement) === initialPlacement;
      const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== "none";
      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {
        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
      }
      const placements2 = [initialPlacement, ...fallbackPlacements];
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis) {
        overflows.push(overflow[side]);
      }
      if (checkCrossAxis) {
        const sides2 = getAlignmentSides(placement, rects, rtl);
        overflows.push(overflow[sides2[0]], overflow[sides2[1]]);
      }
      overflowsData = [...overflowsData, {
        placement,
        overflows
      }];
      if (!overflows.every((side2) => side2 <= 0)) {
        var _middlewareData$flip2, _overflowsData$filter;
        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
        const nextPlacement = placements2[nextIndex];
        if (nextPlacement) {
          var _overflowsData$;
          const ignoreCrossAxisOverflow = checkCrossAxis === "alignment" ? initialSideAxis !== getSideAxis(nextPlacement) : false;
          const hasInitialMainAxisOverflow = ((_overflowsData$ = overflowsData[0]) == null ? void 0 : _overflowsData$.overflows[0]) > 0;
          if (!ignoreCrossAxisOverflow || hasInitialMainAxisOverflow) {
            return {
              data: {
                index: nextIndex,
                overflows: overflowsData
              },
              reset: {
                placement: nextPlacement
              }
            };
          }
        }
        let resetPlacement = (_overflowsData$filter = overflowsData.filter((d) => d.overflows[0] <= 0).sort((a2, b) => a2.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
        if (!resetPlacement) {
          switch (fallbackStrategy) {
            case "bestFit": {
              var _overflowsData$filter2;
              const placement2 = (_overflowsData$filter2 = overflowsData.filter((d) => {
                if (hasFallbackAxisSideDirection) {
                  const currentSideAxis = getSideAxis(d.placement);
                  return currentSideAxis === initialSideAxis || // Create a bias to the `y` side axis due to horizontal
                  // reading directions favoring greater width.
                  currentSideAxis === "y";
                }
                return true;
              }).map((d) => [d.placement, d.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a2, b) => a2[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];
              if (placement2) {
                resetPlacement = placement2;
              }
              break;
            }
            case "initialPlacement":
              resetPlacement = initialPlacement;
              break;
          }
        }
        if (placement !== resetPlacement) {
          return {
            reset: {
              placement: resetPlacement
            }
          };
        }
      }
      return {};
    }
  };
};
function getSideOffsets(overflow, rect) {
  return {
    top: overflow.top - rect.height,
    right: overflow.right - rect.width,
    bottom: overflow.bottom - rect.height,
    left: overflow.left - rect.width
  };
}
function isAnySideFullyClipped(overflow) {
  return sides.some((side) => overflow[side] >= 0);
}
var hide = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "hide",
    options,
    async fn(state) {
      const {
        rects
      } = state;
      const {
        strategy = "referenceHidden",
        ...detectOverflowOptions
      } = evaluate(options, state);
      switch (strategy) {
        case "referenceHidden": {
          const overflow = await detectOverflow(state, {
            ...detectOverflowOptions,
            elementContext: "reference"
          });
          const offsets = getSideOffsets(overflow, rects.reference);
          return {
            data: {
              referenceHiddenOffsets: offsets,
              referenceHidden: isAnySideFullyClipped(offsets)
            }
          };
        }
        case "escaped": {
          const overflow = await detectOverflow(state, {
            ...detectOverflowOptions,
            altBoundary: true
          });
          const offsets = getSideOffsets(overflow, rects.floating);
          return {
            data: {
              escapedOffsets: offsets,
              escaped: isAnySideFullyClipped(offsets)
            }
          };
        }
        default: {
          return {};
        }
      }
    }
  };
};
async function convertValueToCoords(state, options) {
  const {
    placement,
    platform: platform2,
    elements
  } = state;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
  const side = getSide(placement);
  const alignment = getAlignment(placement);
  const isVertical = getSideAxis(placement) === "y";
  const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = evaluate(options, state);
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: rawValue.mainAxis || 0,
    crossAxis: rawValue.crossAxis || 0,
    alignmentAxis: rawValue.alignmentAxis
  };
  if (alignment && typeof alignmentAxis === "number") {
    crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
var offset = function(options) {
  if (options === void 0) {
    options = 0;
  }
  return {
    name: "offset",
    options,
    async fn(state) {
      var _middlewareData$offse, _middlewareData$arrow;
      const {
        x,
        y,
        placement,
        middlewareData
      } = state;
      const diffCoords = await convertValueToCoords(state, options);
      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {
        return {};
      }
      return {
        x: x + diffCoords.x,
        y: y + diffCoords.y,
        data: {
          ...diffCoords,
          placement
        }
      };
    }
  };
};
var shift = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "shift",
    options,
    async fn(state) {
      const {
        x,
        y,
        placement
      } = state;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = false,
        limiter = {
          fn: (_ref) => {
            let {
              x: x2,
              y: y2
            } = _ref;
            return {
              x: x2,
              y: y2
            };
          }
        },
        ...detectOverflowOptions
      } = evaluate(options, state);
      const coords = {
        x,
        y
      };
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const crossAxis = getSideAxis(getSide(placement));
      const mainAxis = getOppositeAxis(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      if (checkMainAxis) {
        const minSide = mainAxis === "y" ? "top" : "left";
        const maxSide = mainAxis === "y" ? "bottom" : "right";
        const min2 = mainAxisCoord + overflow[minSide];
        const max2 = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = clamp(min2, mainAxisCoord, max2);
      }
      if (checkCrossAxis) {
        const minSide = crossAxis === "y" ? "top" : "left";
        const maxSide = crossAxis === "y" ? "bottom" : "right";
        const min2 = crossAxisCoord + overflow[minSide];
        const max2 = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = clamp(min2, crossAxisCoord, max2);
      }
      const limitedCoords = limiter.fn({
        ...state,
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      });
      return {
        ...limitedCoords,
        data: {
          x: limitedCoords.x - x,
          y: limitedCoords.y - y,
          enabled: {
            [mainAxis]: checkMainAxis,
            [crossAxis]: checkCrossAxis
          }
        }
      };
    }
  };
};
var limitShift = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    options,
    fn(state) {
      const {
        x,
        y,
        placement,
        rects,
        middlewareData
      } = state;
      const {
        offset: offset4 = 0,
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true
      } = evaluate(options, state);
      const coords = {
        x,
        y
      };
      const crossAxis = getSideAxis(placement);
      const mainAxis = getOppositeAxis(crossAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      const rawOffset = evaluate(offset4, state);
      const computedOffset = typeof rawOffset === "number" ? {
        mainAxis: rawOffset,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...rawOffset
      };
      if (checkMainAxis) {
        const len = mainAxis === "y" ? "height" : "width";
        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;
        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
        if (mainAxisCoord < limitMin) {
          mainAxisCoord = limitMin;
        } else if (mainAxisCoord > limitMax) {
          mainAxisCoord = limitMax;
        }
      }
      if (checkCrossAxis) {
        var _middlewareData$offse, _middlewareData$offse2;
        const len = mainAxis === "y" ? "width" : "height";
        const isOriginSide = ["top", "left"].includes(getSide(placement));
        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);
        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);
        if (crossAxisCoord < limitMin) {
          crossAxisCoord = limitMin;
        } else if (crossAxisCoord > limitMax) {
          crossAxisCoord = limitMax;
        }
      }
      return {
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      };
    }
  };
};
var size = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "size",
    options,
    async fn(state) {
      var _state$middlewareData, _state$middlewareData2;
      const {
        placement,
        rects,
        platform: platform2,
        elements
      } = state;
      const {
        apply = () => {
        },
        ...detectOverflowOptions
      } = evaluate(options, state);
      const overflow = await detectOverflow(state, detectOverflowOptions);
      const side = getSide(placement);
      const alignment = getAlignment(placement);
      const isYAxis = getSideAxis(placement) === "y";
      const {
        width,
        height
      } = rects.floating;
      let heightSide;
      let widthSide;
      if (side === "top" || side === "bottom") {
        heightSide = side;
        widthSide = alignment === (await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)) ? "start" : "end") ? "left" : "right";
      } else {
        widthSide = side;
        heightSide = alignment === "end" ? "top" : "bottom";
      }
      const maximumClippingHeight = height - overflow.top - overflow.bottom;
      const maximumClippingWidth = width - overflow.left - overflow.right;
      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);
      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);
      const noShift = !state.middlewareData.shift;
      let availableHeight = overflowAvailableHeight;
      let availableWidth = overflowAvailableWidth;
      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {
        availableWidth = maximumClippingWidth;
      }
      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {
        availableHeight = maximumClippingHeight;
      }
      if (noShift && !alignment) {
        const xMin = max(overflow.left, 0);
        const xMax = max(overflow.right, 0);
        const yMin = max(overflow.top, 0);
        const yMax = max(overflow.bottom, 0);
        if (isYAxis) {
          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));
        } else {
          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));
        }
      }
      await apply({
        ...state,
        availableWidth,
        availableHeight
      });
      const nextDimensions = await platform2.getDimensions(elements.floating);
      if (width !== nextDimensions.width || height !== nextDimensions.height) {
        return {
          reset: {
            rects: true
          }
        };
      }
      return {};
    }
  };
};

// ../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs
function hasWindow() {
  return typeof window !== "undefined";
}
function getNodeName(node) {
  if (isNode2(node)) {
    return (node.nodeName || "").toLowerCase();
  }
  return "#document";
}
function getWindow(node) {
  var _node$ownerDocument;
  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
  var _ref;
  return (_ref = (isNode2(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode2(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof Node || value instanceof getWindow(value).Node;
}
function isElement(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof Element || value instanceof getWindow(value).Element;
}
function isHTMLElement(value) {
  if (!hasWindow()) {
    return false;
  }
  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;
}
function isShadowRoot(value) {
  if (!hasWindow() || typeof ShadowRoot === "undefined") {
    return false;
  }
  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle2(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement(element) {
  return ["table", "td", "th"].includes(getNodeName(element));
}
function isTopLayer(element) {
  return [":popover-open", ":modal"].some((selector) => {
    try {
      return element.matches(selector);
    } catch (e) {
      return false;
    }
  });
}
function isContainingBlock(elementOrCss) {
  const webkit = isWebKit();
  const css = isElement(elementOrCss) ? getComputedStyle2(elementOrCss) : elementOrCss;
  return ["transform", "translate", "scale", "rotate", "perspective"].some((value) => css[value] ? css[value] !== "none" : false) || (css.containerType ? css.containerType !== "normal" : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== "none" : false) || !webkit && (css.filter ? css.filter !== "none" : false) || ["transform", "translate", "scale", "rotate", "perspective", "filter"].some((value) => (css.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css.contain || "").includes(value));
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else if (isTopLayer(currentNode)) {
      return null;
    }
    currentNode = getParentNode(currentNode);
  }
  return null;
}
function isWebKit() {
  if (typeof CSS === "undefined" || !CSS.supports) return false;
  return CSS.supports("-webkit-backdrop-filter", "none");
}
function isLastTraversableNode(node) {
  return ["html", "body", "#document"].includes(getNodeName(node));
}
function getComputedStyle2(element) {
  return getWindow(element).getComputedStyle(element);
}
function getNodeScroll(element) {
  if (isElement(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.scrollX,
    scrollTop: element.scrollY
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html") {
    return node;
  }
  const result = (
    // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot(node) && node.host || // Fallback.
    getDocumentElement(node)
  );
  return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (isLastTraversableNode(parentNode)) {
    return node.ownerDocument ? node.ownerDocument.body : node.body;
  }
  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list2, traverseIframes) {
  var _node$ownerDocument2;
  if (list2 === void 0) {
    list2 = [];
  }
  if (traverseIframes === void 0) {
    traverseIframes = true;
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
  const win = getWindow(scrollableAncestor);
  if (isBody) {
    const frameElement = getFrameElement(win);
    return list2.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);
  }
  return list2.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}
function getFrameElement(win) {
  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;
}

// ../../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs
function getCssDimensions(element) {
  const css = getComputedStyle2(element);
  let width = parseFloat(css.width) || 0;
  let height = parseFloat(css.height) || 0;
  const hasOffset = isHTMLElement(element);
  const offsetWidth = hasOffset ? element.offsetWidth : width;
  const offsetHeight = hasOffset ? element.offsetHeight : height;
  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
  if (shouldFallback) {
    width = offsetWidth;
    height = offsetHeight;
  }
  return {
    width,
    height,
    $: shouldFallback
  };
}
function unwrapElement(element) {
  return !isElement(element) ? element.contextElement : element;
}
function getScale(element) {
  const domElement = unwrapElement(element);
  if (!isHTMLElement(domElement)) {
    return createCoords(1);
  }
  const rect = domElement.getBoundingClientRect();
  const {
    width,
    height,
    $
  } = getCssDimensions(domElement);
  let x = ($ ? round(rect.width) : rect.width) / width;
  let y = ($ ? round(rect.height) : rect.height) / height;
  if (!x || !Number.isFinite(x)) {
    x = 1;
  }
  if (!y || !Number.isFinite(y)) {
    y = 1;
  }
  return {
    x,
    y
  };
}
var noOffsets = createCoords(0);
function getVisualOffsets(element) {
  const win = getWindow(element);
  if (!isWebKit() || !win.visualViewport) {
    return noOffsets;
  }
  return {
    x: win.visualViewport.offsetLeft,
    y: win.visualViewport.offsetTop
  };
}
function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {
    return false;
  }
  return isFixed;
}
function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  const domElement = unwrapElement(element);
  let scale = createCoords(1);
  if (includeScale) {
    if (offsetParent) {
      if (isElement(offsetParent)) {
        scale = getScale(offsetParent);
      }
    } else {
      scale = getScale(element);
    }
  }
  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);
  let x = (clientRect.left + visualOffsets.x) / scale.x;
  let y = (clientRect.top + visualOffsets.y) / scale.y;
  let width = clientRect.width / scale.x;
  let height = clientRect.height / scale.y;
  if (domElement) {
    const win = getWindow(domElement);
    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;
    let currentWin = win;
    let currentIFrame = getFrameElement(currentWin);
    while (currentIFrame && offsetParent && offsetWin !== currentWin) {
      const iframeScale = getScale(currentIFrame);
      const iframeRect = currentIFrame.getBoundingClientRect();
      const css = getComputedStyle2(currentIFrame);
      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x *= iframeScale.x;
      y *= iframeScale.y;
      width *= iframeScale.x;
      height *= iframeScale.y;
      x += left;
      y += top;
      currentWin = getWindow(currentIFrame);
      currentIFrame = getFrameElement(currentWin);
    }
  }
  return rectToClientRect({
    width,
    height,
    x,
    y
  });
}
function getWindowScrollBarX(element, rect) {
  const leftScroll = getNodeScroll(element).scrollLeft;
  if (!rect) {
    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;
  }
  return rect.left + leftScroll;
}
function getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {
  if (ignoreScrollbarX === void 0) {
    ignoreScrollbarX = false;
  }
  const htmlRect = documentElement.getBoundingClientRect();
  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 : (
    // RTL <body> scrollbar.
    getWindowScrollBarX(documentElement, htmlRect)
  ));
  const y = htmlRect.top + scroll.scrollTop;
  return {
    x,
    y
  };
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    elements,
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isFixed = strategy === "fixed";
  const documentElement = getDocumentElement(offsetParent);
  const topLayer = elements ? isTopLayer(elements.floating) : false;
  if (offsetParent === documentElement || topLayer && isFixed) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  let scale = createCoords(1);
  const offsets = createCoords(0);
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent);
      scale = getScale(offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);
  return {
    width: rect.width * scale.x,
    height: rect.height * scale.y,
    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,
    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y
  };
}
function getClientRects(element) {
  return Array.from(element.getClientRects());
}
function getDocumentRect(element) {
  const html = getDocumentElement(element);
  const scroll = getNodeScroll(element);
  const body = element.ownerDocument.body;
  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
  let x = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y = -scroll.scrollTop;
  if (getComputedStyle2(body).direction === "rtl") {
    x += max(html.clientWidth, body.clientWidth) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getViewportRect(element, strategy) {
  const win = getWindow(element);
  const html = getDocumentElement(element);
  const visualViewport = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x = 0;
  let y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const visualViewportBased = isWebKit();
    if (!visualViewportBased || visualViewportBased && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getInnerBoundingClientRect(element, strategy) {
  const clientRect = getBoundingClientRect(element, true, strategy === "fixed");
  const top = clientRect.top + element.clientTop;
  const left = clientRect.left + element.clientLeft;
  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);
  const width = element.clientWidth * scale.x;
  const height = element.clientHeight * scale.y;
  const x = left * scale.x;
  const y = top * scale.y;
  return {
    width,
    height,
    x,
    y
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === "viewport") {
    rect = getViewportRect(element, strategy);
  } else if (clippingAncestor === "document") {
    rect = getDocumentRect(getDocumentElement(element));
  } else if (isElement(clippingAncestor)) {
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  } else {
    const visualOffsets = getVisualOffsets(element);
    rect = {
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y,
      width: clippingAncestor.width,
      height: clippingAncestor.height
    };
  }
  return rectToClientRect(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  const parentNode = getParentNode(element);
  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {
    return false;
  }
  return getComputedStyle2(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
}
function getClippingElementAncestors(element, cache) {
  const cachedResult = cache.get(element);
  if (cachedResult) {
    return cachedResult;
  }
  let result = getOverflowAncestors(element, [], false).filter((el) => isElement(el) && getNodeName(el) !== "body");
  let currentContainingBlockComputedStyle = null;
  const elementIsFixed = getComputedStyle2(element).position === "fixed";
  let currentNode = elementIsFixed ? getParentNode(element) : element;
  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {
    const computedStyle = getComputedStyle2(currentNode);
    const currentNodeIsContaining = isContainingBlock(currentNode);
    if (!currentNodeIsContaining && computedStyle.position === "fixed") {
      currentContainingBlockComputedStyle = null;
    }
    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
    if (shouldDropCurrentNode) {
      result = result.filter((ancestor) => ancestor !== currentNode);
    } else {
      currentContainingBlockComputedStyle = computedStyle;
    }
    currentNode = getParentNode(currentNode);
  }
  cache.set(element, result);
  return result;
}
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const elementClippingAncestors = boundary === "clippingAncestors" ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);
  const clippingAncestors = [...elementClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
function getDimensions(element) {
  const {
    width,
    height
  } = getCssDimensions(element);
  return {
    width,
    height
  };
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  const isFixed = strategy === "fixed";
  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = createCoords(0);
  function setLeftRTLScrollbarOffset() {
    offsets.x = getWindowScrollBarX(documentElement);
  }
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isOffsetParentAnElement) {
      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      setLeftRTLScrollbarOffset();
    }
  }
  if (isFixed && !isOffsetParentAnElement && documentElement) {
    setLeftRTLScrollbarOffset();
  }
  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);
  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;
  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;
  return {
    x,
    y,
    width: rect.width,
    height: rect.height
  };
}
function isStaticPositioned(element) {
  return getComputedStyle2(element).position === "static";
}
function getTrueOffsetParent(element, polyfill) {
  if (!isHTMLElement(element) || getComputedStyle2(element).position === "fixed") {
    return null;
  }
  if (polyfill) {
    return polyfill(element);
  }
  let rawOffsetParent = element.offsetParent;
  if (getDocumentElement(element) === rawOffsetParent) {
    rawOffsetParent = rawOffsetParent.ownerDocument.body;
  }
  return rawOffsetParent;
}
function getOffsetParent(element, polyfill) {
  const win = getWindow(element);
  if (isTopLayer(element)) {
    return win;
  }
  if (!isHTMLElement(element)) {
    let svgOffsetParent = getParentNode(element);
    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {
      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {
        return svgOffsetParent;
      }
      svgOffsetParent = getParentNode(svgOffsetParent);
    }
    return win;
  }
  let offsetParent = getTrueOffsetParent(element, polyfill);
  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {
    offsetParent = getTrueOffsetParent(offsetParent, polyfill);
  }
  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {
    return win;
  }
  return offsetParent || getContainingBlock(element) || win;
}
var getElementRects = async function(data) {
  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
  const getDimensionsFn = this.getDimensions;
  const floatingDimensions = await getDimensionsFn(data.floating);
  return {
    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),
    floating: {
      x: 0,
      y: 0,
      width: floatingDimensions.width,
      height: floatingDimensions.height
    }
  };
};
function isRTL(element) {
  return getComputedStyle2(element).direction === "rtl";
}
var platform = {
  convertOffsetParentRelativeRectToViewportRelativeRect,
  getDocumentElement,
  getClippingRect,
  getOffsetParent,
  getElementRects,
  getClientRects,
  getDimensions,
  getScale,
  isElement,
  isRTL
};
function rectsAreEqual(a2, b) {
  return a2.x === b.x && a2.y === b.y && a2.width === b.width && a2.height === b.height;
}
function observeMove(element, onMove) {
  let io = null;
  let timeoutId;
  const root = getDocumentElement(element);
  function cleanup() {
    var _io;
    clearTimeout(timeoutId);
    (_io = io) == null || _io.disconnect();
    io = null;
  }
  function refresh(skip, threshold) {
    if (skip === void 0) {
      skip = false;
    }
    if (threshold === void 0) {
      threshold = 1;
    }
    cleanup();
    const elementRectForRootMargin = element.getBoundingClientRect();
    const {
      left,
      top,
      width,
      height
    } = elementRectForRootMargin;
    if (!skip) {
      onMove();
    }
    if (!width || !height) {
      return;
    }
    const insetTop = floor2(top);
    const insetRight = floor2(root.clientWidth - (left + width));
    const insetBottom = floor2(root.clientHeight - (top + height));
    const insetLeft = floor2(left);
    const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
    const options = {
      rootMargin,
      threshold: max(0, min(1, threshold)) || 1
    };
    let isFirstUpdate = true;
    function handleObserve(entries) {
      const ratio = entries[0].intersectionRatio;
      if (ratio !== threshold) {
        if (!isFirstUpdate) {
          return refresh();
        }
        if (!ratio) {
          timeoutId = setTimeout(() => {
            refresh(false, 1e-7);
          }, 1e3);
        } else {
          refresh(false, ratio);
        }
      }
      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {
        refresh();
      }
      isFirstUpdate = false;
    }
    try {
      io = new IntersectionObserver(handleObserve, {
        ...options,
        // Handle <iframe>s
        root: root.ownerDocument
      });
    } catch (_e) {
      io = new IntersectionObserver(handleObserve, options);
    }
    io.observe(element);
  }
  refresh(true);
  return cleanup;
}
function autoUpdate(reference2, floating, update, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    ancestorScroll = true,
    ancestorResize = true,
    elementResize = typeof ResizeObserver === "function",
    layoutShift = typeof IntersectionObserver === "function",
    animationFrame = false
  } = options;
  const referenceEl = unwrapElement(reference2);
  const ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
  ancestors.forEach((ancestor) => {
    ancestorScroll && ancestor.addEventListener("scroll", update, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener("resize", update);
  });
  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
  let reobserveFrame = -1;
  let resizeObserver = null;
  if (elementResize) {
    resizeObserver = new ResizeObserver((_ref) => {
      let [firstEntry] = _ref;
      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {
        resizeObserver.unobserve(floating);
        cancelAnimationFrame(reobserveFrame);
        reobserveFrame = requestAnimationFrame(() => {
          var _resizeObserver;
          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);
        });
      }
      update();
    });
    if (referenceEl && !animationFrame) {
      resizeObserver.observe(referenceEl);
    }
    resizeObserver.observe(floating);
  }
  let frameId;
  let prevRefRect = animationFrame ? getBoundingClientRect(reference2) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    const nextRefRect = getBoundingClientRect(reference2);
    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {
      update();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  update();
  return () => {
    var _resizeObserver2;
    ancestors.forEach((ancestor) => {
      ancestorScroll && ancestor.removeEventListener("scroll", update);
      ancestorResize && ancestor.removeEventListener("resize", update);
    });
    cleanupIo == null || cleanupIo();
    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();
    resizeObserver = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}
var offset2 = offset;
var shift2 = shift;
var flip2 = flip;
var size2 = size;
var hide2 = hide;
var arrow2 = arrow;
var limitShift2 = limitShift;
var computePosition2 = (reference2, floating, options) => {
  const cache = /* @__PURE__ */ new Map();
  const mergedOptions = {
    platform,
    ...options
  };
  const platformWithCache = {
    ...mergedOptions.platform,
    _c: cache
  };
  return computePosition(reference2, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};

// ../../../node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs
var React37 = __toESM(require_react(), 1);
var import_react7 = __toESM(require_react(), 1);
var ReactDOM3 = __toESM(require_react_dom(), 1);
var index = typeof document !== "undefined" ? import_react7.useLayoutEffect : import_react7.useEffect;
function deepEqual(a2, b) {
  if (a2 === b) {
    return true;
  }
  if (typeof a2 !== typeof b) {
    return false;
  }
  if (typeof a2 === "function" && a2.toString() === b.toString()) {
    return true;
  }
  let length;
  let i;
  let keys;
  if (a2 && b && typeof a2 === "object") {
    if (Array.isArray(a2)) {
      length = a2.length;
      if (length !== b.length) return false;
      for (i = length; i-- !== 0; ) {
        if (!deepEqual(a2[i], b[i])) {
          return false;
        }
      }
      return true;
    }
    keys = Object.keys(a2);
    length = keys.length;
    if (length !== Object.keys(b).length) {
      return false;
    }
    for (i = length; i-- !== 0; ) {
      if (!{}.hasOwnProperty.call(b, keys[i])) {
        return false;
      }
    }
    for (i = length; i-- !== 0; ) {
      const key = keys[i];
      if (key === "_owner" && a2.$$typeof) {
        continue;
      }
      if (!deepEqual(a2[key], b[key])) {
        return false;
      }
    }
    return true;
  }
  return a2 !== a2 && b !== b;
}
function getDPR(element) {
  if (typeof window === "undefined") {
    return 1;
  }
  const win = element.ownerDocument.defaultView || window;
  return win.devicePixelRatio || 1;
}
function roundByDPR(element, value) {
  const dpr = getDPR(element);
  return Math.round(value * dpr) / dpr;
}
function useLatestRef(value) {
  const ref = React37.useRef(value);
  index(() => {
    ref.current = value;
  });
  return ref;
}
function useFloating(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2,
    elements: {
      reference: externalReference,
      floating: externalFloating
    } = {},
    transform = true,
    whileElementsMounted,
    open
  } = options;
  const [data, setData] = React37.useState({
    x: 0,
    y: 0,
    strategy,
    placement,
    middlewareData: {},
    isPositioned: false
  });
  const [latestMiddleware, setLatestMiddleware] = React37.useState(middleware);
  if (!deepEqual(latestMiddleware, middleware)) {
    setLatestMiddleware(middleware);
  }
  const [_reference, _setReference] = React37.useState(null);
  const [_floating, _setFloating] = React37.useState(null);
  const setReference = React37.useCallback((node) => {
    if (node !== referenceRef.current) {
      referenceRef.current = node;
      _setReference(node);
    }
  }, []);
  const setFloating = React37.useCallback((node) => {
    if (node !== floatingRef.current) {
      floatingRef.current = node;
      _setFloating(node);
    }
  }, []);
  const referenceEl = externalReference || _reference;
  const floatingEl = externalFloating || _floating;
  const referenceRef = React37.useRef(null);
  const floatingRef = React37.useRef(null);
  const dataRef = React37.useRef(data);
  const hasWhileElementsMounted = whileElementsMounted != null;
  const whileElementsMountedRef = useLatestRef(whileElementsMounted);
  const platformRef = useLatestRef(platform2);
  const openRef = useLatestRef(open);
  const update = React37.useCallback(() => {
    if (!referenceRef.current || !floatingRef.current) {
      return;
    }
    const config2 = {
      placement,
      strategy,
      middleware: latestMiddleware
    };
    if (platformRef.current) {
      config2.platform = platformRef.current;
    }
    computePosition2(referenceRef.current, floatingRef.current, config2).then((data2) => {
      const fullData = {
        ...data2,
        // The floating element's position may be recomputed while it's closed
        // but still mounted (such as when transitioning out). To ensure
        // `isPositioned` will be `false` initially on the next open, avoid
        // setting it to `true` when `open === false` (must be specified).
        isPositioned: openRef.current !== false
      };
      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {
        dataRef.current = fullData;
        ReactDOM3.flushSync(() => {
          setData(fullData);
        });
      }
    });
  }, [latestMiddleware, placement, strategy, platformRef, openRef]);
  index(() => {
    if (open === false && dataRef.current.isPositioned) {
      dataRef.current.isPositioned = false;
      setData((data2) => ({
        ...data2,
        isPositioned: false
      }));
    }
  }, [open]);
  const isMountedRef = React37.useRef(false);
  index(() => {
    isMountedRef.current = true;
    return () => {
      isMountedRef.current = false;
    };
  }, []);
  index(() => {
    if (referenceEl) referenceRef.current = referenceEl;
    if (floatingEl) floatingRef.current = floatingEl;
    if (referenceEl && floatingEl) {
      if (whileElementsMountedRef.current) {
        return whileElementsMountedRef.current(referenceEl, floatingEl, update);
      }
      update();
    }
  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);
  const refs = React37.useMemo(() => ({
    reference: referenceRef,
    floating: floatingRef,
    setReference,
    setFloating
  }), [setReference, setFloating]);
  const elements = React37.useMemo(() => ({
    reference: referenceEl,
    floating: floatingEl
  }), [referenceEl, floatingEl]);
  const floatingStyles = React37.useMemo(() => {
    const initialStyles = {
      position: strategy,
      left: 0,
      top: 0
    };
    if (!elements.floating) {
      return initialStyles;
    }
    const x = roundByDPR(elements.floating, data.x);
    const y = roundByDPR(elements.floating, data.y);
    if (transform) {
      return {
        ...initialStyles,
        transform: "translate(" + x + "px, " + y + "px)",
        ...getDPR(elements.floating) >= 1.5 && {
          willChange: "transform"
        }
      };
    }
    return {
      position: strategy,
      left: x,
      top: y
    };
  }, [strategy, transform, elements.floating, data.x, data.y]);
  return React37.useMemo(() => ({
    ...data,
    update,
    refs,
    elements,
    floatingStyles
  }), [data, update, refs, elements, floatingStyles]);
}
var arrow$1 = (options) => {
  function isRef(value) {
    return {}.hasOwnProperty.call(value, "current");
  }
  return {
    name: "arrow",
    options,
    fn(state) {
      const {
        element,
        padding
      } = typeof options === "function" ? options(state) : options;
      if (element && isRef(element)) {
        if (element.current != null) {
          return arrow2({
            element: element.current,
            padding
          }).fn(state);
        }
        return {};
      }
      if (element) {
        return arrow2({
          element,
          padding
        }).fn(state);
      }
      return {};
    }
  };
};
var offset3 = (options, deps) => ({
  ...offset2(options),
  options: [options, deps]
});
var shift3 = (options, deps) => ({
  ...shift2(options),
  options: [options, deps]
});
var limitShift3 = (options, deps) => ({
  ...limitShift2(options),
  options: [options, deps]
});
var flip3 = (options, deps) => ({
  ...flip2(options),
  options: [options, deps]
});
var size3 = (options, deps) => ({
  ...size2(options),
  options: [options, deps]
});
var hide3 = (options, deps) => ({
  ...hide2(options),
  options: [options, deps]
});
var arrow3 = (options, deps) => ({
  ...arrow$1(options),
  options: [options, deps]
});

// ../../../node_modules/@radix-ui/react-arrow/dist/index.mjs
var React38 = __toESM(require_react(), 1);
var import_jsx_runtime15 = __toESM(require_jsx_runtime(), 1);
var NAME3 = "Arrow";
var Arrow = React38.forwardRef((props, forwardedRef) => {
  const { children, width = 10, height = 5, ...arrowProps } = props;
  return (0, import_jsx_runtime15.jsx)(
    Primitive.svg,
    {
      ...arrowProps,
      ref: forwardedRef,
      width,
      height,
      viewBox: "0 0 30 10",
      preserveAspectRatio: "none",
      children: props.asChild ? children : (0, import_jsx_runtime15.jsx)("polygon", { points: "0,0 30,0 15,10" })
    }
  );
});
Arrow.displayName = NAME3;
var Root6 = Arrow;

// ../../../node_modules/@radix-ui/react-popper/dist/index.mjs
var import_jsx_runtime16 = __toESM(require_jsx_runtime(), 1);
var POPPER_NAME = "Popper";
var [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);
var [PopperProvider, usePopperContext] = createPopperContext(POPPER_NAME);
var Popper = (props) => {
  const { __scopePopper, children } = props;
  const [anchor, setAnchor] = React39.useState(null);
  return (0, import_jsx_runtime16.jsx)(PopperProvider, { scope: __scopePopper, anchor, onAnchorChange: setAnchor, children });
};
Popper.displayName = POPPER_NAME;
var ANCHOR_NAME = "PopperAnchor";
var PopperAnchor = React39.forwardRef(
  (props, forwardedRef) => {
    const { __scopePopper, virtualRef, ...anchorProps } = props;
    const context = usePopperContext(ANCHOR_NAME, __scopePopper);
    const ref = React39.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, ref);
    React39.useEffect(() => {
      context.onAnchorChange((virtualRef == null ? void 0 : virtualRef.current) || ref.current);
    });
    return virtualRef ? null : (0, import_jsx_runtime16.jsx)(Primitive.div, { ...anchorProps, ref: composedRefs });
  }
);
PopperAnchor.displayName = ANCHOR_NAME;
var CONTENT_NAME3 = "PopperContent";
var [PopperContentProvider, useContentContext] = createPopperContext(CONTENT_NAME3);
var PopperContent = React39.forwardRef(
  (props, forwardedRef) => {
    var _a2, _b, _c, _d, _e, _f;
    const {
      __scopePopper,
      side = "bottom",
      sideOffset = 0,
      align = "center",
      alignOffset = 0,
      arrowPadding = 0,
      avoidCollisions = true,
      collisionBoundary = [],
      collisionPadding: collisionPaddingProp = 0,
      sticky = "partial",
      hideWhenDetached = false,
      updatePositionStrategy = "optimized",
      onPlaced,
      ...contentProps
    } = props;
    const context = usePopperContext(CONTENT_NAME3, __scopePopper);
    const [content, setContent] = React39.useState(null);
    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));
    const [arrow4, setArrow] = React39.useState(null);
    const arrowSize = useSize(arrow4);
    const arrowWidth = (arrowSize == null ? void 0 : arrowSize.width) ?? 0;
    const arrowHeight = (arrowSize == null ? void 0 : arrowSize.height) ?? 0;
    const desiredPlacement = side + (align !== "center" ? "-" + align : "");
    const collisionPadding = typeof collisionPaddingProp === "number" ? collisionPaddingProp : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };
    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];
    const hasExplicitBoundaries = boundary.length > 0;
    const detectOverflowOptions = {
      padding: collisionPadding,
      boundary: boundary.filter(isNotNull),
      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries
      altBoundary: hasExplicitBoundaries
    };
    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({
      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues
      strategy: "fixed",
      placement: desiredPlacement,
      whileElementsMounted: (...args) => {
        const cleanup = autoUpdate(...args, {
          animationFrame: updatePositionStrategy === "always"
        });
        return cleanup;
      },
      elements: {
        reference: context.anchor
      },
      middleware: [
        offset3({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),
        avoidCollisions && shift3({
          mainAxis: true,
          crossAxis: false,
          limiter: sticky === "partial" ? limitShift3() : void 0,
          ...detectOverflowOptions
        }),
        avoidCollisions && flip3({ ...detectOverflowOptions }),
        size3({
          ...detectOverflowOptions,
          apply: ({ elements, rects, availableWidth, availableHeight }) => {
            const { width: anchorWidth, height: anchorHeight } = rects.reference;
            const contentStyle = elements.floating.style;
            contentStyle.setProperty("--radix-popper-available-width", `${availableWidth}px`);
            contentStyle.setProperty("--radix-popper-available-height", `${availableHeight}px`);
            contentStyle.setProperty("--radix-popper-anchor-width", `${anchorWidth}px`);
            contentStyle.setProperty("--radix-popper-anchor-height", `${anchorHeight}px`);
          }
        }),
        arrow4 && arrow3({ element: arrow4, padding: arrowPadding }),
        transformOrigin({ arrowWidth, arrowHeight }),
        hideWhenDetached && hide3({ strategy: "referenceHidden", ...detectOverflowOptions })
      ]
    });
    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);
    const handlePlaced = useCallbackRef(onPlaced);
    useLayoutEffect2(() => {
      if (isPositioned) {
        handlePlaced == null ? void 0 : handlePlaced();
      }
    }, [isPositioned, handlePlaced]);
    const arrowX = (_a2 = middlewareData.arrow) == null ? void 0 : _a2.x;
    const arrowY = (_b = middlewareData.arrow) == null ? void 0 : _b.y;
    const cannotCenterArrow = ((_c = middlewareData.arrow) == null ? void 0 : _c.centerOffset) !== 0;
    const [contentZIndex, setContentZIndex] = React39.useState();
    useLayoutEffect2(() => {
      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);
    }, [content]);
    return (0, import_jsx_runtime16.jsx)(
      "div",
      {
        ref: refs.setFloating,
        "data-radix-popper-content-wrapper": "",
        style: {
          ...floatingStyles,
          transform: isPositioned ? floatingStyles.transform : "translate(0, -200%)",
          // keep off the page when measuring
          minWidth: "max-content",
          zIndex: contentZIndex,
          ["--radix-popper-transform-origin"]: [
            (_d = middlewareData.transformOrigin) == null ? void 0 : _d.x,
            (_e = middlewareData.transformOrigin) == null ? void 0 : _e.y
          ].join(" "),
          // hide the content if using the hide middleware and should be hidden
          // set visibility to hidden and disable pointer events so the UI behaves
          // as if the PopperContent isn't there at all
          ...((_f = middlewareData.hide) == null ? void 0 : _f.referenceHidden) && {
            visibility: "hidden",
            pointerEvents: "none"
          }
        },
        dir: props.dir,
        children: (0, import_jsx_runtime16.jsx)(
          PopperContentProvider,
          {
            scope: __scopePopper,
            placedSide,
            onArrowChange: setArrow,
            arrowX,
            arrowY,
            shouldHideArrow: cannotCenterArrow,
            children: (0, import_jsx_runtime16.jsx)(
              Primitive.div,
              {
                "data-side": placedSide,
                "data-align": placedAlign,
                ...contentProps,
                ref: composedRefs,
                style: {
                  ...contentProps.style,
                  // if the PopperContent hasn't been placed yet (not all measurements done)
                  // we prevent animations so that users's animation don't kick in too early referring wrong sides
                  animation: !isPositioned ? "none" : void 0
                }
              }
            )
          }
        )
      }
    );
  }
);
PopperContent.displayName = CONTENT_NAME3;
var ARROW_NAME = "PopperArrow";
var OPPOSITE_SIDE = {
  top: "bottom",
  right: "left",
  bottom: "top",
  left: "right"
};
var PopperArrow = React39.forwardRef(function PopperArrow2(props, forwardedRef) {
  const { __scopePopper, ...arrowProps } = props;
  const contentContext = useContentContext(ARROW_NAME, __scopePopper);
  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];
  return (
    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)
    // doesn't report size as we'd expect on SVG elements.
    // it reports their bounding box which is effectively the largest path inside the SVG.
    (0, import_jsx_runtime16.jsx)(
      "span",
      {
        ref: contentContext.onArrowChange,
        style: {
          position: "absolute",
          left: contentContext.arrowX,
          top: contentContext.arrowY,
          [baseSide]: 0,
          transformOrigin: {
            top: "",
            right: "0 0",
            bottom: "center 0",
            left: "100% 0"
          }[contentContext.placedSide],
          transform: {
            top: "translateY(100%)",
            right: "translateY(50%) rotate(90deg) translateX(-50%)",
            bottom: `rotate(180deg)`,
            left: "translateY(50%) rotate(-90deg) translateX(50%)"
          }[contentContext.placedSide],
          visibility: contentContext.shouldHideArrow ? "hidden" : void 0
        },
        children: (0, import_jsx_runtime16.jsx)(
          Root6,
          {
            ...arrowProps,
            ref: forwardedRef,
            style: {
              ...arrowProps.style,
              // ensures the element can be measured correctly (mostly for if SVG)
              display: "block"
            }
          }
        )
      }
    )
  );
});
PopperArrow.displayName = ARROW_NAME;
function isNotNull(value) {
  return value !== null;
}
var transformOrigin = (options) => ({
  name: "transformOrigin",
  options,
  fn(data) {
    var _a2, _b, _c;
    const { placement, rects, middlewareData } = data;
    const cannotCenterArrow = ((_a2 = middlewareData.arrow) == null ? void 0 : _a2.centerOffset) !== 0;
    const isArrowHidden = cannotCenterArrow;
    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;
    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;
    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);
    const noArrowAlign = { start: "0%", center: "50%", end: "100%" }[placedAlign];
    const arrowXCenter = (((_b = middlewareData.arrow) == null ? void 0 : _b.x) ?? 0) + arrowWidth / 2;
    const arrowYCenter = (((_c = middlewareData.arrow) == null ? void 0 : _c.y) ?? 0) + arrowHeight / 2;
    let x = "";
    let y = "";
    if (placedSide === "bottom") {
      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;
      y = `${-arrowHeight}px`;
    } else if (placedSide === "top") {
      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;
      y = `${rects.floating.height + arrowHeight}px`;
    } else if (placedSide === "right") {
      x = `${-arrowHeight}px`;
      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;
    } else if (placedSide === "left") {
      x = `${rects.floating.width + arrowHeight}px`;
      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;
    }
    return { data: { x, y } };
  }
});
function getSideAndAlignFromPlacement(placement) {
  const [side, align = "center"] = placement.split("-");
  return [side, align];
}
var Root22 = Popper;
var Anchor = PopperAnchor;
var Content3 = PopperContent;
var Arrow2 = PopperArrow;

// ../../../node_modules/@radix-ui/react-roving-focus/dist/index.mjs
var React40 = __toESM(require_react(), 1);
var import_jsx_runtime17 = __toESM(require_jsx_runtime(), 1);
var ENTRY_FOCUS = "rovingFocusGroup.onEntryFocus";
var EVENT_OPTIONS2 = { bubbles: false, cancelable: true };
var GROUP_NAME = "RovingFocusGroup";
var [Collection, useCollection, createCollectionScope] = createCollection(GROUP_NAME);
var [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(
  GROUP_NAME,
  [createCollectionScope]
);
var [RovingFocusProvider, useRovingFocusContext] = createRovingFocusGroupContext(GROUP_NAME);
var RovingFocusGroup = React40.forwardRef(
  (props, forwardedRef) => {
    return (0, import_jsx_runtime17.jsx)(Collection.Provider, { scope: props.__scopeRovingFocusGroup, children: (0, import_jsx_runtime17.jsx)(Collection.Slot, { scope: props.__scopeRovingFocusGroup, children: (0, import_jsx_runtime17.jsx)(RovingFocusGroupImpl, { ...props, ref: forwardedRef }) }) });
  }
);
RovingFocusGroup.displayName = GROUP_NAME;
var RovingFocusGroupImpl = React40.forwardRef((props, forwardedRef) => {
  const {
    __scopeRovingFocusGroup,
    orientation,
    loop = false,
    dir,
    currentTabStopId: currentTabStopIdProp,
    defaultCurrentTabStopId,
    onCurrentTabStopIdChange,
    onEntryFocus,
    preventScrollOnEntryFocus = false,
    ...groupProps
  } = props;
  const ref = React40.useRef(null);
  const composedRefs = useComposedRefs(forwardedRef, ref);
  const direction = useDirection(dir);
  const [currentTabStopId, setCurrentTabStopId] = useControllableState({
    prop: currentTabStopIdProp,
    defaultProp: defaultCurrentTabStopId ?? null,
    onChange: onCurrentTabStopIdChange,
    caller: GROUP_NAME
  });
  const [isTabbingBackOut, setIsTabbingBackOut] = React40.useState(false);
  const handleEntryFocus = useCallbackRef(onEntryFocus);
  const getItems = useCollection(__scopeRovingFocusGroup);
  const isClickFocusRef = React40.useRef(false);
  const [focusableItemsCount, setFocusableItemsCount] = React40.useState(0);
  React40.useEffect(() => {
    const node = ref.current;
    if (node) {
      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);
      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);
    }
  }, [handleEntryFocus]);
  return (0, import_jsx_runtime17.jsx)(
    RovingFocusProvider,
    {
      scope: __scopeRovingFocusGroup,
      orientation,
      dir: direction,
      loop,
      currentTabStopId,
      onItemFocus: React40.useCallback(
        (tabStopId) => setCurrentTabStopId(tabStopId),
        [setCurrentTabStopId]
      ),
      onItemShiftTab: React40.useCallback(() => setIsTabbingBackOut(true), []),
      onFocusableItemAdd: React40.useCallback(
        () => setFocusableItemsCount((prevCount) => prevCount + 1),
        []
      ),
      onFocusableItemRemove: React40.useCallback(
        () => setFocusableItemsCount((prevCount) => prevCount - 1),
        []
      ),
      children: (0, import_jsx_runtime17.jsx)(
        Primitive.div,
        {
          tabIndex: isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0,
          "data-orientation": orientation,
          ...groupProps,
          ref: composedRefs,
          style: { outline: "none", ...props.style },
          onMouseDown: composeEventHandlers(props.onMouseDown, () => {
            isClickFocusRef.current = true;
          }),
          onFocus: composeEventHandlers(props.onFocus, (event) => {
            const isKeyboardFocus = !isClickFocusRef.current;
            if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {
              const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS2);
              event.currentTarget.dispatchEvent(entryFocusEvent);
              if (!entryFocusEvent.defaultPrevented) {
                const items = getItems().filter((item) => item.focusable);
                const activeItem = items.find((item) => item.active);
                const currentItem = items.find((item) => item.id === currentTabStopId);
                const candidateItems = [activeItem, currentItem, ...items].filter(
                  Boolean
                );
                const candidateNodes = candidateItems.map((item) => item.ref.current);
                focusFirst2(candidateNodes, preventScrollOnEntryFocus);
              }
            }
            isClickFocusRef.current = false;
          }),
          onBlur: composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))
        }
      )
    }
  );
});
var ITEM_NAME = "RovingFocusGroupItem";
var RovingFocusGroupItem = React40.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeRovingFocusGroup,
      focusable = true,
      active = false,
      tabStopId,
      children,
      ...itemProps
    } = props;
    const autoId = useId();
    const id = tabStopId || autoId;
    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);
    const isCurrentTabStop = context.currentTabStopId === id;
    const getItems = useCollection(__scopeRovingFocusGroup);
    const { onFocusableItemAdd, onFocusableItemRemove, currentTabStopId } = context;
    React40.useEffect(() => {
      if (focusable) {
        onFocusableItemAdd();
        return () => onFocusableItemRemove();
      }
    }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);
    return (0, import_jsx_runtime17.jsx)(
      Collection.ItemSlot,
      {
        scope: __scopeRovingFocusGroup,
        id,
        focusable,
        active,
        children: (0, import_jsx_runtime17.jsx)(
          Primitive.span,
          {
            tabIndex: isCurrentTabStop ? 0 : -1,
            "data-orientation": context.orientation,
            ...itemProps,
            ref: forwardedRef,
            onMouseDown: composeEventHandlers(props.onMouseDown, (event) => {
              if (!focusable) event.preventDefault();
              else context.onItemFocus(id);
            }),
            onFocus: composeEventHandlers(props.onFocus, () => context.onItemFocus(id)),
            onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
              if (event.key === "Tab" && event.shiftKey) {
                context.onItemShiftTab();
                return;
              }
              if (event.target !== event.currentTarget) return;
              const focusIntent = getFocusIntent(event, context.orientation, context.dir);
              if (focusIntent !== void 0) {
                if (event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) return;
                event.preventDefault();
                const items = getItems().filter((item) => item.focusable);
                let candidateNodes = items.map((item) => item.ref.current);
                if (focusIntent === "last") candidateNodes.reverse();
                else if (focusIntent === "prev" || focusIntent === "next") {
                  if (focusIntent === "prev") candidateNodes.reverse();
                  const currentIndex = candidateNodes.indexOf(event.currentTarget);
                  candidateNodes = context.loop ? wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);
                }
                setTimeout(() => focusFirst2(candidateNodes));
              }
            }),
            children: typeof children === "function" ? children({ isCurrentTabStop, hasTabStop: currentTabStopId != null }) : children
          }
        )
      }
    );
  }
);
RovingFocusGroupItem.displayName = ITEM_NAME;
var MAP_KEY_TO_FOCUS_INTENT = {
  ArrowLeft: "prev",
  ArrowUp: "prev",
  ArrowRight: "next",
  ArrowDown: "next",
  PageUp: "first",
  Home: "first",
  PageDown: "last",
  End: "last"
};
function getDirectionAwareKey(key, dir) {
  if (dir !== "rtl") return key;
  return key === "ArrowLeft" ? "ArrowRight" : key === "ArrowRight" ? "ArrowLeft" : key;
}
function getFocusIntent(event, orientation, dir) {
  const key = getDirectionAwareKey(event.key, dir);
  if (orientation === "vertical" && ["ArrowLeft", "ArrowRight"].includes(key)) return void 0;
  if (orientation === "horizontal" && ["ArrowUp", "ArrowDown"].includes(key)) return void 0;
  return MAP_KEY_TO_FOCUS_INTENT[key];
}
function focusFirst2(candidates, preventScroll = false) {
  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
  for (const candidate of candidates) {
    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;
    candidate.focus({ preventScroll });
    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;
  }
}
function wrapArray(array, startIndex) {
  return array.map((_2, index2) => array[(startIndex + index2) % array.length]);
}
var Root7 = RovingFocusGroup;
var Item = RovingFocusGroupItem;

// ../../../node_modules/@radix-ui/react-menu/dist/index.mjs
var import_jsx_runtime18 = __toESM(require_jsx_runtime(), 1);
var SELECTION_KEYS = ["Enter", " "];
var FIRST_KEYS = ["ArrowDown", "PageUp", "Home"];
var LAST_KEYS = ["ArrowUp", "PageDown", "End"];
var FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];
var SUB_OPEN_KEYS = {
  ltr: [...SELECTION_KEYS, "ArrowRight"],
  rtl: [...SELECTION_KEYS, "ArrowLeft"]
};
var SUB_CLOSE_KEYS = {
  ltr: ["ArrowLeft"],
  rtl: ["ArrowRight"]
};
var MENU_NAME = "Menu";
var [Collection2, useCollection2, createCollectionScope2] = createCollection(MENU_NAME);
var [createMenuContext, createMenuScope] = createContextScope(MENU_NAME, [
  createCollectionScope2,
  createPopperScope,
  createRovingFocusGroupScope
]);
var usePopperScope = createPopperScope();
var useRovingFocusGroupScope = createRovingFocusGroupScope();
var [MenuProvider, useMenuContext] = createMenuContext(MENU_NAME);
var [MenuRootProvider, useMenuRootContext] = createMenuContext(MENU_NAME);
var Menu = (props) => {
  const { __scopeMenu, open = false, children, dir, onOpenChange, modal = true } = props;
  const popperScope = usePopperScope(__scopeMenu);
  const [content, setContent] = React41.useState(null);
  const isUsingKeyboardRef = React41.useRef(false);
  const handleOpenChange = useCallbackRef(onOpenChange);
  const direction = useDirection(dir);
  React41.useEffect(() => {
    const handleKeyDown = () => {
      isUsingKeyboardRef.current = true;
      document.addEventListener("pointerdown", handlePointer, { capture: true, once: true });
      document.addEventListener("pointermove", handlePointer, { capture: true, once: true });
    };
    const handlePointer = () => isUsingKeyboardRef.current = false;
    document.addEventListener("keydown", handleKeyDown, { capture: true });
    return () => {
      document.removeEventListener("keydown", handleKeyDown, { capture: true });
      document.removeEventListener("pointerdown", handlePointer, { capture: true });
      document.removeEventListener("pointermove", handlePointer, { capture: true });
    };
  }, []);
  return (0, import_jsx_runtime18.jsx)(Root22, { ...popperScope, children: (0, import_jsx_runtime18.jsx)(
    MenuProvider,
    {
      scope: __scopeMenu,
      open,
      onOpenChange: handleOpenChange,
      content,
      onContentChange: setContent,
      children: (0, import_jsx_runtime18.jsx)(
        MenuRootProvider,
        {
          scope: __scopeMenu,
          onClose: React41.useCallback(() => handleOpenChange(false), [handleOpenChange]),
          isUsingKeyboardRef,
          dir: direction,
          modal,
          children
        }
      )
    }
  ) });
};
Menu.displayName = MENU_NAME;
var ANCHOR_NAME2 = "MenuAnchor";
var MenuAnchor = React41.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenu, ...anchorProps } = props;
    const popperScope = usePopperScope(__scopeMenu);
    return (0, import_jsx_runtime18.jsx)(Anchor, { ...popperScope, ...anchorProps, ref: forwardedRef });
  }
);
MenuAnchor.displayName = ANCHOR_NAME2;
var PORTAL_NAME3 = "MenuPortal";
var [PortalProvider2, usePortalContext2] = createMenuContext(PORTAL_NAME3, {
  forceMount: void 0
});
var MenuPortal = (props) => {
  const { __scopeMenu, forceMount, children, container } = props;
  const context = useMenuContext(PORTAL_NAME3, __scopeMenu);
  return (0, import_jsx_runtime18.jsx)(PortalProvider2, { scope: __scopeMenu, forceMount, children: (0, import_jsx_runtime18.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime18.jsx)(Portal, { asChild: true, container, children }) }) });
};
MenuPortal.displayName = PORTAL_NAME3;
var CONTENT_NAME4 = "MenuContent";
var [MenuContentProvider, useMenuContentContext] = createMenuContext(CONTENT_NAME4);
var MenuContent = React41.forwardRef(
  (props, forwardedRef) => {
    const portalContext = usePortalContext2(CONTENT_NAME4, props.__scopeMenu);
    const { forceMount = portalContext.forceMount, ...contentProps } = props;
    const context = useMenuContext(CONTENT_NAME4, props.__scopeMenu);
    const rootContext = useMenuRootContext(CONTENT_NAME4, props.__scopeMenu);
    return (0, import_jsx_runtime18.jsx)(Collection2.Provider, { scope: props.__scopeMenu, children: (0, import_jsx_runtime18.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime18.jsx)(Collection2.Slot, { scope: props.__scopeMenu, children: rootContext.modal ? (0, import_jsx_runtime18.jsx)(MenuRootContentModal, { ...contentProps, ref: forwardedRef }) : (0, import_jsx_runtime18.jsx)(MenuRootContentNonModal, { ...contentProps, ref: forwardedRef }) }) }) });
  }
);
var MenuRootContentModal = React41.forwardRef(
  (props, forwardedRef) => {
    const context = useMenuContext(CONTENT_NAME4, props.__scopeMenu);
    const ref = React41.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, ref);
    React41.useEffect(() => {
      const content = ref.current;
      if (content) return hideOthers(content);
    }, []);
    return (0, import_jsx_runtime18.jsx)(
      MenuContentImpl,
      {
        ...props,
        ref: composedRefs,
        trapFocus: context.open,
        disableOutsidePointerEvents: context.open,
        disableOutsideScroll: true,
        onFocusOutside: composeEventHandlers(
          props.onFocusOutside,
          (event) => event.preventDefault(),
          { checkForDefaultPrevented: false }
        ),
        onDismiss: () => context.onOpenChange(false)
      }
    );
  }
);
var MenuRootContentNonModal = React41.forwardRef((props, forwardedRef) => {
  const context = useMenuContext(CONTENT_NAME4, props.__scopeMenu);
  return (0, import_jsx_runtime18.jsx)(
    MenuContentImpl,
    {
      ...props,
      ref: forwardedRef,
      trapFocus: false,
      disableOutsidePointerEvents: false,
      disableOutsideScroll: false,
      onDismiss: () => context.onOpenChange(false)
    }
  );
});
var Slot3 = createSlot("MenuContent.ScrollLock");
var MenuContentImpl = React41.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeMenu,
      loop = false,
      trapFocus,
      onOpenAutoFocus,
      onCloseAutoFocus,
      disableOutsidePointerEvents,
      onEntryFocus,
      onEscapeKeyDown,
      onPointerDownOutside,
      onFocusOutside,
      onInteractOutside,
      onDismiss,
      disableOutsideScroll,
      ...contentProps
    } = props;
    const context = useMenuContext(CONTENT_NAME4, __scopeMenu);
    const rootContext = useMenuRootContext(CONTENT_NAME4, __scopeMenu);
    const popperScope = usePopperScope(__scopeMenu);
    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);
    const getItems = useCollection2(__scopeMenu);
    const [currentItemId, setCurrentItemId] = React41.useState(null);
    const contentRef = React41.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, contentRef, context.onContentChange);
    const timerRef = React41.useRef(0);
    const searchRef = React41.useRef("");
    const pointerGraceTimerRef = React41.useRef(0);
    const pointerGraceIntentRef = React41.useRef(null);
    const pointerDirRef = React41.useRef("right");
    const lastPointerXRef = React41.useRef(0);
    const ScrollLockWrapper = disableOutsideScroll ? Combination_default : React41.Fragment;
    const scrollLockWrapperProps = disableOutsideScroll ? { as: Slot3, allowPinchZoom: true } : void 0;
    const handleTypeaheadSearch = (key) => {
      var _a2, _b;
      const search = searchRef.current + key;
      const items = getItems().filter((item) => !item.disabled);
      const currentItem = document.activeElement;
      const currentMatch = (_a2 = items.find((item) => item.ref.current === currentItem)) == null ? void 0 : _a2.textValue;
      const values = items.map((item) => item.textValue);
      const nextMatch = getNextMatch(values, search, currentMatch);
      const newItem = (_b = items.find((item) => item.textValue === nextMatch)) == null ? void 0 : _b.ref.current;
      (function updateSearch(value) {
        searchRef.current = value;
        window.clearTimeout(timerRef.current);
        if (value !== "") timerRef.current = window.setTimeout(() => updateSearch(""), 1e3);
      })(search);
      if (newItem) {
        setTimeout(() => newItem.focus());
      }
    };
    React41.useEffect(() => {
      return () => window.clearTimeout(timerRef.current);
    }, []);
    useFocusGuards();
    const isPointerMovingToSubmenu = React41.useCallback((event) => {
      var _a2, _b;
      const isMovingTowards = pointerDirRef.current === ((_a2 = pointerGraceIntentRef.current) == null ? void 0 : _a2.side);
      return isMovingTowards && isPointerInGraceArea(event, (_b = pointerGraceIntentRef.current) == null ? void 0 : _b.area);
    }, []);
    return (0, import_jsx_runtime18.jsx)(
      MenuContentProvider,
      {
        scope: __scopeMenu,
        searchRef,
        onItemEnter: React41.useCallback(
          (event) => {
            if (isPointerMovingToSubmenu(event)) event.preventDefault();
          },
          [isPointerMovingToSubmenu]
        ),
        onItemLeave: React41.useCallback(
          (event) => {
            var _a2;
            if (isPointerMovingToSubmenu(event)) return;
            (_a2 = contentRef.current) == null ? void 0 : _a2.focus();
            setCurrentItemId(null);
          },
          [isPointerMovingToSubmenu]
        ),
        onTriggerLeave: React41.useCallback(
          (event) => {
            if (isPointerMovingToSubmenu(event)) event.preventDefault();
          },
          [isPointerMovingToSubmenu]
        ),
        pointerGraceTimerRef,
        onPointerGraceIntentChange: React41.useCallback((intent) => {
          pointerGraceIntentRef.current = intent;
        }, []),
        children: (0, import_jsx_runtime18.jsx)(ScrollLockWrapper, { ...scrollLockWrapperProps, children: (0, import_jsx_runtime18.jsx)(
          FocusScope,
          {
            asChild: true,
            trapped: trapFocus,
            onMountAutoFocus: composeEventHandlers(onOpenAutoFocus, (event) => {
              var _a2;
              event.preventDefault();
              (_a2 = contentRef.current) == null ? void 0 : _a2.focus({ preventScroll: true });
            }),
            onUnmountAutoFocus: onCloseAutoFocus,
            children: (0, import_jsx_runtime18.jsx)(
              DismissableLayer,
              {
                asChild: true,
                disableOutsidePointerEvents,
                onEscapeKeyDown,
                onPointerDownOutside,
                onFocusOutside,
                onInteractOutside,
                onDismiss,
                children: (0, import_jsx_runtime18.jsx)(
                  Root7,
                  {
                    asChild: true,
                    ...rovingFocusGroupScope,
                    dir: rootContext.dir,
                    orientation: "vertical",
                    loop,
                    currentTabStopId: currentItemId,
                    onCurrentTabStopIdChange: setCurrentItemId,
                    onEntryFocus: composeEventHandlers(onEntryFocus, (event) => {
                      if (!rootContext.isUsingKeyboardRef.current) event.preventDefault();
                    }),
                    preventScrollOnEntryFocus: true,
                    children: (0, import_jsx_runtime18.jsx)(
                      Content3,
                      {
                        role: "menu",
                        "aria-orientation": "vertical",
                        "data-state": getOpenState(context.open),
                        "data-radix-menu-content": "",
                        dir: rootContext.dir,
                        ...popperScope,
                        ...contentProps,
                        ref: composedRefs,
                        style: { outline: "none", ...contentProps.style },
                        onKeyDown: composeEventHandlers(contentProps.onKeyDown, (event) => {
                          const target = event.target;
                          const isKeyDownInside = target.closest("[data-radix-menu-content]") === event.currentTarget;
                          const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
                          const isCharacterKey = event.key.length === 1;
                          if (isKeyDownInside) {
                            if (event.key === "Tab") event.preventDefault();
                            if (!isModifierKey && isCharacterKey) handleTypeaheadSearch(event.key);
                          }
                          const content = contentRef.current;
                          if (event.target !== content) return;
                          if (!FIRST_LAST_KEYS.includes(event.key)) return;
                          event.preventDefault();
                          const items = getItems().filter((item) => !item.disabled);
                          const candidateNodes = items.map((item) => item.ref.current);
                          if (LAST_KEYS.includes(event.key)) candidateNodes.reverse();
                          focusFirst3(candidateNodes);
                        }),
                        onBlur: composeEventHandlers(props.onBlur, (event) => {
                          if (!event.currentTarget.contains(event.target)) {
                            window.clearTimeout(timerRef.current);
                            searchRef.current = "";
                          }
                        }),
                        onPointerMove: composeEventHandlers(
                          props.onPointerMove,
                          whenMouse((event) => {
                            const target = event.target;
                            const pointerXHasChanged = lastPointerXRef.current !== event.clientX;
                            if (event.currentTarget.contains(target) && pointerXHasChanged) {
                              const newDir = event.clientX > lastPointerXRef.current ? "right" : "left";
                              pointerDirRef.current = newDir;
                              lastPointerXRef.current = event.clientX;
                            }
                          })
                        )
                      }
                    )
                  }
                )
              }
            )
          }
        ) })
      }
    );
  }
);
MenuContent.displayName = CONTENT_NAME4;
var GROUP_NAME2 = "MenuGroup";
var MenuGroup = React41.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenu, ...groupProps } = props;
    return (0, import_jsx_runtime18.jsx)(Primitive.div, { role: "group", ...groupProps, ref: forwardedRef });
  }
);
MenuGroup.displayName = GROUP_NAME2;
var LABEL_NAME = "MenuLabel";
var MenuLabel = React41.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenu, ...labelProps } = props;
    return (0, import_jsx_runtime18.jsx)(Primitive.div, { ...labelProps, ref: forwardedRef });
  }
);
MenuLabel.displayName = LABEL_NAME;
var ITEM_NAME2 = "MenuItem";
var ITEM_SELECT = "menu.itemSelect";
var MenuItem = React41.forwardRef(
  (props, forwardedRef) => {
    const { disabled = false, onSelect, ...itemProps } = props;
    const ref = React41.useRef(null);
    const rootContext = useMenuRootContext(ITEM_NAME2, props.__scopeMenu);
    const contentContext = useMenuContentContext(ITEM_NAME2, props.__scopeMenu);
    const composedRefs = useComposedRefs(forwardedRef, ref);
    const isPointerDownRef = React41.useRef(false);
    const handleSelect = () => {
      const menuItem = ref.current;
      if (!disabled && menuItem) {
        const itemSelectEvent = new CustomEvent(ITEM_SELECT, { bubbles: true, cancelable: true });
        menuItem.addEventListener(ITEM_SELECT, (event) => onSelect == null ? void 0 : onSelect(event), { once: true });
        dispatchDiscreteCustomEvent(menuItem, itemSelectEvent);
        if (itemSelectEvent.defaultPrevented) {
          isPointerDownRef.current = false;
        } else {
          rootContext.onClose();
        }
      }
    };
    return (0, import_jsx_runtime18.jsx)(
      MenuItemImpl,
      {
        ...itemProps,
        ref: composedRefs,
        disabled,
        onClick: composeEventHandlers(props.onClick, handleSelect),
        onPointerDown: (event) => {
          var _a2;
          (_a2 = props.onPointerDown) == null ? void 0 : _a2.call(props, event);
          isPointerDownRef.current = true;
        },
        onPointerUp: composeEventHandlers(props.onPointerUp, (event) => {
          var _a2;
          if (!isPointerDownRef.current) (_a2 = event.currentTarget) == null ? void 0 : _a2.click();
        }),
        onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
          const isTypingAhead = contentContext.searchRef.current !== "";
          if (disabled || isTypingAhead && event.key === " ") return;
          if (SELECTION_KEYS.includes(event.key)) {
            event.currentTarget.click();
            event.preventDefault();
          }
        })
      }
    );
  }
);
MenuItem.displayName = ITEM_NAME2;
var MenuItemImpl = React41.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenu, disabled = false, textValue, ...itemProps } = props;
    const contentContext = useMenuContentContext(ITEM_NAME2, __scopeMenu);
    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);
    const ref = React41.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, ref);
    const [isFocused, setIsFocused] = React41.useState(false);
    const [textContent, setTextContent] = React41.useState("");
    React41.useEffect(() => {
      const menuItem = ref.current;
      if (menuItem) {
        setTextContent((menuItem.textContent ?? "").trim());
      }
    }, [itemProps.children]);
    return (0, import_jsx_runtime18.jsx)(
      Collection2.ItemSlot,
      {
        scope: __scopeMenu,
        disabled,
        textValue: textValue ?? textContent,
        children: (0, import_jsx_runtime18.jsx)(Item, { asChild: true, ...rovingFocusGroupScope, focusable: !disabled, children: (0, import_jsx_runtime18.jsx)(
          Primitive.div,
          {
            role: "menuitem",
            "data-highlighted": isFocused ? "" : void 0,
            "aria-disabled": disabled || void 0,
            "data-disabled": disabled ? "" : void 0,
            ...itemProps,
            ref: composedRefs,
            onPointerMove: composeEventHandlers(
              props.onPointerMove,
              whenMouse((event) => {
                if (disabled) {
                  contentContext.onItemLeave(event);
                } else {
                  contentContext.onItemEnter(event);
                  if (!event.defaultPrevented) {
                    const item = event.currentTarget;
                    item.focus({ preventScroll: true });
                  }
                }
              })
            ),
            onPointerLeave: composeEventHandlers(
              props.onPointerLeave,
              whenMouse((event) => contentContext.onItemLeave(event))
            ),
            onFocus: composeEventHandlers(props.onFocus, () => setIsFocused(true)),
            onBlur: composeEventHandlers(props.onBlur, () => setIsFocused(false))
          }
        ) })
      }
    );
  }
);
var CHECKBOX_ITEM_NAME = "MenuCheckboxItem";
var MenuCheckboxItem = React41.forwardRef(
  (props, forwardedRef) => {
    const { checked = false, onCheckedChange, ...checkboxItemProps } = props;
    return (0, import_jsx_runtime18.jsx)(ItemIndicatorProvider, { scope: props.__scopeMenu, checked, children: (0, import_jsx_runtime18.jsx)(
      MenuItem,
      {
        role: "menuitemcheckbox",
        "aria-checked": isIndeterminate2(checked) ? "mixed" : checked,
        ...checkboxItemProps,
        ref: forwardedRef,
        "data-state": getCheckedState(checked),
        onSelect: composeEventHandlers(
          checkboxItemProps.onSelect,
          () => onCheckedChange == null ? void 0 : onCheckedChange(isIndeterminate2(checked) ? true : !checked),
          { checkForDefaultPrevented: false }
        )
      }
    ) });
  }
);
MenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;
var RADIO_GROUP_NAME = "MenuRadioGroup";
var [RadioGroupProvider, useRadioGroupContext] = createMenuContext(
  RADIO_GROUP_NAME,
  { value: void 0, onValueChange: () => {
  } }
);
var MenuRadioGroup = React41.forwardRef(
  (props, forwardedRef) => {
    const { value, onValueChange, ...groupProps } = props;
    const handleValueChange = useCallbackRef(onValueChange);
    return (0, import_jsx_runtime18.jsx)(RadioGroupProvider, { scope: props.__scopeMenu, value, onValueChange: handleValueChange, children: (0, import_jsx_runtime18.jsx)(MenuGroup, { ...groupProps, ref: forwardedRef }) });
  }
);
MenuRadioGroup.displayName = RADIO_GROUP_NAME;
var RADIO_ITEM_NAME = "MenuRadioItem";
var MenuRadioItem = React41.forwardRef(
  (props, forwardedRef) => {
    const { value, ...radioItemProps } = props;
    const context = useRadioGroupContext(RADIO_ITEM_NAME, props.__scopeMenu);
    const checked = value === context.value;
    return (0, import_jsx_runtime18.jsx)(ItemIndicatorProvider, { scope: props.__scopeMenu, checked, children: (0, import_jsx_runtime18.jsx)(
      MenuItem,
      {
        role: "menuitemradio",
        "aria-checked": checked,
        ...radioItemProps,
        ref: forwardedRef,
        "data-state": getCheckedState(checked),
        onSelect: composeEventHandlers(
          radioItemProps.onSelect,
          () => {
            var _a2;
            return (_a2 = context.onValueChange) == null ? void 0 : _a2.call(context, value);
          },
          { checkForDefaultPrevented: false }
        )
      }
    ) });
  }
);
MenuRadioItem.displayName = RADIO_ITEM_NAME;
var ITEM_INDICATOR_NAME = "MenuItemIndicator";
var [ItemIndicatorProvider, useItemIndicatorContext] = createMenuContext(
  ITEM_INDICATOR_NAME,
  { checked: false }
);
var MenuItemIndicator = React41.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenu, forceMount, ...itemIndicatorProps } = props;
    const indicatorContext = useItemIndicatorContext(ITEM_INDICATOR_NAME, __scopeMenu);
    return (0, import_jsx_runtime18.jsx)(
      Presence,
      {
        present: forceMount || isIndeterminate2(indicatorContext.checked) || indicatorContext.checked === true,
        children: (0, import_jsx_runtime18.jsx)(
          Primitive.span,
          {
            ...itemIndicatorProps,
            ref: forwardedRef,
            "data-state": getCheckedState(indicatorContext.checked)
          }
        )
      }
    );
  }
);
MenuItemIndicator.displayName = ITEM_INDICATOR_NAME;
var SEPARATOR_NAME = "MenuSeparator";
var MenuSeparator = React41.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenu, ...separatorProps } = props;
    return (0, import_jsx_runtime18.jsx)(
      Primitive.div,
      {
        role: "separator",
        "aria-orientation": "horizontal",
        ...separatorProps,
        ref: forwardedRef
      }
    );
  }
);
MenuSeparator.displayName = SEPARATOR_NAME;
var ARROW_NAME2 = "MenuArrow";
var MenuArrow = React41.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenu, ...arrowProps } = props;
    const popperScope = usePopperScope(__scopeMenu);
    return (0, import_jsx_runtime18.jsx)(Arrow2, { ...popperScope, ...arrowProps, ref: forwardedRef });
  }
);
MenuArrow.displayName = ARROW_NAME2;
var SUB_NAME = "MenuSub";
var [MenuSubProvider, useMenuSubContext] = createMenuContext(SUB_NAME);
var MenuSub = (props) => {
  const { __scopeMenu, children, open = false, onOpenChange } = props;
  const parentMenuContext = useMenuContext(SUB_NAME, __scopeMenu);
  const popperScope = usePopperScope(__scopeMenu);
  const [trigger, setTrigger] = React41.useState(null);
  const [content, setContent] = React41.useState(null);
  const handleOpenChange = useCallbackRef(onOpenChange);
  React41.useEffect(() => {
    if (parentMenuContext.open === false) handleOpenChange(false);
    return () => handleOpenChange(false);
  }, [parentMenuContext.open, handleOpenChange]);
  return (0, import_jsx_runtime18.jsx)(Root22, { ...popperScope, children: (0, import_jsx_runtime18.jsx)(
    MenuProvider,
    {
      scope: __scopeMenu,
      open,
      onOpenChange: handleOpenChange,
      content,
      onContentChange: setContent,
      children: (0, import_jsx_runtime18.jsx)(
        MenuSubProvider,
        {
          scope: __scopeMenu,
          contentId: useId(),
          triggerId: useId(),
          trigger,
          onTriggerChange: setTrigger,
          children
        }
      )
    }
  ) });
};
MenuSub.displayName = SUB_NAME;
var SUB_TRIGGER_NAME = "MenuSubTrigger";
var MenuSubTrigger = React41.forwardRef(
  (props, forwardedRef) => {
    const context = useMenuContext(SUB_TRIGGER_NAME, props.__scopeMenu);
    const rootContext = useMenuRootContext(SUB_TRIGGER_NAME, props.__scopeMenu);
    const subContext = useMenuSubContext(SUB_TRIGGER_NAME, props.__scopeMenu);
    const contentContext = useMenuContentContext(SUB_TRIGGER_NAME, props.__scopeMenu);
    const openTimerRef = React41.useRef(null);
    const { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext;
    const scope = { __scopeMenu: props.__scopeMenu };
    const clearOpenTimer = React41.useCallback(() => {
      if (openTimerRef.current) window.clearTimeout(openTimerRef.current);
      openTimerRef.current = null;
    }, []);
    React41.useEffect(() => clearOpenTimer, [clearOpenTimer]);
    React41.useEffect(() => {
      const pointerGraceTimer = pointerGraceTimerRef.current;
      return () => {
        window.clearTimeout(pointerGraceTimer);
        onPointerGraceIntentChange(null);
      };
    }, [pointerGraceTimerRef, onPointerGraceIntentChange]);
    return (0, import_jsx_runtime18.jsx)(MenuAnchor, { asChild: true, ...scope, children: (0, import_jsx_runtime18.jsx)(
      MenuItemImpl,
      {
        id: subContext.triggerId,
        "aria-haspopup": "menu",
        "aria-expanded": context.open,
        "aria-controls": subContext.contentId,
        "data-state": getOpenState(context.open),
        ...props,
        ref: composeRefs(forwardedRef, subContext.onTriggerChange),
        onClick: (event) => {
          var _a2;
          (_a2 = props.onClick) == null ? void 0 : _a2.call(props, event);
          if (props.disabled || event.defaultPrevented) return;
          event.currentTarget.focus();
          if (!context.open) context.onOpenChange(true);
        },
        onPointerMove: composeEventHandlers(
          props.onPointerMove,
          whenMouse((event) => {
            contentContext.onItemEnter(event);
            if (event.defaultPrevented) return;
            if (!props.disabled && !context.open && !openTimerRef.current) {
              contentContext.onPointerGraceIntentChange(null);
              openTimerRef.current = window.setTimeout(() => {
                context.onOpenChange(true);
                clearOpenTimer();
              }, 100);
            }
          })
        ),
        onPointerLeave: composeEventHandlers(
          props.onPointerLeave,
          whenMouse((event) => {
            var _a2, _b;
            clearOpenTimer();
            const contentRect = (_a2 = context.content) == null ? void 0 : _a2.getBoundingClientRect();
            if (contentRect) {
              const side = (_b = context.content) == null ? void 0 : _b.dataset.side;
              const rightSide = side === "right";
              const bleed = rightSide ? -5 : 5;
              const contentNearEdge = contentRect[rightSide ? "left" : "right"];
              const contentFarEdge = contentRect[rightSide ? "right" : "left"];
              contentContext.onPointerGraceIntentChange({
                area: [
                  // Apply a bleed on clientX to ensure that our exit point is
                  // consistently within polygon bounds
                  { x: event.clientX + bleed, y: event.clientY },
                  { x: contentNearEdge, y: contentRect.top },
                  { x: contentFarEdge, y: contentRect.top },
                  { x: contentFarEdge, y: contentRect.bottom },
                  { x: contentNearEdge, y: contentRect.bottom }
                ],
                side
              });
              window.clearTimeout(pointerGraceTimerRef.current);
              pointerGraceTimerRef.current = window.setTimeout(
                () => contentContext.onPointerGraceIntentChange(null),
                300
              );
            } else {
              contentContext.onTriggerLeave(event);
              if (event.defaultPrevented) return;
              contentContext.onPointerGraceIntentChange(null);
            }
          })
        ),
        onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
          var _a2;
          const isTypingAhead = contentContext.searchRef.current !== "";
          if (props.disabled || isTypingAhead && event.key === " ") return;
          if (SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {
            context.onOpenChange(true);
            (_a2 = context.content) == null ? void 0 : _a2.focus();
            event.preventDefault();
          }
        })
      }
    ) });
  }
);
MenuSubTrigger.displayName = SUB_TRIGGER_NAME;
var SUB_CONTENT_NAME = "MenuSubContent";
var MenuSubContent = React41.forwardRef(
  (props, forwardedRef) => {
    const portalContext = usePortalContext2(CONTENT_NAME4, props.__scopeMenu);
    const { forceMount = portalContext.forceMount, ...subContentProps } = props;
    const context = useMenuContext(CONTENT_NAME4, props.__scopeMenu);
    const rootContext = useMenuRootContext(CONTENT_NAME4, props.__scopeMenu);
    const subContext = useMenuSubContext(SUB_CONTENT_NAME, props.__scopeMenu);
    const ref = React41.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, ref);
    return (0, import_jsx_runtime18.jsx)(Collection2.Provider, { scope: props.__scopeMenu, children: (0, import_jsx_runtime18.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime18.jsx)(Collection2.Slot, { scope: props.__scopeMenu, children: (0, import_jsx_runtime18.jsx)(
      MenuContentImpl,
      {
        id: subContext.contentId,
        "aria-labelledby": subContext.triggerId,
        ...subContentProps,
        ref: composedRefs,
        align: "start",
        side: rootContext.dir === "rtl" ? "left" : "right",
        disableOutsidePointerEvents: false,
        disableOutsideScroll: false,
        trapFocus: false,
        onOpenAutoFocus: (event) => {
          var _a2;
          if (rootContext.isUsingKeyboardRef.current) (_a2 = ref.current) == null ? void 0 : _a2.focus();
          event.preventDefault();
        },
        onCloseAutoFocus: (event) => event.preventDefault(),
        onFocusOutside: composeEventHandlers(props.onFocusOutside, (event) => {
          if (event.target !== subContext.trigger) context.onOpenChange(false);
        }),
        onEscapeKeyDown: composeEventHandlers(props.onEscapeKeyDown, (event) => {
          rootContext.onClose();
          event.preventDefault();
        }),
        onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
          var _a2;
          const isKeyDownInside = event.currentTarget.contains(event.target);
          const isCloseKey = SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);
          if (isKeyDownInside && isCloseKey) {
            context.onOpenChange(false);
            (_a2 = subContext.trigger) == null ? void 0 : _a2.focus();
            event.preventDefault();
          }
        })
      }
    ) }) }) });
  }
);
MenuSubContent.displayName = SUB_CONTENT_NAME;
function getOpenState(open) {
  return open ? "open" : "closed";
}
function isIndeterminate2(checked) {
  return checked === "indeterminate";
}
function getCheckedState(checked) {
  return isIndeterminate2(checked) ? "indeterminate" : checked ? "checked" : "unchecked";
}
function focusFirst3(candidates) {
  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
  for (const candidate of candidates) {
    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;
    candidate.focus();
    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;
  }
}
function wrapArray2(array, startIndex) {
  return array.map((_2, index2) => array[(startIndex + index2) % array.length]);
}
function getNextMatch(values, search, currentMatch) {
  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);
  const normalizedSearch = isRepeated ? search[0] : search;
  const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1;
  let wrappedValues = wrapArray2(values, Math.max(currentMatchIndex, 0));
  const excludeCurrentMatch = normalizedSearch.length === 1;
  if (excludeCurrentMatch) wrappedValues = wrappedValues.filter((v) => v !== currentMatch);
  const nextMatch = wrappedValues.find(
    (value) => value.toLowerCase().startsWith(normalizedSearch.toLowerCase())
  );
  return nextMatch !== currentMatch ? nextMatch : void 0;
}
function isPointInPolygon(point, polygon) {
  const { x, y } = point;
  let inside = false;
  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {
    const ii = polygon[i];
    const jj = polygon[j];
    const xi = ii.x;
    const yi = ii.y;
    const xj = jj.x;
    const yj = jj.y;
    const intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;
    if (intersect) inside = !inside;
  }
  return inside;
}
function isPointerInGraceArea(event, area) {
  if (!area) return false;
  const cursorPos = { x: event.clientX, y: event.clientY };
  return isPointInPolygon(cursorPos, area);
}
function whenMouse(handler) {
  return (event) => event.pointerType === "mouse" ? handler(event) : void 0;
}
var Root32 = Menu;
var Anchor2 = MenuAnchor;
var Portal3 = MenuPortal;
var Content22 = MenuContent;
var Group = MenuGroup;
var Label2 = MenuLabel;
var Item2 = MenuItem;
var CheckboxItem = MenuCheckboxItem;
var RadioGroup = MenuRadioGroup;
var RadioItem = MenuRadioItem;
var ItemIndicator = MenuItemIndicator;
var Separator = MenuSeparator;
var Arrow22 = MenuArrow;
var Sub = MenuSub;
var SubTrigger = MenuSubTrigger;
var SubContent = MenuSubContent;

// ../../../node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs
var import_jsx_runtime19 = __toESM(require_jsx_runtime(), 1);
var DROPDOWN_MENU_NAME = "DropdownMenu";
var [createDropdownMenuContext, createDropdownMenuScope] = createContextScope(
  DROPDOWN_MENU_NAME,
  [createMenuScope]
);
var useMenuScope = createMenuScope();
var [DropdownMenuProvider, useDropdownMenuContext] = createDropdownMenuContext(DROPDOWN_MENU_NAME);
var DropdownMenu = (props) => {
  const {
    __scopeDropdownMenu,
    children,
    dir,
    open: openProp,
    defaultOpen,
    onOpenChange,
    modal = true
  } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  const triggerRef = React42.useRef(null);
  const [open, setOpen] = useControllableState({
    prop: openProp,
    defaultProp: defaultOpen ?? false,
    onChange: onOpenChange,
    caller: DROPDOWN_MENU_NAME
  });
  return (0, import_jsx_runtime19.jsx)(
    DropdownMenuProvider,
    {
      scope: __scopeDropdownMenu,
      triggerId: useId(),
      triggerRef,
      contentId: useId(),
      open,
      onOpenChange: setOpen,
      onOpenToggle: React42.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),
      modal,
      children: (0, import_jsx_runtime19.jsx)(Root32, { ...menuScope, open, onOpenChange: setOpen, dir, modal, children })
    }
  );
};
DropdownMenu.displayName = DROPDOWN_MENU_NAME;
var TRIGGER_NAME4 = "DropdownMenuTrigger";
var DropdownMenuTrigger = React42.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;
    const context = useDropdownMenuContext(TRIGGER_NAME4, __scopeDropdownMenu);
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return (0, import_jsx_runtime19.jsx)(Anchor2, { asChild: true, ...menuScope, children: (0, import_jsx_runtime19.jsx)(
      Primitive.button,
      {
        type: "button",
        id: context.triggerId,
        "aria-haspopup": "menu",
        "aria-expanded": context.open,
        "aria-controls": context.open ? context.contentId : void 0,
        "data-state": context.open ? "open" : "closed",
        "data-disabled": disabled ? "" : void 0,
        disabled,
        ...triggerProps,
        ref: composeRefs(forwardedRef, context.triggerRef),
        onPointerDown: composeEventHandlers(props.onPointerDown, (event) => {
          if (!disabled && event.button === 0 && event.ctrlKey === false) {
            context.onOpenToggle();
            if (!context.open) event.preventDefault();
          }
        }),
        onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
          if (disabled) return;
          if (["Enter", " "].includes(event.key)) context.onOpenToggle();
          if (event.key === "ArrowDown") context.onOpenChange(true);
          if (["Enter", " ", "ArrowDown"].includes(event.key)) event.preventDefault();
        })
      }
    ) });
  }
);
DropdownMenuTrigger.displayName = TRIGGER_NAME4;
var PORTAL_NAME4 = "DropdownMenuPortal";
var DropdownMenuPortal = (props) => {
  const { __scopeDropdownMenu, ...portalProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime19.jsx)(Portal3, { ...menuScope, ...portalProps });
};
DropdownMenuPortal.displayName = PORTAL_NAME4;
var CONTENT_NAME5 = "DropdownMenuContent";
var DropdownMenuContent = React42.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDropdownMenu, ...contentProps } = props;
    const context = useDropdownMenuContext(CONTENT_NAME5, __scopeDropdownMenu);
    const menuScope = useMenuScope(__scopeDropdownMenu);
    const hasInteractedOutsideRef = React42.useRef(false);
    return (0, import_jsx_runtime19.jsx)(
      Content22,
      {
        id: context.contentId,
        "aria-labelledby": context.triggerId,
        ...menuScope,
        ...contentProps,
        ref: forwardedRef,
        onCloseAutoFocus: composeEventHandlers(props.onCloseAutoFocus, (event) => {
          var _a2;
          if (!hasInteractedOutsideRef.current) (_a2 = context.triggerRef.current) == null ? void 0 : _a2.focus();
          hasInteractedOutsideRef.current = false;
          event.preventDefault();
        }),
        onInteractOutside: composeEventHandlers(props.onInteractOutside, (event) => {
          const originalEvent = event.detail.originalEvent;
          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
          if (!context.modal || isRightClick) hasInteractedOutsideRef.current = true;
        }),
        style: {
          ...props.style,
          // re-namespace exposed content custom properties
          ...{
            "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
            "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
            "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
            "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
            "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
          }
        }
      }
    );
  }
);
DropdownMenuContent.displayName = CONTENT_NAME5;
var GROUP_NAME3 = "DropdownMenuGroup";
var DropdownMenuGroup = React42.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDropdownMenu, ...groupProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return (0, import_jsx_runtime19.jsx)(Group, { ...menuScope, ...groupProps, ref: forwardedRef });
  }
);
DropdownMenuGroup.displayName = GROUP_NAME3;
var LABEL_NAME2 = "DropdownMenuLabel";
var DropdownMenuLabel = React42.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDropdownMenu, ...labelProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return (0, import_jsx_runtime19.jsx)(Label2, { ...menuScope, ...labelProps, ref: forwardedRef });
  }
);
DropdownMenuLabel.displayName = LABEL_NAME2;
var ITEM_NAME3 = "DropdownMenuItem";
var DropdownMenuItem = React42.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDropdownMenu, ...itemProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return (0, import_jsx_runtime19.jsx)(Item2, { ...menuScope, ...itemProps, ref: forwardedRef });
  }
);
DropdownMenuItem.displayName = ITEM_NAME3;
var CHECKBOX_ITEM_NAME2 = "DropdownMenuCheckboxItem";
var DropdownMenuCheckboxItem = React42.forwardRef((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...checkboxItemProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime19.jsx)(CheckboxItem, { ...menuScope, ...checkboxItemProps, ref: forwardedRef });
});
DropdownMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME2;
var RADIO_GROUP_NAME2 = "DropdownMenuRadioGroup";
var DropdownMenuRadioGroup = React42.forwardRef((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...radioGroupProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime19.jsx)(RadioGroup, { ...menuScope, ...radioGroupProps, ref: forwardedRef });
});
DropdownMenuRadioGroup.displayName = RADIO_GROUP_NAME2;
var RADIO_ITEM_NAME2 = "DropdownMenuRadioItem";
var DropdownMenuRadioItem = React42.forwardRef((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...radioItemProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime19.jsx)(RadioItem, { ...menuScope, ...radioItemProps, ref: forwardedRef });
});
DropdownMenuRadioItem.displayName = RADIO_ITEM_NAME2;
var INDICATOR_NAME2 = "DropdownMenuItemIndicator";
var DropdownMenuItemIndicator = React42.forwardRef((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...itemIndicatorProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime19.jsx)(ItemIndicator, { ...menuScope, ...itemIndicatorProps, ref: forwardedRef });
});
DropdownMenuItemIndicator.displayName = INDICATOR_NAME2;
var SEPARATOR_NAME2 = "DropdownMenuSeparator";
var DropdownMenuSeparator = React42.forwardRef((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...separatorProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime19.jsx)(Separator, { ...menuScope, ...separatorProps, ref: forwardedRef });
});
DropdownMenuSeparator.displayName = SEPARATOR_NAME2;
var ARROW_NAME3 = "DropdownMenuArrow";
var DropdownMenuArrow = React42.forwardRef(
  (props, forwardedRef) => {
    const { __scopeDropdownMenu, ...arrowProps } = props;
    const menuScope = useMenuScope(__scopeDropdownMenu);
    return (0, import_jsx_runtime19.jsx)(Arrow22, { ...menuScope, ...arrowProps, ref: forwardedRef });
  }
);
DropdownMenuArrow.displayName = ARROW_NAME3;
var SUB_TRIGGER_NAME2 = "DropdownMenuSubTrigger";
var DropdownMenuSubTrigger = React42.forwardRef((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...subTriggerProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime19.jsx)(SubTrigger, { ...menuScope, ...subTriggerProps, ref: forwardedRef });
});
DropdownMenuSubTrigger.displayName = SUB_TRIGGER_NAME2;
var SUB_CONTENT_NAME2 = "DropdownMenuSubContent";
var DropdownMenuSubContent = React42.forwardRef((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...subContentProps } = props;
  const menuScope = useMenuScope(__scopeDropdownMenu);
  return (0, import_jsx_runtime19.jsx)(
    SubContent,
    {
      ...menuScope,
      ...subContentProps,
      ref: forwardedRef,
      style: {
        ...props.style,
        // re-namespace exposed content custom properties
        ...{
          "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
          "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
          "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
          "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
          "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
        }
      }
    }
  );
});
DropdownMenuSubContent.displayName = SUB_CONTENT_NAME2;
var Root23 = DropdownMenu;
var Trigger2 = DropdownMenuTrigger;
var Portal22 = DropdownMenuPortal;
var Content23 = DropdownMenuContent;
var Item22 = DropdownMenuItem;

// ../../../node_modules/@radix-ui/react-menubar/dist/index.mjs
var React43 = __toESM(require_react(), 1);
var import_jsx_runtime20 = __toESM(require_jsx_runtime(), 1);
var MENUBAR_NAME = "Menubar";
var [Collection3, useCollection3, createCollectionScope3] = createCollection(MENUBAR_NAME);
var [createMenubarContext, createMenubarScope] = createContextScope(MENUBAR_NAME, [
  createCollectionScope3,
  createRovingFocusGroupScope
]);
var useMenuScope2 = createMenuScope();
var useRovingFocusGroupScope2 = createRovingFocusGroupScope();
var [MenubarContextProvider, useMenubarContext] = createMenubarContext(MENUBAR_NAME);
var Menubar = React43.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeMenubar,
      value: valueProp,
      onValueChange,
      defaultValue,
      loop = true,
      dir,
      ...menubarProps
    } = props;
    const direction = useDirection(dir);
    const rovingFocusGroupScope = useRovingFocusGroupScope2(__scopeMenubar);
    const [value, setValue] = useControllableState({
      prop: valueProp,
      onChange: onValueChange,
      defaultProp: defaultValue ?? "",
      caller: MENUBAR_NAME
    });
    const [currentTabStopId, setCurrentTabStopId] = React43.useState(null);
    return (0, import_jsx_runtime20.jsx)(
      MenubarContextProvider,
      {
        scope: __scopeMenubar,
        value,
        onMenuOpen: React43.useCallback(
          (value2) => {
            setValue(value2);
            setCurrentTabStopId(value2);
          },
          [setValue]
        ),
        onMenuClose: React43.useCallback(() => setValue(""), [setValue]),
        onMenuToggle: React43.useCallback(
          (value2) => {
            setValue((prevValue) => prevValue ? "" : value2);
            setCurrentTabStopId(value2);
          },
          [setValue]
        ),
        dir: direction,
        loop,
        children: (0, import_jsx_runtime20.jsx)(Collection3.Provider, { scope: __scopeMenubar, children: (0, import_jsx_runtime20.jsx)(Collection3.Slot, { scope: __scopeMenubar, children: (0, import_jsx_runtime20.jsx)(
          Root7,
          {
            asChild: true,
            ...rovingFocusGroupScope,
            orientation: "horizontal",
            loop,
            dir: direction,
            currentTabStopId,
            onCurrentTabStopIdChange: setCurrentTabStopId,
            children: (0, import_jsx_runtime20.jsx)(Primitive.div, { role: "menubar", ...menubarProps, ref: forwardedRef })
          }
        ) }) })
      }
    );
  }
);
Menubar.displayName = MENUBAR_NAME;
var MENU_NAME2 = "MenubarMenu";
var [MenubarMenuProvider, useMenubarMenuContext] = createMenubarContext(MENU_NAME2);
var MenubarMenu = (props) => {
  const { __scopeMenubar, value: valueProp, ...menuProps } = props;
  const autoValue = useId();
  const value = valueProp || autoValue || "LEGACY_REACT_AUTO_VALUE";
  const context = useMenubarContext(MENU_NAME2, __scopeMenubar);
  const menuScope = useMenuScope2(__scopeMenubar);
  const triggerRef = React43.useRef(null);
  const wasKeyboardTriggerOpenRef = React43.useRef(false);
  const open = context.value === value;
  React43.useEffect(() => {
    if (!open) wasKeyboardTriggerOpenRef.current = false;
  }, [open]);
  return (0, import_jsx_runtime20.jsx)(
    MenubarMenuProvider,
    {
      scope: __scopeMenubar,
      value,
      triggerId: useId(),
      triggerRef,
      contentId: useId(),
      wasKeyboardTriggerOpenRef,
      children: (0, import_jsx_runtime20.jsx)(
        Root32,
        {
          ...menuScope,
          open,
          onOpenChange: (open2) => {
            if (!open2) context.onMenuClose();
          },
          modal: false,
          dir: context.dir,
          ...menuProps
        }
      )
    }
  );
};
MenubarMenu.displayName = MENU_NAME2;
var TRIGGER_NAME5 = "MenubarTrigger";
var MenubarTrigger = React43.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenubar, disabled = false, ...triggerProps } = props;
    const rovingFocusGroupScope = useRovingFocusGroupScope2(__scopeMenubar);
    const menuScope = useMenuScope2(__scopeMenubar);
    const context = useMenubarContext(TRIGGER_NAME5, __scopeMenubar);
    const menuContext = useMenubarMenuContext(TRIGGER_NAME5, __scopeMenubar);
    const ref = React43.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, ref, menuContext.triggerRef);
    const [isFocused, setIsFocused] = React43.useState(false);
    const open = context.value === menuContext.value;
    return (0, import_jsx_runtime20.jsx)(Collection3.ItemSlot, { scope: __scopeMenubar, value: menuContext.value, disabled, children: (0, import_jsx_runtime20.jsx)(
      Item,
      {
        asChild: true,
        ...rovingFocusGroupScope,
        focusable: !disabled,
        tabStopId: menuContext.value,
        children: (0, import_jsx_runtime20.jsx)(Anchor2, { asChild: true, ...menuScope, children: (0, import_jsx_runtime20.jsx)(
          Primitive.button,
          {
            type: "button",
            role: "menuitem",
            id: menuContext.triggerId,
            "aria-haspopup": "menu",
            "aria-expanded": open,
            "aria-controls": open ? menuContext.contentId : void 0,
            "data-highlighted": isFocused ? "" : void 0,
            "data-state": open ? "open" : "closed",
            "data-disabled": disabled ? "" : void 0,
            disabled,
            ...triggerProps,
            ref: composedRefs,
            onPointerDown: composeEventHandlers(props.onPointerDown, (event) => {
              if (!disabled && event.button === 0 && event.ctrlKey === false) {
                context.onMenuOpen(menuContext.value);
                if (!open) event.preventDefault();
              }
            }),
            onPointerEnter: composeEventHandlers(props.onPointerEnter, () => {
              var _a2;
              const menubarOpen = Boolean(context.value);
              if (menubarOpen && !open) {
                context.onMenuOpen(menuContext.value);
                (_a2 = ref.current) == null ? void 0 : _a2.focus();
              }
            }),
            onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
              if (disabled) return;
              if (["Enter", " "].includes(event.key)) context.onMenuToggle(menuContext.value);
              if (event.key === "ArrowDown") context.onMenuOpen(menuContext.value);
              if (["Enter", " ", "ArrowDown"].includes(event.key)) {
                menuContext.wasKeyboardTriggerOpenRef.current = true;
                event.preventDefault();
              }
            }),
            onFocus: composeEventHandlers(props.onFocus, () => setIsFocused(true)),
            onBlur: composeEventHandlers(props.onBlur, () => setIsFocused(false))
          }
        ) })
      }
    ) });
  }
);
MenubarTrigger.displayName = TRIGGER_NAME5;
var PORTAL_NAME5 = "MenubarPortal";
var MenubarPortal = (props) => {
  const { __scopeMenubar, ...portalProps } = props;
  const menuScope = useMenuScope2(__scopeMenubar);
  return (0, import_jsx_runtime20.jsx)(Portal3, { ...menuScope, ...portalProps });
};
MenubarPortal.displayName = PORTAL_NAME5;
var CONTENT_NAME6 = "MenubarContent";
var MenubarContent = React43.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenubar, align = "start", ...contentProps } = props;
    const menuScope = useMenuScope2(__scopeMenubar);
    const context = useMenubarContext(CONTENT_NAME6, __scopeMenubar);
    const menuContext = useMenubarMenuContext(CONTENT_NAME6, __scopeMenubar);
    const getItems = useCollection3(__scopeMenubar);
    const hasInteractedOutsideRef = React43.useRef(false);
    return (0, import_jsx_runtime20.jsx)(
      Content22,
      {
        id: menuContext.contentId,
        "aria-labelledby": menuContext.triggerId,
        "data-radix-menubar-content": "",
        ...menuScope,
        ...contentProps,
        ref: forwardedRef,
        align,
        onCloseAutoFocus: composeEventHandlers(props.onCloseAutoFocus, (event) => {
          var _a2;
          const menubarOpen = Boolean(context.value);
          if (!menubarOpen && !hasInteractedOutsideRef.current) {
            (_a2 = menuContext.triggerRef.current) == null ? void 0 : _a2.focus();
          }
          hasInteractedOutsideRef.current = false;
          event.preventDefault();
        }),
        onFocusOutside: composeEventHandlers(props.onFocusOutside, (event) => {
          const target = event.target;
          const isMenubarTrigger = getItems().some((item) => {
            var _a2;
            return (_a2 = item.ref.current) == null ? void 0 : _a2.contains(target);
          });
          if (isMenubarTrigger) event.preventDefault();
        }),
        onInteractOutside: composeEventHandlers(props.onInteractOutside, () => {
          hasInteractedOutsideRef.current = true;
        }),
        onEntryFocus: (event) => {
          if (!menuContext.wasKeyboardTriggerOpenRef.current) event.preventDefault();
        },
        onKeyDown: composeEventHandlers(
          props.onKeyDown,
          (event) => {
            if (["ArrowRight", "ArrowLeft"].includes(event.key)) {
              const target = event.target;
              const targetIsSubTrigger = target.hasAttribute("data-radix-menubar-subtrigger");
              const isKeyDownInsideSubMenu = target.closest("[data-radix-menubar-content]") !== event.currentTarget;
              const prevMenuKey = context.dir === "rtl" ? "ArrowRight" : "ArrowLeft";
              const isPrevKey = prevMenuKey === event.key;
              const isNextKey = !isPrevKey;
              if (isNextKey && targetIsSubTrigger) return;
              if (isKeyDownInsideSubMenu && isPrevKey) return;
              const items = getItems().filter((item) => !item.disabled);
              let candidateValues = items.map((item) => item.value);
              if (isPrevKey) candidateValues.reverse();
              const currentIndex = candidateValues.indexOf(menuContext.value);
              candidateValues = context.loop ? wrapArray3(candidateValues, currentIndex + 1) : candidateValues.slice(currentIndex + 1);
              const [nextValue] = candidateValues;
              if (nextValue) context.onMenuOpen(nextValue);
            }
          },
          { checkForDefaultPrevented: false }
        ),
        style: {
          ...props.style,
          // re-namespace exposed content custom properties
          ...{
            "--radix-menubar-content-transform-origin": "var(--radix-popper-transform-origin)",
            "--radix-menubar-content-available-width": "var(--radix-popper-available-width)",
            "--radix-menubar-content-available-height": "var(--radix-popper-available-height)",
            "--radix-menubar-trigger-width": "var(--radix-popper-anchor-width)",
            "--radix-menubar-trigger-height": "var(--radix-popper-anchor-height)"
          }
        }
      }
    );
  }
);
MenubarContent.displayName = CONTENT_NAME6;
var GROUP_NAME4 = "MenubarGroup";
var MenubarGroup = React43.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenubar, ...groupProps } = props;
    const menuScope = useMenuScope2(__scopeMenubar);
    return (0, import_jsx_runtime20.jsx)(Group, { ...menuScope, ...groupProps, ref: forwardedRef });
  }
);
MenubarGroup.displayName = GROUP_NAME4;
var LABEL_NAME3 = "MenubarLabel";
var MenubarLabel = React43.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenubar, ...labelProps } = props;
    const menuScope = useMenuScope2(__scopeMenubar);
    return (0, import_jsx_runtime20.jsx)(Label2, { ...menuScope, ...labelProps, ref: forwardedRef });
  }
);
MenubarLabel.displayName = LABEL_NAME3;
var ITEM_NAME4 = "MenubarItem";
var MenubarItem = React43.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenubar, ...itemProps } = props;
    const menuScope = useMenuScope2(__scopeMenubar);
    return (0, import_jsx_runtime20.jsx)(Item2, { ...menuScope, ...itemProps, ref: forwardedRef });
  }
);
MenubarItem.displayName = ITEM_NAME4;
var CHECKBOX_ITEM_NAME3 = "MenubarCheckboxItem";
var MenubarCheckboxItem = React43.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenubar, ...checkboxItemProps } = props;
    const menuScope = useMenuScope2(__scopeMenubar);
    return (0, import_jsx_runtime20.jsx)(CheckboxItem, { ...menuScope, ...checkboxItemProps, ref: forwardedRef });
  }
);
MenubarCheckboxItem.displayName = CHECKBOX_ITEM_NAME3;
var RADIO_GROUP_NAME3 = "MenubarRadioGroup";
var MenubarRadioGroup = React43.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenubar, ...radioGroupProps } = props;
    const menuScope = useMenuScope2(__scopeMenubar);
    return (0, import_jsx_runtime20.jsx)(RadioGroup, { ...menuScope, ...radioGroupProps, ref: forwardedRef });
  }
);
MenubarRadioGroup.displayName = RADIO_GROUP_NAME3;
var RADIO_ITEM_NAME3 = "MenubarRadioItem";
var MenubarRadioItem = React43.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenubar, ...radioItemProps } = props;
    const menuScope = useMenuScope2(__scopeMenubar);
    return (0, import_jsx_runtime20.jsx)(RadioItem, { ...menuScope, ...radioItemProps, ref: forwardedRef });
  }
);
MenubarRadioItem.displayName = RADIO_ITEM_NAME3;
var INDICATOR_NAME3 = "MenubarItemIndicator";
var MenubarItemIndicator = React43.forwardRef((props, forwardedRef) => {
  const { __scopeMenubar, ...itemIndicatorProps } = props;
  const menuScope = useMenuScope2(__scopeMenubar);
  return (0, import_jsx_runtime20.jsx)(ItemIndicator, { ...menuScope, ...itemIndicatorProps, ref: forwardedRef });
});
MenubarItemIndicator.displayName = INDICATOR_NAME3;
var SEPARATOR_NAME3 = "MenubarSeparator";
var MenubarSeparator = React43.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenubar, ...separatorProps } = props;
    const menuScope = useMenuScope2(__scopeMenubar);
    return (0, import_jsx_runtime20.jsx)(Separator, { ...menuScope, ...separatorProps, ref: forwardedRef });
  }
);
MenubarSeparator.displayName = SEPARATOR_NAME3;
var ARROW_NAME4 = "MenubarArrow";
var MenubarArrow = React43.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenubar, ...arrowProps } = props;
    const menuScope = useMenuScope2(__scopeMenubar);
    return (0, import_jsx_runtime20.jsx)(Arrow22, { ...menuScope, ...arrowProps, ref: forwardedRef });
  }
);
MenubarArrow.displayName = ARROW_NAME4;
var SUB_NAME2 = "MenubarSub";
var MenubarSub = (props) => {
  const { __scopeMenubar, children, open: openProp, onOpenChange, defaultOpen } = props;
  const menuScope = useMenuScope2(__scopeMenubar);
  const [open, setOpen] = useControllableState({
    prop: openProp,
    defaultProp: defaultOpen ?? false,
    onChange: onOpenChange,
    caller: SUB_NAME2
  });
  return (0, import_jsx_runtime20.jsx)(Sub, { ...menuScope, open, onOpenChange: setOpen, children });
};
MenubarSub.displayName = SUB_NAME2;
var SUB_TRIGGER_NAME3 = "MenubarSubTrigger";
var MenubarSubTrigger = React43.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenubar, ...subTriggerProps } = props;
    const menuScope = useMenuScope2(__scopeMenubar);
    return (0, import_jsx_runtime20.jsx)(
      SubTrigger,
      {
        "data-radix-menubar-subtrigger": "",
        ...menuScope,
        ...subTriggerProps,
        ref: forwardedRef
      }
    );
  }
);
MenubarSubTrigger.displayName = SUB_TRIGGER_NAME3;
var SUB_CONTENT_NAME3 = "MenubarSubContent";
var MenubarSubContent = React43.forwardRef(
  (props, forwardedRef) => {
    const { __scopeMenubar, ...subContentProps } = props;
    const menuScope = useMenuScope2(__scopeMenubar);
    return (0, import_jsx_runtime20.jsx)(
      SubContent,
      {
        ...menuScope,
        "data-radix-menubar-content": "",
        ...subContentProps,
        ref: forwardedRef,
        style: {
          ...props.style,
          // re-namespace exposed content custom properties
          ...{
            "--radix-menubar-content-transform-origin": "var(--radix-popper-transform-origin)",
            "--radix-menubar-content-available-width": "var(--radix-popper-available-width)",
            "--radix-menubar-content-available-height": "var(--radix-popper-available-height)",
            "--radix-menubar-trigger-width": "var(--radix-popper-anchor-width)",
            "--radix-menubar-trigger-height": "var(--radix-popper-anchor-height)"
          }
        }
      }
    );
  }
);
MenubarSubContent.displayName = SUB_CONTENT_NAME3;
function wrapArray3(array, startIndex) {
  return array.map((_2, index2) => array[(startIndex + index2) % array.length]);
}
var Root33 = Menubar;
var Menu2 = MenubarMenu;
var Trigger3 = MenubarTrigger;
var Portal23 = MenubarPortal;
var Content24 = MenubarContent;
var Item3 = MenubarItem;
var CheckboxItem2 = MenubarCheckboxItem;
var RadioGroup2 = MenubarRadioGroup;
var RadioItem2 = MenubarRadioItem;
var ItemIndicator2 = MenubarItemIndicator;
var Separator2 = MenubarSeparator;
var Sub2 = MenubarSub;
var SubTrigger2 = MenubarSubTrigger;
var SubContent2 = MenubarSubContent;

// ../../../node_modules/@radix-ui/react-popover/dist/index.mjs
var React44 = __toESM(require_react(), 1);
var import_jsx_runtime21 = __toESM(require_jsx_runtime(), 1);
var POPOVER_NAME = "Popover";
var [createPopoverContext, createPopoverScope] = createContextScope(POPOVER_NAME, [
  createPopperScope
]);
var usePopperScope2 = createPopperScope();
var [PopoverProvider, usePopoverContext] = createPopoverContext(POPOVER_NAME);
var Popover = (props) => {
  const {
    __scopePopover,
    children,
    open: openProp,
    defaultOpen,
    onOpenChange,
    modal = false
  } = props;
  const popperScope = usePopperScope2(__scopePopover);
  const triggerRef = React44.useRef(null);
  const [hasCustomAnchor, setHasCustomAnchor] = React44.useState(false);
  const [open, setOpen] = useControllableState({
    prop: openProp,
    defaultProp: defaultOpen ?? false,
    onChange: onOpenChange,
    caller: POPOVER_NAME
  });
  return (0, import_jsx_runtime21.jsx)(Root22, { ...popperScope, children: (0, import_jsx_runtime21.jsx)(
    PopoverProvider,
    {
      scope: __scopePopover,
      contentId: useId(),
      triggerRef,
      open,
      onOpenChange: setOpen,
      onOpenToggle: React44.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),
      hasCustomAnchor,
      onCustomAnchorAdd: React44.useCallback(() => setHasCustomAnchor(true), []),
      onCustomAnchorRemove: React44.useCallback(() => setHasCustomAnchor(false), []),
      modal,
      children
    }
  ) });
};
Popover.displayName = POPOVER_NAME;
var ANCHOR_NAME3 = "PopoverAnchor";
var PopoverAnchor = React44.forwardRef(
  (props, forwardedRef) => {
    const { __scopePopover, ...anchorProps } = props;
    const context = usePopoverContext(ANCHOR_NAME3, __scopePopover);
    const popperScope = usePopperScope2(__scopePopover);
    const { onCustomAnchorAdd, onCustomAnchorRemove } = context;
    React44.useEffect(() => {
      onCustomAnchorAdd();
      return () => onCustomAnchorRemove();
    }, [onCustomAnchorAdd, onCustomAnchorRemove]);
    return (0, import_jsx_runtime21.jsx)(Anchor, { ...popperScope, ...anchorProps, ref: forwardedRef });
  }
);
PopoverAnchor.displayName = ANCHOR_NAME3;
var TRIGGER_NAME6 = "PopoverTrigger";
var PopoverTrigger = React44.forwardRef(
  (props, forwardedRef) => {
    const { __scopePopover, ...triggerProps } = props;
    const context = usePopoverContext(TRIGGER_NAME6, __scopePopover);
    const popperScope = usePopperScope2(__scopePopover);
    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);
    const trigger = (0, import_jsx_runtime21.jsx)(
      Primitive.button,
      {
        type: "button",
        "aria-haspopup": "dialog",
        "aria-expanded": context.open,
        "aria-controls": context.contentId,
        "data-state": getState4(context.open),
        ...triggerProps,
        ref: composedTriggerRef,
        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)
      }
    );
    return context.hasCustomAnchor ? trigger : (0, import_jsx_runtime21.jsx)(Anchor, { asChild: true, ...popperScope, children: trigger });
  }
);
PopoverTrigger.displayName = TRIGGER_NAME6;
var PORTAL_NAME6 = "PopoverPortal";
var [PortalProvider3, usePortalContext3] = createPopoverContext(PORTAL_NAME6, {
  forceMount: void 0
});
var PopoverPortal = (props) => {
  const { __scopePopover, forceMount, children, container } = props;
  const context = usePopoverContext(PORTAL_NAME6, __scopePopover);
  return (0, import_jsx_runtime21.jsx)(PortalProvider3, { scope: __scopePopover, forceMount, children: (0, import_jsx_runtime21.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime21.jsx)(Portal, { asChild: true, container, children }) }) });
};
PopoverPortal.displayName = PORTAL_NAME6;
var CONTENT_NAME7 = "PopoverContent";
var PopoverContent = React44.forwardRef(
  (props, forwardedRef) => {
    const portalContext = usePortalContext3(CONTENT_NAME7, props.__scopePopover);
    const { forceMount = portalContext.forceMount, ...contentProps } = props;
    const context = usePopoverContext(CONTENT_NAME7, props.__scopePopover);
    return (0, import_jsx_runtime21.jsx)(Presence, { present: forceMount || context.open, children: context.modal ? (0, import_jsx_runtime21.jsx)(PopoverContentModal, { ...contentProps, ref: forwardedRef }) : (0, import_jsx_runtime21.jsx)(PopoverContentNonModal, { ...contentProps, ref: forwardedRef }) });
  }
);
PopoverContent.displayName = CONTENT_NAME7;
var Slot4 = createSlot("PopoverContent.RemoveScroll");
var PopoverContentModal = React44.forwardRef(
  (props, forwardedRef) => {
    const context = usePopoverContext(CONTENT_NAME7, props.__scopePopover);
    const contentRef = React44.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, contentRef);
    const isRightClickOutsideRef = React44.useRef(false);
    React44.useEffect(() => {
      const content = contentRef.current;
      if (content) return hideOthers(content);
    }, []);
    return (0, import_jsx_runtime21.jsx)(Combination_default, { as: Slot4, allowPinchZoom: true, children: (0, import_jsx_runtime21.jsx)(
      PopoverContentImpl,
      {
        ...props,
        ref: composedRefs,
        trapFocus: context.open,
        disableOutsidePointerEvents: true,
        onCloseAutoFocus: composeEventHandlers(props.onCloseAutoFocus, (event) => {
          var _a2;
          event.preventDefault();
          if (!isRightClickOutsideRef.current) (_a2 = context.triggerRef.current) == null ? void 0 : _a2.focus();
        }),
        onPointerDownOutside: composeEventHandlers(
          props.onPointerDownOutside,
          (event) => {
            const originalEvent = event.detail.originalEvent;
            const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
            const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
            isRightClickOutsideRef.current = isRightClick;
          },
          { checkForDefaultPrevented: false }
        ),
        onFocusOutside: composeEventHandlers(
          props.onFocusOutside,
          (event) => event.preventDefault(),
          { checkForDefaultPrevented: false }
        )
      }
    ) });
  }
);
var PopoverContentNonModal = React44.forwardRef(
  (props, forwardedRef) => {
    const context = usePopoverContext(CONTENT_NAME7, props.__scopePopover);
    const hasInteractedOutsideRef = React44.useRef(false);
    const hasPointerDownOutsideRef = React44.useRef(false);
    return (0, import_jsx_runtime21.jsx)(
      PopoverContentImpl,
      {
        ...props,
        ref: forwardedRef,
        trapFocus: false,
        disableOutsidePointerEvents: false,
        onCloseAutoFocus: (event) => {
          var _a2, _b;
          (_a2 = props.onCloseAutoFocus) == null ? void 0 : _a2.call(props, event);
          if (!event.defaultPrevented) {
            if (!hasInteractedOutsideRef.current) (_b = context.triggerRef.current) == null ? void 0 : _b.focus();
            event.preventDefault();
          }
          hasInteractedOutsideRef.current = false;
          hasPointerDownOutsideRef.current = false;
        },
        onInteractOutside: (event) => {
          var _a2, _b;
          (_a2 = props.onInteractOutside) == null ? void 0 : _a2.call(props, event);
          if (!event.defaultPrevented) {
            hasInteractedOutsideRef.current = true;
            if (event.detail.originalEvent.type === "pointerdown") {
              hasPointerDownOutsideRef.current = true;
            }
          }
          const target = event.target;
          const targetIsTrigger = (_b = context.triggerRef.current) == null ? void 0 : _b.contains(target);
          if (targetIsTrigger) event.preventDefault();
          if (event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current) {
            event.preventDefault();
          }
        }
      }
    );
  }
);
var PopoverContentImpl = React44.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopePopover,
      trapFocus,
      onOpenAutoFocus,
      onCloseAutoFocus,
      disableOutsidePointerEvents,
      onEscapeKeyDown,
      onPointerDownOutside,
      onFocusOutside,
      onInteractOutside,
      ...contentProps
    } = props;
    const context = usePopoverContext(CONTENT_NAME7, __scopePopover);
    const popperScope = usePopperScope2(__scopePopover);
    useFocusGuards();
    return (0, import_jsx_runtime21.jsx)(
      FocusScope,
      {
        asChild: true,
        loop: true,
        trapped: trapFocus,
        onMountAutoFocus: onOpenAutoFocus,
        onUnmountAutoFocus: onCloseAutoFocus,
        children: (0, import_jsx_runtime21.jsx)(
          DismissableLayer,
          {
            asChild: true,
            disableOutsidePointerEvents,
            onInteractOutside,
            onEscapeKeyDown,
            onPointerDownOutside,
            onFocusOutside,
            onDismiss: () => context.onOpenChange(false),
            children: (0, import_jsx_runtime21.jsx)(
              Content3,
              {
                "data-state": getState4(context.open),
                role: "dialog",
                id: context.contentId,
                ...popperScope,
                ...contentProps,
                ref: forwardedRef,
                style: {
                  ...contentProps.style,
                  // re-namespace exposed content custom properties
                  ...{
                    "--radix-popover-content-transform-origin": "var(--radix-popper-transform-origin)",
                    "--radix-popover-content-available-width": "var(--radix-popper-available-width)",
                    "--radix-popover-content-available-height": "var(--radix-popper-available-height)",
                    "--radix-popover-trigger-width": "var(--radix-popper-anchor-width)",
                    "--radix-popover-trigger-height": "var(--radix-popper-anchor-height)"
                  }
                }
              }
            )
          }
        )
      }
    );
  }
);
var CLOSE_NAME2 = "PopoverClose";
var PopoverClose = React44.forwardRef(
  (props, forwardedRef) => {
    const { __scopePopover, ...closeProps } = props;
    const context = usePopoverContext(CLOSE_NAME2, __scopePopover);
    return (0, import_jsx_runtime21.jsx)(
      Primitive.button,
      {
        type: "button",
        ...closeProps,
        ref: forwardedRef,
        onClick: composeEventHandlers(props.onClick, () => context.onOpenChange(false))
      }
    );
  }
);
PopoverClose.displayName = CLOSE_NAME2;
var ARROW_NAME5 = "PopoverArrow";
var PopoverArrow = React44.forwardRef(
  (props, forwardedRef) => {
    const { __scopePopover, ...arrowProps } = props;
    const popperScope = usePopperScope2(__scopePopover);
    return (0, import_jsx_runtime21.jsx)(Arrow2, { ...popperScope, ...arrowProps, ref: forwardedRef });
  }
);
PopoverArrow.displayName = ARROW_NAME5;
function getState4(open) {
  return open ? "open" : "closed";
}
var Root24 = Popover;
var Trigger4 = PopoverTrigger;
var Portal4 = PopoverPortal;
var Content25 = PopoverContent;
var Arrow23 = PopoverArrow;

// ../../../node_modules/cmdk/dist/chunk-XJATAMEX.mjs
var U = 1;
var Y = 0.9;
var a = 0.8;
var H = 0.17;
var p = 0.1;
var u = 0.999;
var J = 0.9999;
var k = 0.99;
var m = /[\\\/_+.#"@\[\(\{&]/;
var B = /[\\\/_+.#"@\[\(\{&]/g;
var K = /[\s-]/;
var X = /[\s-]/g;
function G(c2, f, P, C, h, A2, O2) {
  if (A2 === f.length) return h === c2.length ? U : k;
  var T = `${h},${A2}`;
  if (O2[T] !== void 0) return O2[T];
  for (var L2 = C.charAt(A2), E = P.indexOf(L2, h), S2 = 0, _2, N, R, M; E >= 0; ) _2 = G(c2, f, P, C, E + 1, A2 + 1, O2), _2 > S2 && (E === h ? _2 *= U : m.test(c2.charAt(E - 1)) ? (_2 *= a, R = c2.slice(h, E - 1).match(B), R && h > 0 && (_2 *= Math.pow(u, R.length))) : K.test(c2.charAt(E - 1)) ? (_2 *= Y, M = c2.slice(h, E - 1).match(X), M && h > 0 && (_2 *= Math.pow(u, M.length))) : (_2 *= H, h > 0 && (_2 *= Math.pow(u, E - h))), c2.charAt(E) !== f.charAt(A2) && (_2 *= J)), (_2 < p && P.charAt(E - 1) === C.charAt(A2 + 1) || C.charAt(A2 + 1) === C.charAt(A2) && P.charAt(E - 1) !== C.charAt(A2)) && (N = G(c2, f, P, C, E + 1, A2 + 2, O2), N * p > _2 && (_2 = N * p)), _2 > S2 && (S2 = _2), E = P.indexOf(L2, E + 1);
  return O2[T] = S2, S2;
}
function D(c2) {
  return c2.toLowerCase().replace(X, " ");
}
function W(c2, f) {
  return G(c2, f, D(c2), D(f), 0, 0, {});
}

// ../../../node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t2 = arguments[e];
      for (var r2 in t2) ({}).hasOwnProperty.call(t2, r2) && (n[r2] = t2[r2]);
    }
    return n;
  }, _extends.apply(null, arguments);
}

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-dialog/dist/index.module.js
var import_react21 = __toESM(require_react());

// ../../../node_modules/cmdk/node_modules/@radix-ui/primitive/dist/index.module.js
function $e42e1063c40fb3ef$export$b9ecd428b558ff10(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {
  return function handleEvent(event) {
    originalEventHandler === null || originalEventHandler === void 0 || originalEventHandler(event);
    if (checkForDefaultPrevented === false || !event.defaultPrevented) return ourEventHandler === null || ourEventHandler === void 0 ? void 0 : ourEventHandler(event);
  };
}

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-compose-refs/dist/index.module.js
var import_react8 = __toESM(require_react());
function $6ed0406888f73fc4$var$setRef(ref, value) {
  if (typeof ref === "function") ref(value);
  else if (ref !== null && ref !== void 0) ref.current = value;
}
function $6ed0406888f73fc4$export$43e446d32b3d21af(...refs) {
  return (node) => refs.forEach(
    (ref) => $6ed0406888f73fc4$var$setRef(ref, node)
  );
}
function $6ed0406888f73fc4$export$c7b2cbe3552a0d05(...refs) {
  return (0, import_react8.useCallback)($6ed0406888f73fc4$export$43e446d32b3d21af(...refs), refs);
}

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-context/dist/index.module.js
var import_react9 = __toESM(require_react());
function $c512c27ab02ef895$export$fd42f52fd3ae1109(rootComponentName, defaultContext) {
  const Context = (0, import_react9.createContext)(defaultContext);
  function Provider2(props) {
    const { children, ...context } = props;
    const value = (0, import_react9.useMemo)(
      () => context,
      Object.values(context)
    );
    return (0, import_react9.createElement)(Context.Provider, {
      value
    }, children);
  }
  function useContext6(consumerName) {
    const context = (0, import_react9.useContext)(Context);
    if (context) return context;
    if (defaultContext !== void 0) return defaultContext;
    throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
  }
  Provider2.displayName = rootComponentName + "Provider";
  return [
    Provider2,
    useContext6
  ];
}
function $c512c27ab02ef895$export$50c7b4e9d9f19c1(scopeName, createContextScopeDeps = []) {
  let defaultContexts = [];
  function $c512c27ab02ef895$export$fd42f52fd3ae11092(rootComponentName, defaultContext) {
    const BaseContext = (0, import_react9.createContext)(defaultContext);
    const index2 = defaultContexts.length;
    defaultContexts = [
      ...defaultContexts,
      defaultContext
    ];
    function Provider2(props) {
      const { scope, children, ...context } = props;
      const Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index2]) || BaseContext;
      const value = (0, import_react9.useMemo)(
        () => context,
        Object.values(context)
      );
      return (0, import_react9.createElement)(Context.Provider, {
        value
      }, children);
    }
    function useContext6(consumerName, scope) {
      const Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index2]) || BaseContext;
      const context = (0, import_react9.useContext)(Context);
      if (context) return context;
      if (defaultContext !== void 0) return defaultContext;
      throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
    }
    Provider2.displayName = rootComponentName + "Provider";
    return [
      Provider2,
      useContext6
    ];
  }
  const createScope = () => {
    const scopeContexts = defaultContexts.map((defaultContext) => {
      return (0, import_react9.createContext)(defaultContext);
    });
    return function useScope(scope) {
      const contexts = (scope === null || scope === void 0 ? void 0 : scope[scopeName]) || scopeContexts;
      return (0, import_react9.useMemo)(
        () => ({
          [`__scope${scopeName}`]: {
            ...scope,
            [scopeName]: contexts
          }
        }),
        [
          scope,
          contexts
        ]
      );
    };
  };
  createScope.scopeName = scopeName;
  return [
    $c512c27ab02ef895$export$fd42f52fd3ae11092,
    $c512c27ab02ef895$var$composeContextScopes(createScope, ...createContextScopeDeps)
  ];
}
function $c512c27ab02ef895$var$composeContextScopes(...scopes) {
  const baseScope = scopes[0];
  if (scopes.length === 1) return baseScope;
  const createScope1 = () => {
    const scopeHooks = scopes.map(
      (createScope) => ({
        useScope: createScope(),
        scopeName: createScope.scopeName
      })
    );
    return function useComposedScopes(overrideScopes) {
      const nextScopes1 = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {
        const scopeProps = useScope(overrideScopes);
        const currentScope = scopeProps[`__scope${scopeName}`];
        return {
          ...nextScopes,
          ...currentScope
        };
      }, {});
      return (0, import_react9.useMemo)(
        () => ({
          [`__scope${baseScope.scopeName}`]: nextScopes1
        }),
        [
          nextScopes1
        ]
      );
    };
  };
  createScope1.scopeName = baseScope.scopeName;
  return createScope1;
}

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-id/dist/index.module.js
var $2AODx$react = __toESM(require_react());

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-use-layout-effect/dist/index.module.js
var import_react10 = __toESM(require_react());
var $9f79659886946c16$export$e5c5a5f917a5871c = Boolean(globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) ? import_react10.useLayoutEffect : () => {
};

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-id/dist/index.module.js
var $1746a345f3d73bb7$var$useReactId = $2AODx$react["useId".toString()] || (() => void 0);
var $1746a345f3d73bb7$var$count = 0;
function $1746a345f3d73bb7$export$f680877a34711e37(deterministicId) {
  const [id, setId] = $2AODx$react.useState($1746a345f3d73bb7$var$useReactId());
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (!deterministicId) setId(
      (reactId) => reactId !== null && reactId !== void 0 ? reactId : String($1746a345f3d73bb7$var$count++)
    );
  }, [
    deterministicId
  ]);
  return deterministicId || (id ? `radix-${id}` : "");
}

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-use-controllable-state/dist/index.module.js
var import_react12 = __toESM(require_react());

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-use-callback-ref/dist/index.module.js
var import_react11 = __toESM(require_react());
function $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback) {
  const callbackRef = (0, import_react11.useRef)(callback);
  (0, import_react11.useEffect)(() => {
    callbackRef.current = callback;
  });
  return (0, import_react11.useMemo)(
    () => (...args) => {
      var _callbackRef$current;
      return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);
    },
    []
  );
}

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-use-controllable-state/dist/index.module.js
function $71cd76cc60e0454e$export$6f32135080cb4c3({ prop, defaultProp, onChange = () => {
} }) {
  const [uncontrolledProp, setUncontrolledProp] = $71cd76cc60e0454e$var$useUncontrolledState({
    defaultProp,
    onChange
  });
  const isControlled = prop !== void 0;
  const value1 = isControlled ? prop : uncontrolledProp;
  const handleChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onChange);
  const setValue = (0, import_react12.useCallback)((nextValue) => {
    if (isControlled) {
      const setter = nextValue;
      const value = typeof nextValue === "function" ? setter(prop) : nextValue;
      if (value !== prop) handleChange(value);
    } else setUncontrolledProp(nextValue);
  }, [
    isControlled,
    prop,
    setUncontrolledProp,
    handleChange
  ]);
  return [
    value1,
    setValue
  ];
}
function $71cd76cc60e0454e$var$useUncontrolledState({ defaultProp, onChange }) {
  const uncontrolledState = (0, import_react12.useState)(defaultProp);
  const [value] = uncontrolledState;
  const prevValueRef = (0, import_react12.useRef)(value);
  const handleChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onChange);
  (0, import_react12.useEffect)(() => {
    if (prevValueRef.current !== value) {
      handleChange(value);
      prevValueRef.current = value;
    }
  }, [
    value,
    prevValueRef,
    handleChange
  ]);
  return uncontrolledState;
}

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-dismissable-layer/dist/index.module.js
var import_react16 = __toESM(require_react());

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-primitive/dist/index.module.js
var import_react14 = __toESM(require_react());
var import_react_dom3 = __toESM(require_react_dom());

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-slot/dist/index.module.js
var import_react13 = __toESM(require_react());
var $5e63c961fc1ce211$export$8c6ed5c666ac1360 = (0, import_react13.forwardRef)((props, forwardedRef) => {
  const { children, ...slotProps } = props;
  const childrenArray = import_react13.Children.toArray(children);
  const slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable);
  if (slottable) {
    const newElement = slottable.props.children;
    const newChildren = childrenArray.map((child) => {
      if (child === slottable) {
        if (import_react13.Children.count(newElement) > 1) return import_react13.Children.only(null);
        return (0, import_react13.isValidElement)(newElement) ? newElement.props.children : null;
      } else return child;
    });
    return (0, import_react13.createElement)($5e63c961fc1ce211$var$SlotClone, _extends({}, slotProps, {
      ref: forwardedRef
    }), (0, import_react13.isValidElement)(newElement) ? (0, import_react13.cloneElement)(newElement, void 0, newChildren) : null);
  }
  return (0, import_react13.createElement)($5e63c961fc1ce211$var$SlotClone, _extends({}, slotProps, {
    ref: forwardedRef
  }), children);
});
$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName = "Slot";
var $5e63c961fc1ce211$var$SlotClone = (0, import_react13.forwardRef)((props, forwardedRef) => {
  const { children, ...slotProps } = props;
  if ((0, import_react13.isValidElement)(children)) return (0, import_react13.cloneElement)(children, {
    ...$5e63c961fc1ce211$var$mergeProps(slotProps, children.props),
    ref: $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, children.ref)
  });
  return import_react13.Children.count(children) > 1 ? import_react13.Children.only(null) : null;
});
$5e63c961fc1ce211$var$SlotClone.displayName = "SlotClone";
var $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 = ({ children }) => {
  return (0, import_react13.createElement)(import_react13.Fragment, null, children);
};
function $5e63c961fc1ce211$var$isSlottable(child) {
  return (0, import_react13.isValidElement)(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d45;
}
function $5e63c961fc1ce211$var$mergeProps(slotProps, childProps) {
  const overrideProps = {
    ...childProps
  };
  for (const propName in childProps) {
    const slotPropValue = slotProps[propName];
    const childPropValue = childProps[propName];
    const isHandler = /^on[A-Z]/.test(propName);
    if (isHandler) overrideProps[propName] = (...args) => {
      childPropValue === null || childPropValue === void 0 || childPropValue(...args);
      slotPropValue === null || slotPropValue === void 0 || slotPropValue(...args);
    };
    else if (propName === "style") overrideProps[propName] = {
      ...slotPropValue,
      ...childPropValue
    };
    else if (propName === "className") overrideProps[propName] = [
      slotPropValue,
      childPropValue
    ].filter(Boolean).join(" ");
  }
  return {
    ...slotProps,
    ...overrideProps
  };
}

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-primitive/dist/index.module.js
var $8927f6f2acc4f386$var$NODES = [
  "a",
  "button",
  "div",
  "h2",
  "h3",
  "img",
  "li",
  "nav",
  "ol",
  "p",
  "span",
  "svg",
  "ul"
];
var $8927f6f2acc4f386$export$250ffa63cdc0d034 = $8927f6f2acc4f386$var$NODES.reduce((primitive, node) => {
  const Node2 = (0, import_react14.forwardRef)((props, forwardedRef) => {
    const { asChild, ...primitiveProps } = props;
    const Comp = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : node;
    (0, import_react14.useEffect)(() => {
      window[Symbol.for("radix-ui")] = true;
    }, []);
    return (0, import_react14.createElement)(Comp, _extends({}, primitiveProps, {
      ref: forwardedRef
    }));
  });
  Node2.displayName = `Primitive.${node}`;
  return {
    ...primitive,
    [node]: Node2
  };
}, {});
function $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event) {
  if (target) (0, import_react_dom3.flushSync)(
    () => target.dispatchEvent(event)
  );
}

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-use-escape-keydown/dist/index.module.js
var import_react15 = __toESM(require_react());
function $addc16e1bbe58fd0$export$3a72a57244d6e765(onEscapeKeyDownProp) {
  const onEscapeKeyDown = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onEscapeKeyDownProp);
  (0, import_react15.useEffect)(() => {
    const handleKeyDown = (event) => {
      if (event.key === "Escape") onEscapeKeyDown(event);
    };
    document.addEventListener("keydown", handleKeyDown);
    return () => document.removeEventListener("keydown", handleKeyDown);
  }, [
    onEscapeKeyDown
  ]);
}

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-dismissable-layer/dist/index.module.js
var $5cb92bef7577960e$var$DISMISSABLE_LAYER_NAME = "DismissableLayer";
var $5cb92bef7577960e$var$CONTEXT_UPDATE = "dismissableLayer.update";
var $5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE = "dismissableLayer.pointerDownOutside";
var $5cb92bef7577960e$var$FOCUS_OUTSIDE = "dismissableLayer.focusOutside";
var $5cb92bef7577960e$var$originalBodyPointerEvents;
var $5cb92bef7577960e$var$DismissableLayerContext = (0, import_react16.createContext)({
  layers: /* @__PURE__ */ new Set(),
  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
  branches: /* @__PURE__ */ new Set()
});
var $5cb92bef7577960e$export$177fb62ff3ec1f22 = (0, import_react16.forwardRef)((props, forwardedRef) => {
  const { disableOutsidePointerEvents = false, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, ...layerProps } = props;
  const context = (0, import_react16.useContext)($5cb92bef7577960e$var$DismissableLayerContext);
  const [node1, setNode] = (0, import_react16.useState)(null);
  const [, force] = (0, import_react16.useState)({});
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setNode(node)
  );
  const layers = Array.from(context.layers);
  const [highestLayerWithOutsidePointerEventsDisabled] = [
    ...context.layersWithOutsidePointerEventsDisabled
  ].slice(-1);
  const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled);
  const index2 = node1 ? layers.indexOf(node1) : -1;
  const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;
  const isPointerEventsEnabled = index2 >= highestLayerWithOutsidePointerEventsDisabledIndex;
  const pointerDownOutside = $5cb92bef7577960e$var$usePointerDownOutside((event) => {
    const target = event.target;
    const isPointerDownOnBranch = [
      ...context.branches
    ].some(
      (branch) => branch.contains(target)
    );
    if (!isPointerEventsEnabled || isPointerDownOnBranch) return;
    onPointerDownOutside === null || onPointerDownOutside === void 0 || onPointerDownOutside(event);
    onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);
    if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 || onDismiss();
  });
  const focusOutside = $5cb92bef7577960e$var$useFocusOutside((event) => {
    const target = event.target;
    const isFocusInBranch = [
      ...context.branches
    ].some(
      (branch) => branch.contains(target)
    );
    if (isFocusInBranch) return;
    onFocusOutside === null || onFocusOutside === void 0 || onFocusOutside(event);
    onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);
    if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 || onDismiss();
  });
  $addc16e1bbe58fd0$export$3a72a57244d6e765((event) => {
    const isHighestLayer = index2 === context.layers.size - 1;
    if (!isHighestLayer) return;
    onEscapeKeyDown === null || onEscapeKeyDown === void 0 || onEscapeKeyDown(event);
    if (!event.defaultPrevented && onDismiss) {
      event.preventDefault();
      onDismiss();
    }
  });
  (0, import_react16.useEffect)(() => {
    if (!node1) return;
    if (disableOutsidePointerEvents) {
      if (context.layersWithOutsidePointerEventsDisabled.size === 0) {
        $5cb92bef7577960e$var$originalBodyPointerEvents = document.body.style.pointerEvents;
        document.body.style.pointerEvents = "none";
      }
      context.layersWithOutsidePointerEventsDisabled.add(node1);
    }
    context.layers.add(node1);
    $5cb92bef7577960e$var$dispatchUpdate();
    return () => {
      if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1) document.body.style.pointerEvents = $5cb92bef7577960e$var$originalBodyPointerEvents;
    };
  }, [
    node1,
    disableOutsidePointerEvents,
    context
  ]);
  (0, import_react16.useEffect)(() => {
    return () => {
      if (!node1) return;
      context.layers.delete(node1);
      context.layersWithOutsidePointerEventsDisabled.delete(node1);
      $5cb92bef7577960e$var$dispatchUpdate();
    };
  }, [
    node1,
    context
  ]);
  (0, import_react16.useEffect)(() => {
    const handleUpdate = () => force({});
    document.addEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate);
    return () => document.removeEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate);
  }, []);
  return (0, import_react16.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, layerProps, {
    ref: composedRefs,
    style: {
      pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? "auto" : "none" : void 0,
      ...props.style
    },
    onFocusCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocusCapture, focusOutside.onFocusCapture),
    onBlurCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlurCapture, focusOutside.onBlurCapture),
    onPointerDownCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)
  }));
});
Object.assign($5cb92bef7577960e$export$177fb62ff3ec1f22, {
  displayName: $5cb92bef7577960e$var$DISMISSABLE_LAYER_NAME
});
var $5cb92bef7577960e$var$BRANCH_NAME = "DismissableLayerBranch";
var $5cb92bef7577960e$export$4d5eb2109db14228 = (0, import_react16.forwardRef)((props, forwardedRef) => {
  const context = (0, import_react16.useContext)($5cb92bef7577960e$var$DismissableLayerContext);
  const ref = (0, import_react16.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  (0, import_react16.useEffect)(() => {
    const node = ref.current;
    if (node) {
      context.branches.add(node);
      return () => {
        context.branches.delete(node);
      };
    }
  }, [
    context.branches
  ]);
  return (0, import_react16.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, props, {
    ref: composedRefs
  }));
});
Object.assign($5cb92bef7577960e$export$4d5eb2109db14228, {
  displayName: $5cb92bef7577960e$var$BRANCH_NAME
});
function $5cb92bef7577960e$var$usePointerDownOutside(onPointerDownOutside) {
  const handlePointerDownOutside = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onPointerDownOutside);
  const isPointerInsideReactTreeRef = (0, import_react16.useRef)(false);
  const handleClickRef = (0, import_react16.useRef)(() => {
  });
  (0, import_react16.useEffect)(() => {
    const handlePointerDown = (event) => {
      if (event.target && !isPointerInsideReactTreeRef.current) {
        let handleAndDispatchPointerDownOutsideEvent = function() {
          $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail, {
            discrete: true
          });
        };
        const eventDetail = {
          originalEvent: event
        };
        if (event.pointerType === "touch") {
          document.removeEventListener("click", handleClickRef.current);
          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;
          document.addEventListener("click", handleClickRef.current, {
            once: true
          });
        } else handleAndDispatchPointerDownOutsideEvent();
      }
      isPointerInsideReactTreeRef.current = false;
    };
    const timerId = window.setTimeout(() => {
      document.addEventListener("pointerdown", handlePointerDown);
    }, 0);
    return () => {
      window.clearTimeout(timerId);
      document.removeEventListener("pointerdown", handlePointerDown);
      document.removeEventListener("click", handleClickRef.current);
    };
  }, [
    handlePointerDownOutside
  ]);
  return {
    // ensures we check React component tree (not just DOM tree)
    onPointerDownCapture: () => isPointerInsideReactTreeRef.current = true
  };
}
function $5cb92bef7577960e$var$useFocusOutside(onFocusOutside) {
  const handleFocusOutside = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onFocusOutside);
  const isFocusInsideReactTreeRef = (0, import_react16.useRef)(false);
  (0, import_react16.useEffect)(() => {
    const handleFocus = (event) => {
      if (event.target && !isFocusInsideReactTreeRef.current) {
        const eventDetail = {
          originalEvent: event
        };
        $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {
          discrete: false
        });
      }
    };
    document.addEventListener("focusin", handleFocus);
    return () => document.removeEventListener("focusin", handleFocus);
  }, [
    handleFocusOutside
  ]);
  return {
    onFocusCapture: () => isFocusInsideReactTreeRef.current = true,
    onBlurCapture: () => isFocusInsideReactTreeRef.current = false
  };
}
function $5cb92bef7577960e$var$dispatchUpdate() {
  const event = new CustomEvent($5cb92bef7577960e$var$CONTEXT_UPDATE);
  document.dispatchEvent(event);
}
function $5cb92bef7577960e$var$handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
  const target = detail.originalEvent.target;
  const event = new CustomEvent(name, {
    bubbles: false,
    cancelable: true,
    detail
  });
  if (handler) target.addEventListener(name, handler, {
    once: true
  });
  if (discrete) $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event);
  else target.dispatchEvent(event);
}

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-focus-scope/dist/index.module.js
var import_react17 = __toESM(require_react());
var $d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT = "focusScope.autoFocusOnMount";
var $d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT = "focusScope.autoFocusOnUnmount";
var $d3863c46a17e8a28$var$EVENT_OPTIONS = {
  bubbles: false,
  cancelable: true
};
var $d3863c46a17e8a28$var$FOCUS_SCOPE_NAME = "FocusScope";
var $d3863c46a17e8a28$export$20e40289641fbbb6 = (0, import_react17.forwardRef)((props, forwardedRef) => {
  const { loop = false, trapped = false, onMountAutoFocus: onMountAutoFocusProp, onUnmountAutoFocus: onUnmountAutoFocusProp, ...scopeProps } = props;
  const [container1, setContainer] = (0, import_react17.useState)(null);
  const onMountAutoFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onMountAutoFocusProp);
  const onUnmountAutoFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onUnmountAutoFocusProp);
  const lastFocusedElementRef = (0, import_react17.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContainer(node)
  );
  const focusScope = (0, import_react17.useRef)({
    paused: false,
    pause() {
      this.paused = true;
    },
    resume() {
      this.paused = false;
    }
  }).current;
  (0, import_react17.useEffect)(() => {
    if (trapped) {
      let handleFocusIn = function(event) {
        if (focusScope.paused || !container1) return;
        const target = event.target;
        if (container1.contains(target)) lastFocusedElementRef.current = target;
        else $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {
          select: true
        });
      }, handleFocusOut = function(event) {
        if (focusScope.paused || !container1) return;
        if (!container1.contains(event.relatedTarget)) $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {
          select: true
        });
      };
      document.addEventListener("focusin", handleFocusIn);
      document.addEventListener("focusout", handleFocusOut);
      return () => {
        document.removeEventListener("focusin", handleFocusIn);
        document.removeEventListener("focusout", handleFocusOut);
      };
    }
  }, [
    trapped,
    container1,
    focusScope.paused
  ]);
  (0, import_react17.useEffect)(() => {
    if (container1) {
      $d3863c46a17e8a28$var$focusScopesStack.add(focusScope);
      const previouslyFocusedElement = document.activeElement;
      const hasFocusedCandidate = container1.contains(previouslyFocusedElement);
      if (!hasFocusedCandidate) {
        const mountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);
        container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
        container1.dispatchEvent(mountEvent);
        if (!mountEvent.defaultPrevented) {
          $d3863c46a17e8a28$var$focusFirst($d3863c46a17e8a28$var$removeLinks($d3863c46a17e8a28$var$getTabbableCandidates(container1)), {
            select: true
          });
          if (document.activeElement === previouslyFocusedElement) $d3863c46a17e8a28$var$focus(container1);
        }
      }
      return () => {
        container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
        setTimeout(() => {
          const unmountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);
          container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
          container1.dispatchEvent(unmountEvent);
          if (!unmountEvent.defaultPrevented) $d3863c46a17e8a28$var$focus(previouslyFocusedElement !== null && previouslyFocusedElement !== void 0 ? previouslyFocusedElement : document.body, {
            select: true
          });
          container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
          $d3863c46a17e8a28$var$focusScopesStack.remove(focusScope);
        }, 0);
      };
    }
  }, [
    container1,
    onMountAutoFocus,
    onUnmountAutoFocus,
    focusScope
  ]);
  const handleKeyDown = (0, import_react17.useCallback)((event) => {
    if (!loop && !trapped) return;
    if (focusScope.paused) return;
    const isTabKey = event.key === "Tab" && !event.altKey && !event.ctrlKey && !event.metaKey;
    const focusedElement = document.activeElement;
    if (isTabKey && focusedElement) {
      const container = event.currentTarget;
      const [first, last] = $d3863c46a17e8a28$var$getTabbableEdges(container);
      const hasTabbableElementsInside = first && last;
      if (!hasTabbableElementsInside) {
        if (focusedElement === container) event.preventDefault();
      } else {
        if (!event.shiftKey && focusedElement === last) {
          event.preventDefault();
          if (loop) $d3863c46a17e8a28$var$focus(first, {
            select: true
          });
        } else if (event.shiftKey && focusedElement === first) {
          event.preventDefault();
          if (loop) $d3863c46a17e8a28$var$focus(last, {
            select: true
          });
        }
      }
    }
  }, [
    loop,
    trapped,
    focusScope.paused
  ]);
  return (0, import_react17.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    tabIndex: -1
  }, scopeProps, {
    ref: composedRefs,
    onKeyDown: handleKeyDown
  }));
});
Object.assign($d3863c46a17e8a28$export$20e40289641fbbb6, {
  displayName: $d3863c46a17e8a28$var$FOCUS_SCOPE_NAME
});
function $d3863c46a17e8a28$var$focusFirst(candidates, { select = false } = {}) {
  const previouslyFocusedElement = document.activeElement;
  for (const candidate of candidates) {
    $d3863c46a17e8a28$var$focus(candidate, {
      select
    });
    if (document.activeElement !== previouslyFocusedElement) return;
  }
}
function $d3863c46a17e8a28$var$getTabbableEdges(container) {
  const candidates = $d3863c46a17e8a28$var$getTabbableCandidates(container);
  const first = $d3863c46a17e8a28$var$findVisible(candidates, container);
  const last = $d3863c46a17e8a28$var$findVisible(candidates.reverse(), container);
  return [
    first,
    last
  ];
}
function $d3863c46a17e8a28$var$getTabbableCandidates(container) {
  const nodes = [];
  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;
      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  while (walker.nextNode()) nodes.push(walker.currentNode);
  return nodes;
}
function $d3863c46a17e8a28$var$findVisible(elements, container) {
  for (const element of elements) {
    if (!$d3863c46a17e8a28$var$isHidden(element, {
      upTo: container
    })) return element;
  }
}
function $d3863c46a17e8a28$var$isHidden(node, { upTo }) {
  if (getComputedStyle(node).visibility === "hidden") return true;
  while (node) {
    if (upTo !== void 0 && node === upTo) return false;
    if (getComputedStyle(node).display === "none") return true;
    node = node.parentElement;
  }
  return false;
}
function $d3863c46a17e8a28$var$isSelectableInput(element) {
  return element instanceof HTMLInputElement && "select" in element;
}
function $d3863c46a17e8a28$var$focus(element, { select = false } = {}) {
  if (element && element.focus) {
    const previouslyFocusedElement = document.activeElement;
    element.focus({
      preventScroll: true
    });
    if (element !== previouslyFocusedElement && $d3863c46a17e8a28$var$isSelectableInput(element) && select) element.select();
  }
}
var $d3863c46a17e8a28$var$focusScopesStack = $d3863c46a17e8a28$var$createFocusScopesStack();
function $d3863c46a17e8a28$var$createFocusScopesStack() {
  let stack = [];
  return {
    add(focusScope) {
      const activeFocusScope = stack[0];
      if (focusScope !== activeFocusScope) activeFocusScope === null || activeFocusScope === void 0 || activeFocusScope.pause();
      stack = $d3863c46a17e8a28$var$arrayRemove(stack, focusScope);
      stack.unshift(focusScope);
    },
    remove(focusScope) {
      var _stack$;
      stack = $d3863c46a17e8a28$var$arrayRemove(stack, focusScope);
      (_stack$ = stack[0]) === null || _stack$ === void 0 || _stack$.resume();
    }
  };
}
function $d3863c46a17e8a28$var$arrayRemove(array, item) {
  const updatedArray = [
    ...array
  ];
  const index2 = updatedArray.indexOf(item);
  if (index2 !== -1) updatedArray.splice(index2, 1);
  return updatedArray;
}
function $d3863c46a17e8a28$var$removeLinks(items) {
  return items.filter(
    (item) => item.tagName !== "A"
  );
}

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-portal/dist/index.module.js
var import_react18 = __toESM(require_react());
var import_react_dom4 = __toESM(require_react_dom());
var $f1701beae083dbae$var$PORTAL_NAME = "Portal";
var $f1701beae083dbae$export$602eac185826482c = (0, import_react18.forwardRef)((props, forwardedRef) => {
  var _globalThis$document;
  const { container = globalThis === null || globalThis === void 0 ? void 0 : (_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : _globalThis$document.body, ...portalProps } = props;
  return container ? import_react_dom4.default.createPortal((0, import_react18.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, portalProps, {
    ref: forwardedRef
  })), container) : null;
});
Object.assign($f1701beae083dbae$export$602eac185826482c, {
  displayName: $f1701beae083dbae$var$PORTAL_NAME
});

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-presence/dist/index.module.js
var import_react19 = __toESM(require_react());
var import_react_dom5 = __toESM(require_react_dom());
function $fe963b355347cc68$export$3e6543de14f8614f(initialState2, machine) {
  return (0, import_react19.useReducer)((state, event) => {
    const nextState = machine[state][event];
    return nextState !== null && nextState !== void 0 ? nextState : state;
  }, initialState2);
}
var $921a889cee6df7e8$export$99c2b779aa4e8b8b = (props) => {
  const { present, children } = props;
  const presence = $921a889cee6df7e8$var$usePresence(present);
  const child = typeof children === "function" ? children({
    present: presence.isPresent
  }) : import_react19.Children.only(children);
  const ref = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(presence.ref, child.ref);
  const forceMount = typeof children === "function";
  return forceMount || presence.isPresent ? (0, import_react19.cloneElement)(child, {
    ref
  }) : null;
};
$921a889cee6df7e8$export$99c2b779aa4e8b8b.displayName = "Presence";
function $921a889cee6df7e8$var$usePresence(present) {
  const [node1, setNode] = (0, import_react19.useState)();
  const stylesRef = (0, import_react19.useRef)({});
  const prevPresentRef = (0, import_react19.useRef)(present);
  const prevAnimationNameRef = (0, import_react19.useRef)("none");
  const initialState2 = present ? "mounted" : "unmounted";
  const [state, send] = $fe963b355347cc68$export$3e6543de14f8614f(initialState2, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: {
      MOUNT: "mounted"
    }
  });
  (0, import_react19.useEffect)(() => {
    const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
    prevAnimationNameRef.current = state === "mounted" ? currentAnimationName : "none";
  }, [
    state
  ]);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    const styles2 = stylesRef.current;
    const wasPresent = prevPresentRef.current;
    const hasPresentChanged = wasPresent !== present;
    if (hasPresentChanged) {
      const prevAnimationName = prevAnimationNameRef.current;
      const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(styles2);
      if (present) send("MOUNT");
      else if (currentAnimationName === "none" || (styles2 === null || styles2 === void 0 ? void 0 : styles2.display) === "none")
        send("UNMOUNT");
      else {
        const isAnimating = prevAnimationName !== currentAnimationName;
        if (wasPresent && isAnimating) send("ANIMATION_OUT");
        else send("UNMOUNT");
      }
      prevPresentRef.current = present;
    }
  }, [
    present,
    send
  ]);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (node1) {
      const handleAnimationEnd = (event) => {
        const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
        const isCurrentAnimation = currentAnimationName.includes(event.animationName);
        if (event.target === node1 && isCurrentAnimation)
          (0, import_react_dom5.flushSync)(
            () => send("ANIMATION_END")
          );
      };
      const handleAnimationStart = (event) => {
        if (event.target === node1)
          prevAnimationNameRef.current = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
      };
      node1.addEventListener("animationstart", handleAnimationStart);
      node1.addEventListener("animationcancel", handleAnimationEnd);
      node1.addEventListener("animationend", handleAnimationEnd);
      return () => {
        node1.removeEventListener("animationstart", handleAnimationStart);
        node1.removeEventListener("animationcancel", handleAnimationEnd);
        node1.removeEventListener("animationend", handleAnimationEnd);
      };
    } else
      send("ANIMATION_END");
  }, [
    node1,
    send
  ]);
  return {
    isPresent: [
      "mounted",
      "unmountSuspended"
    ].includes(state),
    ref: (0, import_react19.useCallback)((node) => {
      if (node) stylesRef.current = getComputedStyle(node);
      setNode(node);
    }, [])
  };
}
function $921a889cee6df7e8$var$getAnimationName(styles2) {
  return (styles2 === null || styles2 === void 0 ? void 0 : styles2.animationName) || "none";
}

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-focus-guards/dist/index.module.js
var import_react20 = __toESM(require_react());
var $3db38b7d1fb3fe6a$var$count = 0;
function $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c() {
  (0, import_react20.useEffect)(() => {
    var _edgeGuards$, _edgeGuards$2;
    const edgeGuards = document.querySelectorAll("[data-radix-focus-guard]");
    document.body.insertAdjacentElement("afterbegin", (_edgeGuards$ = edgeGuards[0]) !== null && _edgeGuards$ !== void 0 ? _edgeGuards$ : $3db38b7d1fb3fe6a$var$createFocusGuard());
    document.body.insertAdjacentElement("beforeend", (_edgeGuards$2 = edgeGuards[1]) !== null && _edgeGuards$2 !== void 0 ? _edgeGuards$2 : $3db38b7d1fb3fe6a$var$createFocusGuard());
    $3db38b7d1fb3fe6a$var$count++;
    return () => {
      if ($3db38b7d1fb3fe6a$var$count === 1) document.querySelectorAll("[data-radix-focus-guard]").forEach(
        (node) => node.remove()
      );
      $3db38b7d1fb3fe6a$var$count--;
    };
  }, []);
}
function $3db38b7d1fb3fe6a$var$createFocusGuard() {
  const element = document.createElement("span");
  element.setAttribute("data-radix-focus-guard", "");
  element.tabIndex = 0;
  element.style.cssText = "outline: none; opacity: 0; position: fixed; pointer-events: none";
  return element;
}

// ../../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/Combination.js
var React47 = __toESM(require_react());

// ../../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/UI.js
var React45 = __toESM(require_react());

// ../../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/medium.js
var effectCar2 = createSidecarMedium();

// ../../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/UI.js
var nothing2 = function() {
  return;
};
var RemoveScroll2 = React45.forwardRef(function(props, parentRef) {
  var ref = React45.useRef(null);
  var _a2 = React45.useState({
    onScrollCapture: nothing2,
    onWheelCapture: nothing2,
    onTouchMoveCapture: nothing2
  }), callbacks = _a2[0], setCallbacks = _a2[1];
  var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container2 = _b === void 0 ? "div" : _b, rest = __rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"]);
  var SideCar2 = sideCar;
  var containerRef = useMergeRefs([ref, parentRef]);
  var containerProps = __assign(__assign({}, rest), callbacks);
  return React45.createElement(
    React45.Fragment,
    null,
    enabled && React45.createElement(SideCar2, { sideCar: effectCar2, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref }),
    forwardProps ? React45.cloneElement(React45.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef })) : React45.createElement(Container2, __assign({}, containerProps, { className, ref: containerRef }), children)
  );
});
RemoveScroll2.defaultProps = {
  enabled: true,
  removeScrollBar: true,
  inert: false
};
RemoveScroll2.classNames = {
  fullWidth: fullWidthClassName,
  zeroRight: zeroRightClassName
};

// ../../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var React46 = __toESM(require_react());

// ../../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js
var passiveSupported2 = false;
if (typeof window !== "undefined") {
  try {
    options = Object.defineProperty({}, "passive", {
      get: function() {
        passiveSupported2 = true;
        return true;
      }
    });
    window.addEventListener("test", options, options);
    window.removeEventListener("test", options, options);
  } catch (err) {
    passiveSupported2 = false;
  }
}
var options;
var nonPassive2 = passiveSupported2 ? { passive: false } : false;

// ../../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/handleScroll.js
var elementCouldBeVScrolled2 = function(node) {
  var styles2 = window.getComputedStyle(node);
  return styles2.overflowY !== "hidden" && // not-not-scrollable
  !(styles2.overflowY === styles2.overflowX && styles2.overflowY === "visible");
};
var elementCouldBeHScrolled2 = function(node) {
  var styles2 = window.getComputedStyle(node);
  return styles2.overflowX !== "hidden" && // not-not-scrollable
  !(styles2.overflowY === styles2.overflowX && styles2.overflowX === "visible");
};
var locationCouldBeScrolled2 = function(axis, node) {
  var current = node;
  do {
    if (typeof ShadowRoot !== "undefined" && current instanceof ShadowRoot) {
      current = current.host;
    }
    var isScrollable = elementCouldBeScrolled2(axis, current);
    if (isScrollable) {
      var _a2 = getScrollVariables2(axis, current), s = _a2[1], d = _a2[2];
      if (s > d) {
        return true;
      }
    }
    current = current.parentNode;
  } while (current && current !== document.body);
  return false;
};
var getVScrollVariables2 = function(_a2) {
  var scrollTop = _a2.scrollTop, scrollHeight = _a2.scrollHeight, clientHeight = _a2.clientHeight;
  return [
    scrollTop,
    scrollHeight,
    clientHeight
  ];
};
var getHScrollVariables2 = function(_a2) {
  var scrollLeft = _a2.scrollLeft, scrollWidth = _a2.scrollWidth, clientWidth = _a2.clientWidth;
  return [
    scrollLeft,
    scrollWidth,
    clientWidth
  ];
};
var elementCouldBeScrolled2 = function(axis, node) {
  return axis === "v" ? elementCouldBeVScrolled2(node) : elementCouldBeHScrolled2(node);
};
var getScrollVariables2 = function(axis, node) {
  return axis === "v" ? getVScrollVariables2(node) : getHScrollVariables2(node);
};
var getDirectionFactor2 = function(axis, direction) {
  return axis === "h" && direction === "rtl" ? -1 : 1;
};
var handleScroll2 = function(axis, endTarget, event, sourceDelta, noOverscroll) {
  var directionFactor = getDirectionFactor2(axis, window.getComputedStyle(endTarget).direction);
  var delta = directionFactor * sourceDelta;
  var target = event.target;
  var targetInLock = endTarget.contains(target);
  var shouldCancelScroll = false;
  var isDeltaPositive = delta > 0;
  var availableScroll = 0;
  var availableScrollTop = 0;
  do {
    var _a2 = getScrollVariables2(axis, target), position = _a2[0], scroll_1 = _a2[1], capacity = _a2[2];
    var elementScroll = scroll_1 - capacity - directionFactor * position;
    if (position || elementScroll) {
      if (elementCouldBeScrolled2(axis, target)) {
        availableScroll += elementScroll;
        availableScrollTop += position;
      }
    }
    target = target.parentNode;
  } while (
    // portaled content
    !targetInLock && target !== document.body || // self content
    targetInLock && (endTarget.contains(target) || endTarget === target)
  );
  if (isDeltaPositive && (noOverscroll && availableScroll === 0 || !noOverscroll && delta > availableScroll)) {
    shouldCancelScroll = true;
  } else if (!isDeltaPositive && (noOverscroll && availableScrollTop === 0 || !noOverscroll && -delta > availableScrollTop)) {
    shouldCancelScroll = true;
  }
  return shouldCancelScroll;
};

// ../../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var getTouchXY2 = function(event) {
  return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
};
var getDeltaXY2 = function(event) {
  return [event.deltaX, event.deltaY];
};
var extractRef2 = function(ref) {
  return ref && "current" in ref ? ref.current : ref;
};
var deltaCompare2 = function(x, y) {
  return x[0] === y[0] && x[1] === y[1];
};
var generateStyle2 = function(id) {
  return "\n  .block-interactivity-".concat(id, " {pointer-events: none;}\n  .allow-interactivity-").concat(id, " {pointer-events: all;}\n");
};
var idCounter2 = 0;
var lockStack2 = [];
function RemoveScrollSideCar2(props) {
  var shouldPreventQueue = React46.useRef([]);
  var touchStartRef = React46.useRef([0, 0]);
  var activeAxis = React46.useRef();
  var id = React46.useState(idCounter2++)[0];
  var Style2 = React46.useState(function() {
    return styleSingleton();
  })[0];
  var lastProps = React46.useRef(props);
  React46.useEffect(function() {
    lastProps.current = props;
  }, [props]);
  React46.useEffect(function() {
    if (props.inert) {
      document.body.classList.add("block-interactivity-".concat(id));
      var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef2), true).filter(Boolean);
      allow_1.forEach(function(el) {
        return el.classList.add("allow-interactivity-".concat(id));
      });
      return function() {
        document.body.classList.remove("block-interactivity-".concat(id));
        allow_1.forEach(function(el) {
          return el.classList.remove("allow-interactivity-".concat(id));
        });
      };
    }
    return;
  }, [props.inert, props.lockRef.current, props.shards]);
  var shouldCancelEvent = React46.useCallback(function(event, parent) {
    if ("touches" in event && event.touches.length === 2) {
      return !lastProps.current.allowPinchZoom;
    }
    var touch = getTouchXY2(event);
    var touchStart = touchStartRef.current;
    var deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0];
    var deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1];
    var currentAxis;
    var target = event.target;
    var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
    if ("touches" in event && moveDirection === "h" && target.type === "range") {
      return false;
    }
    var canBeScrolledInMainDirection = locationCouldBeScrolled2(moveDirection, target);
    if (!canBeScrolledInMainDirection) {
      return true;
    }
    if (canBeScrolledInMainDirection) {
      currentAxis = moveDirection;
    } else {
      currentAxis = moveDirection === "v" ? "h" : "v";
      canBeScrolledInMainDirection = locationCouldBeScrolled2(moveDirection, target);
    }
    if (!canBeScrolledInMainDirection) {
      return false;
    }
    if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY)) {
      activeAxis.current = currentAxis;
    }
    if (!currentAxis) {
      return true;
    }
    var cancelingAxis = activeAxis.current || currentAxis;
    return handleScroll2(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, true);
  }, []);
  var shouldPrevent = React46.useCallback(function(_event) {
    var event = _event;
    if (!lockStack2.length || lockStack2[lockStack2.length - 1] !== Style2) {
      return;
    }
    var delta = "deltaY" in event ? getDeltaXY2(event) : getTouchXY2(event);
    var sourceEvent = shouldPreventQueue.current.filter(function(e) {
      return e.name === event.type && e.target === event.target && deltaCompare2(e.delta, delta);
    })[0];
    if (sourceEvent && sourceEvent.should) {
      event.preventDefault();
      return;
    }
    if (!sourceEvent) {
      var shardNodes = (lastProps.current.shards || []).map(extractRef2).filter(Boolean).filter(function(node) {
        return node.contains(event.target);
      });
      var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
      if (shouldStop) {
        event.preventDefault();
      }
    }
  }, []);
  var shouldCancel = React46.useCallback(function(name, delta, target, should) {
    var event = { name, delta, target, should };
    shouldPreventQueue.current.push(event);
    setTimeout(function() {
      shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e) {
        return e !== event;
      });
    }, 1);
  }, []);
  var scrollTouchStart = React46.useCallback(function(event) {
    touchStartRef.current = getTouchXY2(event);
    activeAxis.current = void 0;
  }, []);
  var scrollWheel = React46.useCallback(function(event) {
    shouldCancel(event.type, getDeltaXY2(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  var scrollTouchMove = React46.useCallback(function(event) {
    shouldCancel(event.type, getTouchXY2(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  React46.useEffect(function() {
    lockStack2.push(Style2);
    props.setCallbacks({
      onScrollCapture: scrollWheel,
      onWheelCapture: scrollWheel,
      onTouchMoveCapture: scrollTouchMove
    });
    document.addEventListener("wheel", shouldPrevent, nonPassive2);
    document.addEventListener("touchmove", shouldPrevent, nonPassive2);
    document.addEventListener("touchstart", scrollTouchStart, nonPassive2);
    return function() {
      lockStack2 = lockStack2.filter(function(inst) {
        return inst !== Style2;
      });
      document.removeEventListener("wheel", shouldPrevent, nonPassive2);
      document.removeEventListener("touchmove", shouldPrevent, nonPassive2);
      document.removeEventListener("touchstart", scrollTouchStart, nonPassive2);
    };
  }, []);
  var removeScrollBar = props.removeScrollBar, inert = props.inert;
  return React46.createElement(
    React46.Fragment,
    null,
    inert ? React46.createElement(Style2, { styles: generateStyle2(id) }) : null,
    removeScrollBar ? React46.createElement(RemoveScrollBar, { gapMode: "margin" }) : null
  );
}

// ../../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/sidecar.js
var sidecar_default2 = exportSidecar(effectCar2, RemoveScrollSideCar2);

// ../../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/Combination.js
var ReactRemoveScroll2 = React47.forwardRef(function(props, ref) {
  return React47.createElement(RemoveScroll2, __assign({}, props, { ref, sideCar: sidecar_default2 }));
});
ReactRemoveScroll2.classNames = RemoveScroll2.classNames;
var Combination_default2 = ReactRemoveScroll2;

// ../../../node_modules/cmdk/node_modules/@radix-ui/react-dialog/dist/index.module.js
var $5d3850c4d0b4e6c7$var$DIALOG_NAME = "Dialog";
var [$5d3850c4d0b4e6c7$var$createDialogContext, $5d3850c4d0b4e6c7$export$cc702773b8ea3e41] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($5d3850c4d0b4e6c7$var$DIALOG_NAME);
var [$5d3850c4d0b4e6c7$var$DialogProvider, $5d3850c4d0b4e6c7$var$useDialogContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$DIALOG_NAME);
var $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 = (props) => {
  const { __scopeDialog, children, open: openProp, defaultOpen, onOpenChange, modal = true } = props;
  const triggerRef = (0, import_react21.useRef)(null);
  const contentRef = (0, import_react21.useRef)(null);
  const [open = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return (0, import_react21.createElement)($5d3850c4d0b4e6c7$var$DialogProvider, {
    scope: __scopeDialog,
    triggerRef,
    contentRef,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    titleId: $1746a345f3d73bb7$export$f680877a34711e37(),
    descriptionId: $1746a345f3d73bb7$export$f680877a34711e37(),
    open,
    onOpenChange: setOpen,
    onOpenToggle: (0, import_react21.useCallback)(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    ),
    modal
  }, children);
};
Object.assign($5d3850c4d0b4e6c7$export$3ddf2d174ce01153, {
  displayName: $5d3850c4d0b4e6c7$var$DIALOG_NAME
});
var $5d3850c4d0b4e6c7$var$TRIGGER_NAME = "DialogTrigger";
var $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...triggerProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TRIGGER_NAME, __scopeDialog);
  const composedTriggerRef = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.triggerRef);
  return (0, import_react21.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button",
    "aria-haspopup": "dialog",
    "aria-expanded": context.open,
    "aria-controls": context.contentId,
    "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
  }, triggerProps, {
    ref: composedTriggerRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onOpenToggle)
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$2e1e1122cf0cba88, {
  displayName: $5d3850c4d0b4e6c7$var$TRIGGER_NAME
});
var $5d3850c4d0b4e6c7$var$PORTAL_NAME = "DialogPortal";
var [$5d3850c4d0b4e6c7$var$PortalProvider, $5d3850c4d0b4e6c7$var$usePortalContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, {
  forceMount: void 0
});
var $5d3850c4d0b4e6c7$export$dad7c95542bacce0 = (props) => {
  const { __scopeDialog, forceMount, children, container } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, __scopeDialog);
  return (0, import_react21.createElement)($5d3850c4d0b4e6c7$var$PortalProvider, {
    scope: __scopeDialog,
    forceMount
  }, import_react21.Children.map(
    children,
    (child) => (0, import_react21.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
      present: forceMount || context.open
    }, (0, import_react21.createElement)($f1701beae083dbae$export$602eac185826482c, {
      asChild: true,
      container
    }, child))
  ));
};
Object.assign($5d3850c4d0b4e6c7$export$dad7c95542bacce0, {
  displayName: $5d3850c4d0b4e6c7$var$PORTAL_NAME
});
var $5d3850c4d0b4e6c7$var$OVERLAY_NAME = "DialogOverlay";
var $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);
  const { forceMount = portalContext.forceMount, ...overlayProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);
  return context.modal ? (0, import_react21.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, (0, import_react21.createElement)($5d3850c4d0b4e6c7$var$DialogOverlayImpl, _extends({}, overlayProps, {
    ref: forwardedRef
  }))) : null;
});
Object.assign($5d3850c4d0b4e6c7$export$bd1d06c79be19e17, {
  displayName: $5d3850c4d0b4e6c7$var$OVERLAY_NAME
});
var $5d3850c4d0b4e6c7$var$DialogOverlayImpl = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...overlayProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, __scopeDialog);
  return (
    // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
    // ie. when `Overlay` and `Content` are siblings
    (0, import_react21.createElement)(Combination_default2, {
      as: $5e63c961fc1ce211$export$8c6ed5c666ac1360,
      allowPinchZoom: true,
      shards: [
        context.contentRef
      ]
    }, (0, import_react21.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
      "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
    }, overlayProps, {
      ref: forwardedRef,
      style: {
        pointerEvents: "auto",
        ...overlayProps.style
      }
    })))
  );
});
var $5d3850c4d0b4e6c7$var$CONTENT_NAME = "DialogContent";
var $5d3850c4d0b4e6c7$export$b6d9565de1e068cf = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const { forceMount = portalContext.forceMount, ...contentProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  return (0, import_react21.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, context.modal ? (0, import_react21.createElement)($5d3850c4d0b4e6c7$var$DialogContentModal, _extends({}, contentProps, {
    ref: forwardedRef
  })) : (0, import_react21.createElement)($5d3850c4d0b4e6c7$var$DialogContentNonModal, _extends({}, contentProps, {
    ref: forwardedRef
  })));
});
Object.assign($5d3850c4d0b4e6c7$export$b6d9565de1e068cf, {
  displayName: $5d3850c4d0b4e6c7$var$CONTENT_NAME
});
var $5d3850c4d0b4e6c7$var$DialogContentModal = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const contentRef = (0, import_react21.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.contentRef, contentRef);
  (0, import_react21.useEffect)(() => {
    const content = contentRef.current;
    if (content) return hideOthers(content);
  }, []);
  return (0, import_react21.createElement)($5d3850c4d0b4e6c7$var$DialogContentImpl, _extends({}, props, {
    ref: composedRefs,
    trapFocus: context.open,
    disableOutsidePointerEvents: true,
    onCloseAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onCloseAutoFocus, (event) => {
      var _context$triggerRef$c;
      event.preventDefault();
      (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();
    }),
    onPointerDownOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownOutside, (event) => {
      const originalEvent = event.detail.originalEvent;
      const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
      const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
      if (isRightClick) event.preventDefault();
    }),
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocusOutside,
      (event) => event.preventDefault()
    )
  }));
});
var $5d3850c4d0b4e6c7$var$DialogContentNonModal = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const hasInteractedOutsideRef = (0, import_react21.useRef)(false);
  return (0, import_react21.createElement)($5d3850c4d0b4e6c7$var$DialogContentImpl, _extends({}, props, {
    ref: forwardedRef,
    trapFocus: false,
    disableOutsidePointerEvents: false,
    onCloseAutoFocus: (event) => {
      var _props$onCloseAutoFoc;
      (_props$onCloseAutoFoc = props.onCloseAutoFocus) === null || _props$onCloseAutoFoc === void 0 || _props$onCloseAutoFoc.call(props, event);
      if (!event.defaultPrevented) {
        var _context$triggerRef$c2;
        if (!hasInteractedOutsideRef.current) (_context$triggerRef$c2 = context.triggerRef.current) === null || _context$triggerRef$c2 === void 0 || _context$triggerRef$c2.focus();
        event.preventDefault();
      }
      hasInteractedOutsideRef.current = false;
    },
    onInteractOutside: (event) => {
      var _props$onInteractOuts, _context$triggerRef$c3;
      (_props$onInteractOuts = props.onInteractOutside) === null || _props$onInteractOuts === void 0 || _props$onInteractOuts.call(props, event);
      if (!event.defaultPrevented) hasInteractedOutsideRef.current = true;
      const target = event.target;
      const targetIsTrigger = (_context$triggerRef$c3 = context.triggerRef.current) === null || _context$triggerRef$c3 === void 0 ? void 0 : _context$triggerRef$c3.contains(target);
      if (targetIsTrigger) event.preventDefault();
    }
  }));
});
var $5d3850c4d0b4e6c7$var$DialogContentImpl = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, __scopeDialog);
  const contentRef = (0, import_react21.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, contentRef);
  $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c();
  return (0, import_react21.createElement)(import_react21.Fragment, null, (0, import_react21.createElement)($d3863c46a17e8a28$export$20e40289641fbbb6, {
    asChild: true,
    loop: true,
    trapped: trapFocus,
    onMountAutoFocus: onOpenAutoFocus,
    onUnmountAutoFocus: onCloseAutoFocus
  }, (0, import_react21.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, _extends({
    role: "dialog",
    id: context.contentId,
    "aria-describedby": context.descriptionId,
    "aria-labelledby": context.titleId,
    "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
  }, contentProps, {
    ref: composedRefs,
    onDismiss: () => context.onOpenChange(false)
  }))), false);
});
var $5d3850c4d0b4e6c7$var$TITLE_NAME = "DialogTitle";
var $5d3850c4d0b4e6c7$export$16f7638e4a34b909 = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...titleProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TITLE_NAME, __scopeDialog);
  return (0, import_react21.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.h2, _extends({
    id: context.titleId
  }, titleProps, {
    ref: forwardedRef
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$16f7638e4a34b909, {
  displayName: $5d3850c4d0b4e6c7$var$TITLE_NAME
});
var $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME = "DialogDescription";
var $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...descriptionProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$DESCRIPTION_NAME, __scopeDialog);
  return (0, import_react21.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.p, _extends({
    id: context.descriptionId
  }, descriptionProps, {
    ref: forwardedRef
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$94e94c2ec2c954d5, {
  displayName: $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME
});
var $5d3850c4d0b4e6c7$var$CLOSE_NAME = "DialogClose";
var $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac = (0, import_react21.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...closeProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CLOSE_NAME, __scopeDialog);
  return (0, import_react21.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button"
  }, closeProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onClick,
      () => context.onOpenChange(false)
    )
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac, {
  displayName: $5d3850c4d0b4e6c7$var$CLOSE_NAME
});
function $5d3850c4d0b4e6c7$var$getState(open) {
  return open ? "open" : "closed";
}
var $5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME = "DialogTitleWarning";
var [$5d3850c4d0b4e6c7$export$69b62a49393917d6, $5d3850c4d0b4e6c7$var$useWarningContext] = $c512c27ab02ef895$export$fd42f52fd3ae1109($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME, {
  contentName: $5d3850c4d0b4e6c7$var$CONTENT_NAME,
  titleName: $5d3850c4d0b4e6c7$var$TITLE_NAME,
  docsSlug: "dialog"
});
var $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 = $5d3850c4d0b4e6c7$export$3ddf2d174ce01153;
var $5d3850c4d0b4e6c7$export$602eac185826482c = $5d3850c4d0b4e6c7$export$dad7c95542bacce0;
var $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff = $5d3850c4d0b4e6c7$export$bd1d06c79be19e17;
var $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 = $5d3850c4d0b4e6c7$export$b6d9565de1e068cf;

// ../../../node_modules/cmdk/dist/index.mjs
var t = __toESM(require_react(), 1);
var fe = '[cmdk-list-sizer=""]';
var O = '[cmdk-group=""]';
var U2 = '[cmdk-group-items=""]';
var me = '[cmdk-group-heading=""]';
var W2 = '[cmdk-item=""]';
var ae = `${W2}:not([aria-disabled="true"])`;
var B2 = "cmdk-item-select";
var S = "data-value";
var pe = (r2, c2) => W(r2, c2);
var se = t.createContext(void 0);
var A = () => t.useContext(se);
var ie = t.createContext(void 0);
var J2 = () => t.useContext(ie);
var ce = t.createContext(void 0);
var le = t.forwardRef((r2, c2) => {
  let n = t.useRef(null), o = w(() => {
    var e, s, a2;
    return { search: "", value: (a2 = (s = r2.value) != null ? s : (e = r2.defaultValue) == null ? void 0 : e.toLowerCase()) != null ? a2 : "", filtered: { count: 0, items: /* @__PURE__ */ new Map(), groups: /* @__PURE__ */ new Set() } };
  }), l = w(() => /* @__PURE__ */ new Set()), d = w(() => /* @__PURE__ */ new Map()), f = w(() => /* @__PURE__ */ new Map()), g = w(() => /* @__PURE__ */ new Set()), u2 = ue(r2), { label: b, children: p2, value: R, onValueChange: T, filter: I, shouldFilter: C, vimBindings: F = true, ...P } = r2, Q = t.useId(), K2 = t.useId(), V = t.useId(), E = Le();
  D2(() => {
    if (R !== void 0) {
      let e = R.trim().toLowerCase();
      o.current.value = e, E(6, Y2), m2.emit();
    }
  }, [R]);
  let m2 = t.useMemo(() => ({ subscribe: (e) => (g.current.add(e), () => g.current.delete(e)), snapshot: () => o.current, setState: (e, s, a2) => {
    var i, v, h;
    if (!Object.is(o.current[e], s)) {
      if (o.current[e] = s, e === "search") $(), N(), E(1, j);
      else if (e === "value") if (((i = u2.current) == null ? void 0 : i.value) !== void 0) {
        let x = s != null ? s : "";
        (h = (v = u2.current).onValueChange) == null || h.call(v, x);
        return;
      } else a2 || E(5, Y2);
      m2.emit();
    }
  }, emit: () => {
    g.current.forEach((e) => e());
  } }), []), M = t.useMemo(() => ({ value: (e, s) => {
    s !== f.current.get(e) && (f.current.set(e, s), o.current.filtered.items.set(e, X2(s)), E(2, () => {
      N(), m2.emit();
    }));
  }, item: (e, s) => (l.current.add(e), s && (d.current.has(s) ? d.current.get(s).add(e) : d.current.set(s, /* @__PURE__ */ new Set([e]))), E(3, () => {
    $(), N(), o.current.value || j(), m2.emit();
  }), () => {
    f.current.delete(e), l.current.delete(e), o.current.filtered.items.delete(e);
    let a2 = k2();
    E(4, () => {
      $(), (a2 == null ? void 0 : a2.getAttribute("id")) === e && j(), m2.emit();
    });
  }), group: (e) => (d.current.has(e) || d.current.set(e, /* @__PURE__ */ new Set()), () => {
    f.current.delete(e), d.current.delete(e);
  }), filter: () => u2.current.shouldFilter, label: b || r2["aria-label"], commandRef: n, listId: Q, inputId: V, labelId: K2 }), []);
  function X2(e) {
    var a2, i;
    let s = (i = (a2 = u2.current) == null ? void 0 : a2.filter) != null ? i : pe;
    return e ? s(e, o.current.search) : 0;
  }
  function N() {
    if (!n.current || !o.current.search || u2.current.shouldFilter === false) return;
    let e = o.current.filtered.items, s = [];
    o.current.filtered.groups.forEach((i) => {
      let v = d.current.get(i), h = 0;
      v.forEach((x) => {
        let G2 = e.get(x);
        h = Math.max(G2, h);
      }), s.push([i, h]);
    });
    let a2 = n.current.querySelector(fe);
    H2().sort((i, v) => {
      var G2, re;
      let h = i.getAttribute(S), x = v.getAttribute(S);
      return ((G2 = e.get(x)) != null ? G2 : 0) - ((re = e.get(h)) != null ? re : 0);
    }).forEach((i) => {
      let v = i.closest(U2);
      v ? v.appendChild(i.parentElement === v ? i : i.closest(`${U2} > *`)) : a2.appendChild(i.parentElement === a2 ? i : i.closest(`${U2} > *`));
    }), s.sort((i, v) => v[1] - i[1]).forEach((i) => {
      let v = n.current.querySelector(`${O}[${S}="${i[0]}"]`);
      v == null || v.parentElement.appendChild(v);
    });
  }
  function j() {
    let e = H2().find((a2) => !a2.ariaDisabled), s = e == null ? void 0 : e.getAttribute(S);
    m2.setState("value", s || void 0);
  }
  function $() {
    if (!o.current.search || u2.current.shouldFilter === false) {
      o.current.filtered.count = l.current.size;
      return;
    }
    o.current.filtered.groups = /* @__PURE__ */ new Set();
    let e = 0;
    for (let s of l.current) {
      let a2 = f.current.get(s), i = X2(a2);
      o.current.filtered.items.set(s, i), i > 0 && e++;
    }
    for (let [s, a2] of d.current) for (let i of a2) if (o.current.filtered.items.get(i) > 0) {
      o.current.filtered.groups.add(s);
      break;
    }
    o.current.filtered.count = e;
  }
  function Y2() {
    var s, a2, i;
    let e = k2();
    e && (((s = e.parentElement) == null ? void 0 : s.firstChild) === e && ((i = (a2 = e.closest(O)) == null ? void 0 : a2.querySelector(me)) == null || i.scrollIntoView({ block: "nearest" })), e.scrollIntoView({ block: "nearest" }));
  }
  function k2() {
    var e;
    return (e = n.current) == null ? void 0 : e.querySelector(`${W2}[aria-selected="true"]`);
  }
  function H2() {
    return Array.from(n.current.querySelectorAll(ae));
  }
  function q(e) {
    let a2 = H2()[e];
    a2 && m2.setState("value", a2.getAttribute(S));
  }
  function z(e) {
    var h;
    let s = k2(), a2 = H2(), i = a2.findIndex((x) => x === s), v = a2[i + e];
    (h = u2.current) != null && h.loop && (v = i + e < 0 ? a2[a2.length - 1] : i + e === a2.length ? a2[0] : a2[i + e]), v && m2.setState("value", v.getAttribute(S));
  }
  function Z(e) {
    let s = k2(), a2 = s == null ? void 0 : s.closest(O), i;
    for (; a2 && !i; ) a2 = e > 0 ? ye(a2, O) : xe(a2, O), i = a2 == null ? void 0 : a2.querySelector(ae);
    i ? m2.setState("value", i.getAttribute(S)) : z(e);
  }
  let ee = () => q(H2().length - 1), te = (e) => {
    e.preventDefault(), e.metaKey ? ee() : e.altKey ? Z(1) : z(1);
  }, ne = (e) => {
    e.preventDefault(), e.metaKey ? q(0) : e.altKey ? Z(-1) : z(-1);
  };
  return t.createElement("div", { ref: _([n, c2]), ...P, "cmdk-root": "", onKeyDown: (e) => {
    var s;
    if ((s = P.onKeyDown) == null || s.call(P, e), !e.defaultPrevented) switch (e.key) {
      case "n":
      case "j": {
        F && e.ctrlKey && te(e);
        break;
      }
      case "ArrowDown": {
        te(e);
        break;
      }
      case "p":
      case "k": {
        F && e.ctrlKey && ne(e);
        break;
      }
      case "ArrowUp": {
        ne(e);
        break;
      }
      case "Home": {
        e.preventDefault(), q(0);
        break;
      }
      case "End": {
        e.preventDefault(), ee();
        break;
      }
      case "Enter":
        if (!e.nativeEvent.isComposing) {
          e.preventDefault();
          let a2 = k2();
          if (a2) {
            let i = new Event(B2);
            a2.dispatchEvent(i);
          }
        }
    }
  } }, t.createElement("label", { "cmdk-label": "", htmlFor: M.inputId, id: M.labelId, style: Te }, b), t.createElement(ie.Provider, { value: m2 }, t.createElement(se.Provider, { value: M }, p2)));
});
var ve = t.forwardRef((r2, c2) => {
  var V, E;
  let n = t.useId(), o = t.useRef(null), l = t.useContext(ce), d = A(), f = ue(r2), g = (E = (V = f.current) == null ? void 0 : V.forceMount) != null ? E : l == null ? void 0 : l.forceMount;
  D2(() => d.item(n, l == null ? void 0 : l.id), []);
  let u2 = de(n, o, [r2.value, r2.children, o]), b = J2(), p2 = L((m2) => m2.value && m2.value === u2.current), R = L((m2) => g || d.filter() === false ? true : m2.search ? m2.filtered.items.get(n) > 0 : true);
  t.useEffect(() => {
    let m2 = o.current;
    if (!(!m2 || r2.disabled)) return m2.addEventListener(B2, T), () => m2.removeEventListener(B2, T);
  }, [R, r2.onSelect, r2.disabled]);
  function T() {
    var m2, M;
    I(), (M = (m2 = f.current).onSelect) == null || M.call(m2, u2.current);
  }
  function I() {
    b.setState("value", u2.current, true);
  }
  if (!R) return null;
  let { disabled: C, value: F, onSelect: P, forceMount: Q, ...K2 } = r2;
  return t.createElement("div", { ref: _([o, c2]), ...K2, id: n, "cmdk-item": "", role: "option", "aria-disabled": C || void 0, "aria-selected": p2 || void 0, "data-disabled": C || void 0, "data-selected": p2 || void 0, onPointerMove: C ? void 0 : I, onClick: C ? void 0 : T }, r2.children);
});
var ge = t.forwardRef((r2, c2) => {
  let { heading: n, children: o, forceMount: l, ...d } = r2, f = t.useId(), g = t.useRef(null), u2 = t.useRef(null), b = t.useId(), p2 = A(), R = L((C) => l || p2.filter() === false ? true : C.search ? C.filtered.groups.has(f) : true);
  D2(() => p2.group(f), []), de(f, g, [r2.value, r2.heading, u2]);
  let T = t.useMemo(() => ({ id: f, forceMount: l }), [l]), I = t.createElement(ce.Provider, { value: T }, o);
  return t.createElement("div", { ref: _([g, c2]), ...d, "cmdk-group": "", role: "presentation", hidden: R ? void 0 : true }, n && t.createElement("div", { ref: u2, "cmdk-group-heading": "", "aria-hidden": true, id: b }, n), t.createElement("div", { "cmdk-group-items": "", role: "group", "aria-labelledby": n ? b : void 0 }, I));
});
var Re = t.forwardRef((r2, c2) => {
  let { alwaysRender: n, ...o } = r2, l = t.useRef(null), d = L((f) => !f.search);
  return !n && !d ? null : t.createElement("div", { ref: _([l, c2]), ...o, "cmdk-separator": "", role: "separator" });
});
var be = t.forwardRef((r2, c2) => {
  let { onValueChange: n, ...o } = r2, l = r2.value != null, d = J2(), f = L((p2) => p2.search), g = L((p2) => p2.value), u2 = A(), b = t.useMemo(() => {
    var R;
    let p2 = (R = u2.commandRef.current) == null ? void 0 : R.querySelector(`${W2}[${S}="${g}"]`);
    return p2 == null ? void 0 : p2.getAttribute("id");
  }, [g, u2.commandRef]);
  return t.useEffect(() => {
    r2.value != null && d.setState("search", r2.value);
  }, [r2.value]), t.createElement("input", { ref: c2, ...o, "cmdk-input": "", autoComplete: "off", autoCorrect: "off", spellCheck: false, "aria-autocomplete": "list", role: "combobox", "aria-expanded": true, "aria-controls": u2.listId, "aria-labelledby": u2.labelId, "aria-activedescendant": b, id: u2.inputId, type: "text", value: l ? r2.value : f, onChange: (p2) => {
    l || d.setState("search", p2.target.value), n == null || n(p2.target.value);
  } });
});
var he = t.forwardRef((r2, c2) => {
  let { children: n, ...o } = r2, l = t.useRef(null), d = t.useRef(null), f = A();
  return t.useEffect(() => {
    if (d.current && l.current) {
      let g = d.current, u2 = l.current, b, p2 = new ResizeObserver(() => {
        b = requestAnimationFrame(() => {
          let R = g.offsetHeight;
          u2.style.setProperty("--cmdk-list-height", R.toFixed(1) + "px");
        });
      });
      return p2.observe(g), () => {
        cancelAnimationFrame(b), p2.unobserve(g);
      };
    }
  }, []), t.createElement("div", { ref: _([l, c2]), ...o, "cmdk-list": "", role: "listbox", "aria-label": "Suggestions", id: f.listId, "aria-labelledby": f.inputId }, t.createElement("div", { ref: d, "cmdk-list-sizer": "" }, n));
});
var Ee = t.forwardRef((r2, c2) => {
  let { open: n, onOpenChange: o, overlayClassName: l, contentClassName: d, container: f, ...g } = r2;
  return t.createElement($5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9, { open: n, onOpenChange: o }, t.createElement($5d3850c4d0b4e6c7$export$602eac185826482c, { container: f }, t.createElement($5d3850c4d0b4e6c7$export$c6fdb837b070b4ff, { "cmdk-overlay": "", className: l }), t.createElement($5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2, { "aria-label": r2.label, "cmdk-dialog": "", className: d }, t.createElement(le, { ref: c2, ...g }))));
});
var Se = t.forwardRef((r2, c2) => {
  let n = t.useRef(true), o = L((l) => l.filtered.count === 0);
  return t.useEffect(() => {
    n.current = false;
  }, []), n.current || !o ? null : t.createElement("div", { ref: c2, ...r2, "cmdk-empty": "", role: "presentation" });
});
var Ce = t.forwardRef((r2, c2) => {
  let { progress: n, children: o, ...l } = r2;
  return t.createElement("div", { ref: c2, ...l, "cmdk-loading": "", role: "progressbar", "aria-valuenow": n, "aria-valuemin": 0, "aria-valuemax": 100, "aria-label": "Loading..." }, t.createElement("div", { "aria-hidden": true }, o));
});
var we = Object.assign(le, { List: he, Item: ve, Input: be, Group: ge, Separator: Re, Dialog: Ee, Empty: Se, Loading: Ce });
function ye(r2, c2) {
  let n = r2.nextElementSibling;
  for (; n; ) {
    if (n.matches(c2)) return n;
    n = n.nextElementSibling;
  }
}
function xe(r2, c2) {
  let n = r2.previousElementSibling;
  for (; n; ) {
    if (n.matches(c2)) return n;
    n = n.previousElementSibling;
  }
}
function ue(r2) {
  let c2 = t.useRef(r2);
  return D2(() => {
    c2.current = r2;
  }), c2;
}
var D2 = typeof window == "undefined" ? t.useEffect : t.useLayoutEffect;
function w(r2) {
  let c2 = t.useRef();
  return c2.current === void 0 && (c2.current = r2()), c2;
}
function _(r2) {
  return (c2) => {
    r2.forEach((n) => {
      typeof n == "function" ? n(c2) : n != null && (n.current = c2);
    });
  };
}
function L(r2) {
  let c2 = J2(), n = () => r2(c2.snapshot());
  return t.useSyncExternalStore(c2.subscribe, n, n);
}
function de(r2, c2, n) {
  let o = t.useRef(), l = A();
  return D2(() => {
    var f;
    let d = (() => {
      var g;
      for (let u2 of n) {
        if (typeof u2 == "string") return u2.trim().toLowerCase();
        if (typeof u2 == "object" && "current" in u2) return u2.current ? (g = u2.current.textContent) == null ? void 0 : g.trim().toLowerCase() : o.current;
      }
    })();
    l.value(r2, d), (f = c2.current) == null || f.setAttribute(S, d), o.current = d;
  }), o;
}
var Le = () => {
  let [r2, c2] = t.useState(), n = w(() => /* @__PURE__ */ new Map());
  return D2(() => {
    n.current.forEach((o) => o()), n.current = /* @__PURE__ */ new Map();
  }, [r2]), (o, l) => {
    n.current.set(o, l), c2({});
  };
};
var Te = { position: "absolute", width: "1px", height: "1px", padding: "0", margin: "-1px", overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", borderWidth: "0" };

// ../../../node_modules/@radix-ui/react-separator/dist/index.mjs
var React48 = __toESM(require_react(), 1);
var import_jsx_runtime22 = __toESM(require_jsx_runtime(), 1);
var NAME4 = "Separator";
var DEFAULT_ORIENTATION = "horizontal";
var ORIENTATIONS = ["horizontal", "vertical"];
var Separator3 = React48.forwardRef((props, forwardedRef) => {
  const { decorative, orientation: orientationProp = DEFAULT_ORIENTATION, ...domProps } = props;
  const orientation = isValidOrientation(orientationProp) ? orientationProp : DEFAULT_ORIENTATION;
  const ariaOrientation = orientation === "vertical" ? orientation : void 0;
  const semanticProps = decorative ? { role: "none" } : { "aria-orientation": ariaOrientation, role: "separator" };
  return (0, import_jsx_runtime22.jsx)(
    Primitive.div,
    {
      "data-orientation": orientation,
      ...semanticProps,
      ...domProps,
      ref: forwardedRef
    }
  );
});
Separator3.displayName = NAME4;
function isValidOrientation(orientation) {
  return ORIENTATIONS.includes(orientation);
}
var Root8 = Separator3;

// ../../../node_modules/@radix-ui/react-radio-group/dist/index.mjs
var React211 = __toESM(require_react(), 1);
var React49 = __toESM(require_react(), 1);
var import_jsx_runtime23 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime24 = __toESM(require_jsx_runtime(), 1);
var RADIO_NAME = "Radio";
var [createRadioContext, createRadioScope] = createContextScope(RADIO_NAME);
var [RadioProvider, useRadioContext] = createRadioContext(RADIO_NAME);
var Radio = React49.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeRadio,
      name,
      checked = false,
      required,
      disabled,
      value = "on",
      onCheck,
      form,
      ...radioProps
    } = props;
    const [button, setButton] = React49.useState(null);
    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));
    const hasConsumerStoppedPropagationRef = React49.useRef(false);
    const isFormControl = button ? form || !!button.closest("form") : true;
    return (0, import_jsx_runtime23.jsxs)(RadioProvider, { scope: __scopeRadio, checked, disabled, children: [
      (0, import_jsx_runtime23.jsx)(
        Primitive.button,
        {
          type: "button",
          role: "radio",
          "aria-checked": checked,
          "data-state": getState5(checked),
          "data-disabled": disabled ? "" : void 0,
          disabled,
          value,
          ...radioProps,
          ref: composedRefs,
          onClick: composeEventHandlers(props.onClick, (event) => {
            if (!checked) onCheck == null ? void 0 : onCheck();
            if (isFormControl) {
              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();
            }
          })
        }
      ),
      isFormControl && (0, import_jsx_runtime23.jsx)(
        RadioBubbleInput,
        {
          control: button,
          bubbles: !hasConsumerStoppedPropagationRef.current,
          name,
          value,
          checked,
          required,
          disabled,
          form,
          style: { transform: "translateX(-100%)" }
        }
      )
    ] });
  }
);
Radio.displayName = RADIO_NAME;
var INDICATOR_NAME4 = "RadioIndicator";
var RadioIndicator = React49.forwardRef(
  (props, forwardedRef) => {
    const { __scopeRadio, forceMount, ...indicatorProps } = props;
    const context = useRadioContext(INDICATOR_NAME4, __scopeRadio);
    return (0, import_jsx_runtime23.jsx)(Presence, { present: forceMount || context.checked, children: (0, import_jsx_runtime23.jsx)(
      Primitive.span,
      {
        "data-state": getState5(context.checked),
        "data-disabled": context.disabled ? "" : void 0,
        ...indicatorProps,
        ref: forwardedRef
      }
    ) });
  }
);
RadioIndicator.displayName = INDICATOR_NAME4;
var BUBBLE_INPUT_NAME2 = "RadioBubbleInput";
var RadioBubbleInput = React49.forwardRef(
  ({
    __scopeRadio,
    control,
    checked,
    bubbles = true,
    ...props
  }, forwardedRef) => {
    const ref = React49.useRef(null);
    const composedRefs = useComposedRefs(ref, forwardedRef);
    const prevChecked = usePrevious(checked);
    const controlSize = useSize(control);
    React49.useEffect(() => {
      const input = ref.current;
      if (!input) return;
      const inputProto = window.HTMLInputElement.prototype;
      const descriptor = Object.getOwnPropertyDescriptor(
        inputProto,
        "checked"
      );
      const setChecked = descriptor.set;
      if (prevChecked !== checked && setChecked) {
        const event = new Event("click", { bubbles });
        setChecked.call(input, checked);
        input.dispatchEvent(event);
      }
    }, [prevChecked, checked, bubbles]);
    return (0, import_jsx_runtime23.jsx)(
      Primitive.input,
      {
        type: "radio",
        "aria-hidden": true,
        defaultChecked: checked,
        ...props,
        tabIndex: -1,
        ref: composedRefs,
        style: {
          ...props.style,
          ...controlSize,
          position: "absolute",
          pointerEvents: "none",
          opacity: 0,
          margin: 0
        }
      }
    );
  }
);
RadioBubbleInput.displayName = BUBBLE_INPUT_NAME2;
function getState5(checked) {
  return checked ? "checked" : "unchecked";
}
var ARROW_KEYS = ["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight"];
var RADIO_GROUP_NAME4 = "RadioGroup";
var [createRadioGroupContext, createRadioGroupScope] = createContextScope(RADIO_GROUP_NAME4, [
  createRovingFocusGroupScope,
  createRadioScope
]);
var useRovingFocusGroupScope3 = createRovingFocusGroupScope();
var useRadioScope = createRadioScope();
var [RadioGroupProvider2, useRadioGroupContext2] = createRadioGroupContext(RADIO_GROUP_NAME4);
var RadioGroup3 = React211.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeRadioGroup,
      name,
      defaultValue,
      value: valueProp,
      required = false,
      disabled = false,
      orientation,
      dir,
      loop = true,
      onValueChange,
      ...groupProps
    } = props;
    const rovingFocusGroupScope = useRovingFocusGroupScope3(__scopeRadioGroup);
    const direction = useDirection(dir);
    const [value, setValue] = useControllableState({
      prop: valueProp,
      defaultProp: defaultValue ?? null,
      onChange: onValueChange,
      caller: RADIO_GROUP_NAME4
    });
    return (0, import_jsx_runtime24.jsx)(
      RadioGroupProvider2,
      {
        scope: __scopeRadioGroup,
        name,
        required,
        disabled,
        value,
        onValueChange: setValue,
        children: (0, import_jsx_runtime24.jsx)(
          Root7,
          {
            asChild: true,
            ...rovingFocusGroupScope,
            orientation,
            dir: direction,
            loop,
            children: (0, import_jsx_runtime24.jsx)(
              Primitive.div,
              {
                role: "radiogroup",
                "aria-required": required,
                "aria-orientation": orientation,
                "data-disabled": disabled ? "" : void 0,
                dir: direction,
                ...groupProps,
                ref: forwardedRef
              }
            )
          }
        )
      }
    );
  }
);
RadioGroup3.displayName = RADIO_GROUP_NAME4;
var ITEM_NAME5 = "RadioGroupItem";
var RadioGroupItem = React211.forwardRef(
  (props, forwardedRef) => {
    const { __scopeRadioGroup, disabled, ...itemProps } = props;
    const context = useRadioGroupContext2(ITEM_NAME5, __scopeRadioGroup);
    const isDisabled = context.disabled || disabled;
    const rovingFocusGroupScope = useRovingFocusGroupScope3(__scopeRadioGroup);
    const radioScope = useRadioScope(__scopeRadioGroup);
    const ref = React211.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, ref);
    const checked = context.value === itemProps.value;
    const isArrowKeyPressedRef = React211.useRef(false);
    React211.useEffect(() => {
      const handleKeyDown = (event) => {
        if (ARROW_KEYS.includes(event.key)) {
          isArrowKeyPressedRef.current = true;
        }
      };
      const handleKeyUp = () => isArrowKeyPressedRef.current = false;
      document.addEventListener("keydown", handleKeyDown);
      document.addEventListener("keyup", handleKeyUp);
      return () => {
        document.removeEventListener("keydown", handleKeyDown);
        document.removeEventListener("keyup", handleKeyUp);
      };
    }, []);
    return (0, import_jsx_runtime24.jsx)(
      Item,
      {
        asChild: true,
        ...rovingFocusGroupScope,
        focusable: !isDisabled,
        active: checked,
        children: (0, import_jsx_runtime24.jsx)(
          Radio,
          {
            disabled: isDisabled,
            required: context.required,
            checked,
            ...radioScope,
            ...itemProps,
            name: context.name,
            ref: composedRefs,
            onCheck: () => context.onValueChange(itemProps.value),
            onKeyDown: composeEventHandlers((event) => {
              if (event.key === "Enter") event.preventDefault();
            }),
            onFocus: composeEventHandlers(itemProps.onFocus, () => {
              var _a2;
              if (isArrowKeyPressedRef.current) (_a2 = ref.current) == null ? void 0 : _a2.click();
            })
          }
        )
      }
    );
  }
);
RadioGroupItem.displayName = ITEM_NAME5;
var INDICATOR_NAME22 = "RadioGroupIndicator";
var RadioGroupIndicator = React211.forwardRef(
  (props, forwardedRef) => {
    const { __scopeRadioGroup, ...indicatorProps } = props;
    const radioScope = useRadioScope(__scopeRadioGroup);
    return (0, import_jsx_runtime24.jsx)(RadioIndicator, { ...radioScope, ...indicatorProps, ref: forwardedRef });
  }
);
RadioGroupIndicator.displayName = INDICATOR_NAME22;
var Root25 = RadioGroup3;
var Item23 = RadioGroupItem;
var Indicator = RadioGroupIndicator;

// ../../../node_modules/@radix-ui/react-select/dist/index.mjs
var React50 = __toESM(require_react(), 1);
var ReactDOM4 = __toESM(require_react_dom(), 1);

// ../../../node_modules/@radix-ui/number/dist/index.mjs
function clamp2(value, [min2, max2]) {
  return Math.min(max2, Math.max(min2, value));
}

// ../../../node_modules/@radix-ui/react-select/dist/index.mjs
var import_jsx_runtime25 = __toESM(require_jsx_runtime(), 1);
var OPEN_KEYS = [" ", "Enter", "ArrowUp", "ArrowDown"];
var SELECTION_KEYS2 = [" ", "Enter"];
var SELECT_NAME = "Select";
var [Collection4, useCollection4, createCollectionScope4] = createCollection(SELECT_NAME);
var [createSelectContext, createSelectScope] = createContextScope(SELECT_NAME, [
  createCollectionScope4,
  createPopperScope
]);
var usePopperScope3 = createPopperScope();
var [SelectProvider, useSelectContext] = createSelectContext(SELECT_NAME);
var [SelectNativeOptionsProvider, useSelectNativeOptionsContext] = createSelectContext(SELECT_NAME);
var Select = (props) => {
  const {
    __scopeSelect,
    children,
    open: openProp,
    defaultOpen,
    onOpenChange,
    value: valueProp,
    defaultValue,
    onValueChange,
    dir,
    name,
    autoComplete,
    disabled,
    required,
    form
  } = props;
  const popperScope = usePopperScope3(__scopeSelect);
  const [trigger, setTrigger] = React50.useState(null);
  const [valueNode, setValueNode] = React50.useState(null);
  const [valueNodeHasChildren, setValueNodeHasChildren] = React50.useState(false);
  const direction = useDirection(dir);
  const [open, setOpen] = useControllableState({
    prop: openProp,
    defaultProp: defaultOpen ?? false,
    onChange: onOpenChange,
    caller: SELECT_NAME
  });
  const [value, setValue] = useControllableState({
    prop: valueProp,
    defaultProp: defaultValue,
    onChange: onValueChange,
    caller: SELECT_NAME
  });
  const triggerPointerDownPosRef = React50.useRef(null);
  const isFormControl = trigger ? form || !!trigger.closest("form") : true;
  const [nativeOptionsSet, setNativeOptionsSet] = React50.useState(/* @__PURE__ */ new Set());
  const nativeSelectKey = Array.from(nativeOptionsSet).map((option) => option.props.value).join(";");
  return (0, import_jsx_runtime25.jsx)(Root22, { ...popperScope, children: (0, import_jsx_runtime25.jsxs)(
    SelectProvider,
    {
      required,
      scope: __scopeSelect,
      trigger,
      onTriggerChange: setTrigger,
      valueNode,
      onValueNodeChange: setValueNode,
      valueNodeHasChildren,
      onValueNodeHasChildrenChange: setValueNodeHasChildren,
      contentId: useId(),
      value,
      onValueChange: setValue,
      open,
      onOpenChange: setOpen,
      dir: direction,
      triggerPointerDownPosRef,
      disabled,
      children: [
        (0, import_jsx_runtime25.jsx)(Collection4.Provider, { scope: __scopeSelect, children: (0, import_jsx_runtime25.jsx)(
          SelectNativeOptionsProvider,
          {
            scope: props.__scopeSelect,
            onNativeOptionAdd: React50.useCallback((option) => {
              setNativeOptionsSet((prev) => new Set(prev).add(option));
            }, []),
            onNativeOptionRemove: React50.useCallback((option) => {
              setNativeOptionsSet((prev) => {
                const optionsSet = new Set(prev);
                optionsSet.delete(option);
                return optionsSet;
              });
            }, []),
            children
          }
        ) }),
        isFormControl ? (0, import_jsx_runtime25.jsxs)(
          SelectBubbleInput,
          {
            "aria-hidden": true,
            required,
            tabIndex: -1,
            name,
            autoComplete,
            value,
            onChange: (event) => setValue(event.target.value),
            disabled,
            form,
            children: [
              value === void 0 ? (0, import_jsx_runtime25.jsx)("option", { value: "" }) : null,
              Array.from(nativeOptionsSet)
            ]
          },
          nativeSelectKey
        ) : null
      ]
    }
  ) });
};
Select.displayName = SELECT_NAME;
var TRIGGER_NAME7 = "SelectTrigger";
var SelectTrigger = React50.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, disabled = false, ...triggerProps } = props;
    const popperScope = usePopperScope3(__scopeSelect);
    const context = useSelectContext(TRIGGER_NAME7, __scopeSelect);
    const isDisabled = context.disabled || disabled;
    const composedRefs = useComposedRefs(forwardedRef, context.onTriggerChange);
    const getItems = useCollection4(__scopeSelect);
    const pointerTypeRef = React50.useRef("touch");
    const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search) => {
      const enabledItems = getItems().filter((item) => !item.disabled);
      const currentItem = enabledItems.find((item) => item.value === context.value);
      const nextItem = findNextItem(enabledItems, search, currentItem);
      if (nextItem !== void 0) {
        context.onValueChange(nextItem.value);
      }
    });
    const handleOpen = (pointerEvent) => {
      if (!isDisabled) {
        context.onOpenChange(true);
        resetTypeahead();
      }
      if (pointerEvent) {
        context.triggerPointerDownPosRef.current = {
          x: Math.round(pointerEvent.pageX),
          y: Math.round(pointerEvent.pageY)
        };
      }
    };
    return (0, import_jsx_runtime25.jsx)(Anchor, { asChild: true, ...popperScope, children: (0, import_jsx_runtime25.jsx)(
      Primitive.button,
      {
        type: "button",
        role: "combobox",
        "aria-controls": context.contentId,
        "aria-expanded": context.open,
        "aria-required": context.required,
        "aria-autocomplete": "none",
        dir: context.dir,
        "data-state": context.open ? "open" : "closed",
        disabled: isDisabled,
        "data-disabled": isDisabled ? "" : void 0,
        "data-placeholder": shouldShowPlaceholder(context.value) ? "" : void 0,
        ...triggerProps,
        ref: composedRefs,
        onClick: composeEventHandlers(triggerProps.onClick, (event) => {
          event.currentTarget.focus();
          if (pointerTypeRef.current !== "mouse") {
            handleOpen(event);
          }
        }),
        onPointerDown: composeEventHandlers(triggerProps.onPointerDown, (event) => {
          pointerTypeRef.current = event.pointerType;
          const target = event.target;
          if (target.hasPointerCapture(event.pointerId)) {
            target.releasePointerCapture(event.pointerId);
          }
          if (event.button === 0 && event.ctrlKey === false && event.pointerType === "mouse") {
            handleOpen(event);
            event.preventDefault();
          }
        }),
        onKeyDown: composeEventHandlers(triggerProps.onKeyDown, (event) => {
          const isTypingAhead = searchRef.current !== "";
          const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
          if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);
          if (isTypingAhead && event.key === " ") return;
          if (OPEN_KEYS.includes(event.key)) {
            handleOpen();
            event.preventDefault();
          }
        })
      }
    ) });
  }
);
SelectTrigger.displayName = TRIGGER_NAME7;
var VALUE_NAME = "SelectValue";
var SelectValue = React50.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, className, style, children, placeholder = "", ...valueProps } = props;
    const context = useSelectContext(VALUE_NAME, __scopeSelect);
    const { onValueNodeHasChildrenChange } = context;
    const hasChildren = children !== void 0;
    const composedRefs = useComposedRefs(forwardedRef, context.onValueNodeChange);
    useLayoutEffect2(() => {
      onValueNodeHasChildrenChange(hasChildren);
    }, [onValueNodeHasChildrenChange, hasChildren]);
    return (0, import_jsx_runtime25.jsx)(
      Primitive.span,
      {
        ...valueProps,
        ref: composedRefs,
        style: { pointerEvents: "none" },
        children: shouldShowPlaceholder(context.value) ? (0, import_jsx_runtime25.jsx)(import_jsx_runtime25.Fragment, { children: placeholder }) : children
      }
    );
  }
);
SelectValue.displayName = VALUE_NAME;
var ICON_NAME = "SelectIcon";
var SelectIcon = React50.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, children, ...iconProps } = props;
    return (0, import_jsx_runtime25.jsx)(Primitive.span, { "aria-hidden": true, ...iconProps, ref: forwardedRef, children: children || "▼" });
  }
);
SelectIcon.displayName = ICON_NAME;
var PORTAL_NAME7 = "SelectPortal";
var SelectPortal = (props) => {
  return (0, import_jsx_runtime25.jsx)(Portal, { asChild: true, ...props });
};
SelectPortal.displayName = PORTAL_NAME7;
var CONTENT_NAME8 = "SelectContent";
var SelectContent = React50.forwardRef(
  (props, forwardedRef) => {
    const context = useSelectContext(CONTENT_NAME8, props.__scopeSelect);
    const [fragment, setFragment] = React50.useState();
    useLayoutEffect2(() => {
      setFragment(new DocumentFragment());
    }, []);
    if (!context.open) {
      const frag = fragment;
      return frag ? ReactDOM4.createPortal(
        (0, import_jsx_runtime25.jsx)(SelectContentProvider, { scope: props.__scopeSelect, children: (0, import_jsx_runtime25.jsx)(Collection4.Slot, { scope: props.__scopeSelect, children: (0, import_jsx_runtime25.jsx)("div", { children: props.children }) }) }),
        frag
      ) : null;
    }
    return (0, import_jsx_runtime25.jsx)(SelectContentImpl, { ...props, ref: forwardedRef });
  }
);
SelectContent.displayName = CONTENT_NAME8;
var CONTENT_MARGIN = 10;
var [SelectContentProvider, useSelectContentContext] = createSelectContext(CONTENT_NAME8);
var CONTENT_IMPL_NAME = "SelectContentImpl";
var Slot5 = createSlot("SelectContent.RemoveScroll");
var SelectContentImpl = React50.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeSelect,
      position = "item-aligned",
      onCloseAutoFocus,
      onEscapeKeyDown,
      onPointerDownOutside,
      //
      // PopperContent props
      side,
      sideOffset,
      align,
      alignOffset,
      arrowPadding,
      collisionBoundary,
      collisionPadding,
      sticky,
      hideWhenDetached,
      avoidCollisions,
      //
      ...contentProps
    } = props;
    const context = useSelectContext(CONTENT_NAME8, __scopeSelect);
    const [content, setContent] = React50.useState(null);
    const [viewport, setViewport] = React50.useState(null);
    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));
    const [selectedItem, setSelectedItem] = React50.useState(null);
    const [selectedItemText, setSelectedItemText] = React50.useState(
      null
    );
    const getItems = useCollection4(__scopeSelect);
    const [isPositioned, setIsPositioned] = React50.useState(false);
    const firstValidItemFoundRef = React50.useRef(false);
    React50.useEffect(() => {
      if (content) return hideOthers(content);
    }, [content]);
    useFocusGuards();
    const focusFirst4 = React50.useCallback(
      (candidates) => {
        const [firstItem, ...restItems] = getItems().map((item) => item.ref.current);
        const [lastItem] = restItems.slice(-1);
        const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
        for (const candidate of candidates) {
          if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;
          candidate == null ? void 0 : candidate.scrollIntoView({ block: "nearest" });
          if (candidate === firstItem && viewport) viewport.scrollTop = 0;
          if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;
          candidate == null ? void 0 : candidate.focus();
          if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;
        }
      },
      [getItems, viewport]
    );
    const focusSelectedItem = React50.useCallback(
      () => focusFirst4([selectedItem, content]),
      [focusFirst4, selectedItem, content]
    );
    React50.useEffect(() => {
      if (isPositioned) {
        focusSelectedItem();
      }
    }, [isPositioned, focusSelectedItem]);
    const { onOpenChange, triggerPointerDownPosRef } = context;
    React50.useEffect(() => {
      if (content) {
        let pointerMoveDelta = { x: 0, y: 0 };
        const handlePointerMove = (event) => {
          var _a2, _b;
          pointerMoveDelta = {
            x: Math.abs(Math.round(event.pageX) - (((_a2 = triggerPointerDownPosRef.current) == null ? void 0 : _a2.x) ?? 0)),
            y: Math.abs(Math.round(event.pageY) - (((_b = triggerPointerDownPosRef.current) == null ? void 0 : _b.y) ?? 0))
          };
        };
        const handlePointerUp = (event) => {
          if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {
            event.preventDefault();
          } else {
            if (!content.contains(event.target)) {
              onOpenChange(false);
            }
          }
          document.removeEventListener("pointermove", handlePointerMove);
          triggerPointerDownPosRef.current = null;
        };
        if (triggerPointerDownPosRef.current !== null) {
          document.addEventListener("pointermove", handlePointerMove);
          document.addEventListener("pointerup", handlePointerUp, { capture: true, once: true });
        }
        return () => {
          document.removeEventListener("pointermove", handlePointerMove);
          document.removeEventListener("pointerup", handlePointerUp, { capture: true });
        };
      }
    }, [content, onOpenChange, triggerPointerDownPosRef]);
    React50.useEffect(() => {
      const close = () => onOpenChange(false);
      window.addEventListener("blur", close);
      window.addEventListener("resize", close);
      return () => {
        window.removeEventListener("blur", close);
        window.removeEventListener("resize", close);
      };
    }, [onOpenChange]);
    const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search) => {
      const enabledItems = getItems().filter((item) => !item.disabled);
      const currentItem = enabledItems.find((item) => item.ref.current === document.activeElement);
      const nextItem = findNextItem(enabledItems, search, currentItem);
      if (nextItem) {
        setTimeout(() => nextItem.ref.current.focus());
      }
    });
    const itemRefCallback = React50.useCallback(
      (node, value, disabled) => {
        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;
        const isSelectedItem = context.value !== void 0 && context.value === value;
        if (isSelectedItem || isFirstValidItem) {
          setSelectedItem(node);
          if (isFirstValidItem) firstValidItemFoundRef.current = true;
        }
      },
      [context.value]
    );
    const handleItemLeave = React50.useCallback(() => content == null ? void 0 : content.focus(), [content]);
    const itemTextRefCallback = React50.useCallback(
      (node, value, disabled) => {
        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;
        const isSelectedItem = context.value !== void 0 && context.value === value;
        if (isSelectedItem || isFirstValidItem) {
          setSelectedItemText(node);
        }
      },
      [context.value]
    );
    const SelectPosition = position === "popper" ? SelectPopperPosition : SelectItemAlignedPosition;
    const popperContentProps = SelectPosition === SelectPopperPosition ? {
      side,
      sideOffset,
      align,
      alignOffset,
      arrowPadding,
      collisionBoundary,
      collisionPadding,
      sticky,
      hideWhenDetached,
      avoidCollisions
    } : {};
    return (0, import_jsx_runtime25.jsx)(
      SelectContentProvider,
      {
        scope: __scopeSelect,
        content,
        viewport,
        onViewportChange: setViewport,
        itemRefCallback,
        selectedItem,
        onItemLeave: handleItemLeave,
        itemTextRefCallback,
        focusSelectedItem,
        selectedItemText,
        position,
        isPositioned,
        searchRef,
        children: (0, import_jsx_runtime25.jsx)(Combination_default, { as: Slot5, allowPinchZoom: true, children: (0, import_jsx_runtime25.jsx)(
          FocusScope,
          {
            asChild: true,
            trapped: context.open,
            onMountAutoFocus: (event) => {
              event.preventDefault();
            },
            onUnmountAutoFocus: composeEventHandlers(onCloseAutoFocus, (event) => {
              var _a2;
              (_a2 = context.trigger) == null ? void 0 : _a2.focus({ preventScroll: true });
              event.preventDefault();
            }),
            children: (0, import_jsx_runtime25.jsx)(
              DismissableLayer,
              {
                asChild: true,
                disableOutsidePointerEvents: true,
                onEscapeKeyDown,
                onPointerDownOutside,
                onFocusOutside: (event) => event.preventDefault(),
                onDismiss: () => context.onOpenChange(false),
                children: (0, import_jsx_runtime25.jsx)(
                  SelectPosition,
                  {
                    role: "listbox",
                    id: context.contentId,
                    "data-state": context.open ? "open" : "closed",
                    dir: context.dir,
                    onContextMenu: (event) => event.preventDefault(),
                    ...contentProps,
                    ...popperContentProps,
                    onPlaced: () => setIsPositioned(true),
                    ref: composedRefs,
                    style: {
                      // flex layout so we can place the scroll buttons properly
                      display: "flex",
                      flexDirection: "column",
                      // reset the outline by default as the content MAY get focused
                      outline: "none",
                      ...contentProps.style
                    },
                    onKeyDown: composeEventHandlers(contentProps.onKeyDown, (event) => {
                      const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
                      if (event.key === "Tab") event.preventDefault();
                      if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);
                      if (["ArrowUp", "ArrowDown", "Home", "End"].includes(event.key)) {
                        const items = getItems().filter((item) => !item.disabled);
                        let candidateNodes = items.map((item) => item.ref.current);
                        if (["ArrowUp", "End"].includes(event.key)) {
                          candidateNodes = candidateNodes.slice().reverse();
                        }
                        if (["ArrowUp", "ArrowDown"].includes(event.key)) {
                          const currentElement = event.target;
                          const currentIndex = candidateNodes.indexOf(currentElement);
                          candidateNodes = candidateNodes.slice(currentIndex + 1);
                        }
                        setTimeout(() => focusFirst4(candidateNodes));
                        event.preventDefault();
                      }
                    })
                  }
                )
              }
            )
          }
        ) })
      }
    );
  }
);
SelectContentImpl.displayName = CONTENT_IMPL_NAME;
var ITEM_ALIGNED_POSITION_NAME = "SelectItemAlignedPosition";
var SelectItemAlignedPosition = React50.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, onPlaced, ...popperProps } = props;
  const context = useSelectContext(CONTENT_NAME8, __scopeSelect);
  const contentContext = useSelectContentContext(CONTENT_NAME8, __scopeSelect);
  const [contentWrapper, setContentWrapper] = React50.useState(null);
  const [content, setContent] = React50.useState(null);
  const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));
  const getItems = useCollection4(__scopeSelect);
  const shouldExpandOnScrollRef = React50.useRef(false);
  const shouldRepositionRef = React50.useRef(true);
  const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;
  const position = React50.useCallback(() => {
    if (context.trigger && context.valueNode && contentWrapper && content && viewport && selectedItem && selectedItemText) {
      const triggerRect = context.trigger.getBoundingClientRect();
      const contentRect = content.getBoundingClientRect();
      const valueNodeRect = context.valueNode.getBoundingClientRect();
      const itemTextRect = selectedItemText.getBoundingClientRect();
      if (context.dir !== "rtl") {
        const itemTextOffset = itemTextRect.left - contentRect.left;
        const left = valueNodeRect.left - itemTextOffset;
        const leftDelta = triggerRect.left - left;
        const minContentWidth = triggerRect.width + leftDelta;
        const contentWidth = Math.max(minContentWidth, contentRect.width);
        const rightEdge = window.innerWidth - CONTENT_MARGIN;
        const clampedLeft = clamp2(left, [
          CONTENT_MARGIN,
          // Prevents the content from going off the starting edge of the
          // viewport. It may still go off the ending edge, but this can be
          // controlled by the user since they may want to manage overflow in a
          // specific way.
          // https://github.com/radix-ui/primitives/issues/2049
          Math.max(CONTENT_MARGIN, rightEdge - contentWidth)
        ]);
        contentWrapper.style.minWidth = minContentWidth + "px";
        contentWrapper.style.left = clampedLeft + "px";
      } else {
        const itemTextOffset = contentRect.right - itemTextRect.right;
        const right = window.innerWidth - valueNodeRect.right - itemTextOffset;
        const rightDelta = window.innerWidth - triggerRect.right - right;
        const minContentWidth = triggerRect.width + rightDelta;
        const contentWidth = Math.max(minContentWidth, contentRect.width);
        const leftEdge = window.innerWidth - CONTENT_MARGIN;
        const clampedRight = clamp2(right, [
          CONTENT_MARGIN,
          Math.max(CONTENT_MARGIN, leftEdge - contentWidth)
        ]);
        contentWrapper.style.minWidth = minContentWidth + "px";
        contentWrapper.style.right = clampedRight + "px";
      }
      const items = getItems();
      const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;
      const itemsHeight = viewport.scrollHeight;
      const contentStyles = window.getComputedStyle(content);
      const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);
      const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);
      const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);
      const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);
      const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth;
      const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);
      const viewportStyles = window.getComputedStyle(viewport);
      const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);
      const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);
      const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;
      const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;
      const selectedItemHalfHeight = selectedItem.offsetHeight / 2;
      const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;
      const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;
      const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;
      const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;
      if (willAlignWithoutTopOverflow) {
        const isLastItem = items.length > 0 && selectedItem === items[items.length - 1].ref.current;
        contentWrapper.style.bottom = "0px";
        const viewportOffsetBottom = content.clientHeight - viewport.offsetTop - viewport.offsetHeight;
        const clampedTriggerMiddleToBottomEdge = Math.max(
          triggerMiddleToBottomEdge,
          selectedItemHalfHeight + // viewport might have padding bottom, include it to avoid a scrollable viewport
          (isLastItem ? viewportPaddingBottom : 0) + viewportOffsetBottom + contentBorderBottomWidth
        );
        const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;
        contentWrapper.style.height = height + "px";
      } else {
        const isFirstItem = items.length > 0 && selectedItem === items[0].ref.current;
        contentWrapper.style.top = "0px";
        const clampedTopEdgeToTriggerMiddle = Math.max(
          topEdgeToTriggerMiddle,
          contentBorderTopWidth + viewport.offsetTop + // viewport might have padding top, include it to avoid a scrollable viewport
          (isFirstItem ? viewportPaddingTop : 0) + selectedItemHalfHeight
        );
        const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;
        contentWrapper.style.height = height + "px";
        viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;
      }
      contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;
      contentWrapper.style.minHeight = minContentHeight + "px";
      contentWrapper.style.maxHeight = availableHeight + "px";
      onPlaced == null ? void 0 : onPlaced();
      requestAnimationFrame(() => shouldExpandOnScrollRef.current = true);
    }
  }, [
    getItems,
    context.trigger,
    context.valueNode,
    contentWrapper,
    content,
    viewport,
    selectedItem,
    selectedItemText,
    context.dir,
    onPlaced
  ]);
  useLayoutEffect2(() => position(), [position]);
  const [contentZIndex, setContentZIndex] = React50.useState();
  useLayoutEffect2(() => {
    if (content) setContentZIndex(window.getComputedStyle(content).zIndex);
  }, [content]);
  const handleScrollButtonChange = React50.useCallback(
    (node) => {
      if (node && shouldRepositionRef.current === true) {
        position();
        focusSelectedItem == null ? void 0 : focusSelectedItem();
        shouldRepositionRef.current = false;
      }
    },
    [position, focusSelectedItem]
  );
  return (0, import_jsx_runtime25.jsx)(
    SelectViewportProvider,
    {
      scope: __scopeSelect,
      contentWrapper,
      shouldExpandOnScrollRef,
      onScrollButtonChange: handleScrollButtonChange,
      children: (0, import_jsx_runtime25.jsx)(
        "div",
        {
          ref: setContentWrapper,
          style: {
            display: "flex",
            flexDirection: "column",
            position: "fixed",
            zIndex: contentZIndex
          },
          children: (0, import_jsx_runtime25.jsx)(
            Primitive.div,
            {
              ...popperProps,
              ref: composedRefs,
              style: {
                // When we get the height of the content, it includes borders. If we were to set
                // the height without having `boxSizing: 'border-box'` it would be too big.
                boxSizing: "border-box",
                // We need to ensure the content doesn't get taller than the wrapper
                maxHeight: "100%",
                ...popperProps.style
              }
            }
          )
        }
      )
    }
  );
});
SelectItemAlignedPosition.displayName = ITEM_ALIGNED_POSITION_NAME;
var POPPER_POSITION_NAME = "SelectPopperPosition";
var SelectPopperPosition = React50.forwardRef((props, forwardedRef) => {
  const {
    __scopeSelect,
    align = "start",
    collisionPadding = CONTENT_MARGIN,
    ...popperProps
  } = props;
  const popperScope = usePopperScope3(__scopeSelect);
  return (0, import_jsx_runtime25.jsx)(
    Content3,
    {
      ...popperScope,
      ...popperProps,
      ref: forwardedRef,
      align,
      collisionPadding,
      style: {
        // Ensure border-box for floating-ui calculations
        boxSizing: "border-box",
        ...popperProps.style,
        // re-namespace exposed content custom properties
        ...{
          "--radix-select-content-transform-origin": "var(--radix-popper-transform-origin)",
          "--radix-select-content-available-width": "var(--radix-popper-available-width)",
          "--radix-select-content-available-height": "var(--radix-popper-available-height)",
          "--radix-select-trigger-width": "var(--radix-popper-anchor-width)",
          "--radix-select-trigger-height": "var(--radix-popper-anchor-height)"
        }
      }
    }
  );
});
SelectPopperPosition.displayName = POPPER_POSITION_NAME;
var [SelectViewportProvider, useSelectViewportContext] = createSelectContext(CONTENT_NAME8, {});
var VIEWPORT_NAME = "SelectViewport";
var SelectViewport = React50.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, nonce, ...viewportProps } = props;
    const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);
    const viewportContext = useSelectViewportContext(VIEWPORT_NAME, __scopeSelect);
    const composedRefs = useComposedRefs(forwardedRef, contentContext.onViewportChange);
    const prevScrollTopRef = React50.useRef(0);
    return (0, import_jsx_runtime25.jsxs)(import_jsx_runtime25.Fragment, { children: [
      (0, import_jsx_runtime25.jsx)(
        "style",
        {
          dangerouslySetInnerHTML: {
            __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`
          },
          nonce
        }
      ),
      (0, import_jsx_runtime25.jsx)(Collection4.Slot, { scope: __scopeSelect, children: (0, import_jsx_runtime25.jsx)(
        Primitive.div,
        {
          "data-radix-select-viewport": "",
          role: "presentation",
          ...viewportProps,
          ref: composedRefs,
          style: {
            // we use position: 'relative' here on the `viewport` so that when we call
            // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport
            // (independent of the scrollUpButton).
            position: "relative",
            flex: 1,
            // Viewport should only be scrollable in the vertical direction.
            // This won't work in vertical writing modes, so we'll need to
            // revisit this if/when that is supported
            // https://developer.chrome.com/blog/vertical-form-controls
            overflow: "hidden auto",
            ...viewportProps.style
          },
          onScroll: composeEventHandlers(viewportProps.onScroll, (event) => {
            const viewport = event.currentTarget;
            const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;
            if ((shouldExpandOnScrollRef == null ? void 0 : shouldExpandOnScrollRef.current) && contentWrapper) {
              const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);
              if (scrolledBy > 0) {
                const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;
                const cssMinHeight = parseFloat(contentWrapper.style.minHeight);
                const cssHeight = parseFloat(contentWrapper.style.height);
                const prevHeight = Math.max(cssMinHeight, cssHeight);
                if (prevHeight < availableHeight) {
                  const nextHeight = prevHeight + scrolledBy;
                  const clampedNextHeight = Math.min(availableHeight, nextHeight);
                  const heightDiff = nextHeight - clampedNextHeight;
                  contentWrapper.style.height = clampedNextHeight + "px";
                  if (contentWrapper.style.bottom === "0px") {
                    viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;
                    contentWrapper.style.justifyContent = "flex-end";
                  }
                }
              }
            }
            prevScrollTopRef.current = viewport.scrollTop;
          })
        }
      ) })
    ] });
  }
);
SelectViewport.displayName = VIEWPORT_NAME;
var GROUP_NAME5 = "SelectGroup";
var [SelectGroupContextProvider, useSelectGroupContext] = createSelectContext(GROUP_NAME5);
var SelectGroup = React50.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, ...groupProps } = props;
    const groupId = useId();
    return (0, import_jsx_runtime25.jsx)(SelectGroupContextProvider, { scope: __scopeSelect, id: groupId, children: (0, import_jsx_runtime25.jsx)(Primitive.div, { role: "group", "aria-labelledby": groupId, ...groupProps, ref: forwardedRef }) });
  }
);
SelectGroup.displayName = GROUP_NAME5;
var LABEL_NAME4 = "SelectLabel";
var SelectLabel = React50.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, ...labelProps } = props;
    const groupContext = useSelectGroupContext(LABEL_NAME4, __scopeSelect);
    return (0, import_jsx_runtime25.jsx)(Primitive.div, { id: groupContext.id, ...labelProps, ref: forwardedRef });
  }
);
SelectLabel.displayName = LABEL_NAME4;
var ITEM_NAME6 = "SelectItem";
var [SelectItemContextProvider, useSelectItemContext] = createSelectContext(ITEM_NAME6);
var SelectItem = React50.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeSelect,
      value,
      disabled = false,
      textValue: textValueProp,
      ...itemProps
    } = props;
    const context = useSelectContext(ITEM_NAME6, __scopeSelect);
    const contentContext = useSelectContentContext(ITEM_NAME6, __scopeSelect);
    const isSelected = context.value === value;
    const [textValue, setTextValue] = React50.useState(textValueProp ?? "");
    const [isFocused, setIsFocused] = React50.useState(false);
    const composedRefs = useComposedRefs(
      forwardedRef,
      (node) => {
        var _a2;
        return (_a2 = contentContext.itemRefCallback) == null ? void 0 : _a2.call(contentContext, node, value, disabled);
      }
    );
    const textId = useId();
    const pointerTypeRef = React50.useRef("touch");
    const handleSelect = () => {
      if (!disabled) {
        context.onValueChange(value);
        context.onOpenChange(false);
      }
    };
    if (value === "") {
      throw new Error(
        "A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder."
      );
    }
    return (0, import_jsx_runtime25.jsx)(
      SelectItemContextProvider,
      {
        scope: __scopeSelect,
        value,
        disabled,
        textId,
        isSelected,
        onItemTextChange: React50.useCallback((node) => {
          setTextValue((prevTextValue) => prevTextValue || ((node == null ? void 0 : node.textContent) ?? "").trim());
        }, []),
        children: (0, import_jsx_runtime25.jsx)(
          Collection4.ItemSlot,
          {
            scope: __scopeSelect,
            value,
            disabled,
            textValue,
            children: (0, import_jsx_runtime25.jsx)(
              Primitive.div,
              {
                role: "option",
                "aria-labelledby": textId,
                "data-highlighted": isFocused ? "" : void 0,
                "aria-selected": isSelected && isFocused,
                "data-state": isSelected ? "checked" : "unchecked",
                "aria-disabled": disabled || void 0,
                "data-disabled": disabled ? "" : void 0,
                tabIndex: disabled ? void 0 : -1,
                ...itemProps,
                ref: composedRefs,
                onFocus: composeEventHandlers(itemProps.onFocus, () => setIsFocused(true)),
                onBlur: composeEventHandlers(itemProps.onBlur, () => setIsFocused(false)),
                onClick: composeEventHandlers(itemProps.onClick, () => {
                  if (pointerTypeRef.current !== "mouse") handleSelect();
                }),
                onPointerUp: composeEventHandlers(itemProps.onPointerUp, () => {
                  if (pointerTypeRef.current === "mouse") handleSelect();
                }),
                onPointerDown: composeEventHandlers(itemProps.onPointerDown, (event) => {
                  pointerTypeRef.current = event.pointerType;
                }),
                onPointerMove: composeEventHandlers(itemProps.onPointerMove, (event) => {
                  var _a2;
                  pointerTypeRef.current = event.pointerType;
                  if (disabled) {
                    (_a2 = contentContext.onItemLeave) == null ? void 0 : _a2.call(contentContext);
                  } else if (pointerTypeRef.current === "mouse") {
                    event.currentTarget.focus({ preventScroll: true });
                  }
                }),
                onPointerLeave: composeEventHandlers(itemProps.onPointerLeave, (event) => {
                  var _a2;
                  if (event.currentTarget === document.activeElement) {
                    (_a2 = contentContext.onItemLeave) == null ? void 0 : _a2.call(contentContext);
                  }
                }),
                onKeyDown: composeEventHandlers(itemProps.onKeyDown, (event) => {
                  var _a2;
                  const isTypingAhead = ((_a2 = contentContext.searchRef) == null ? void 0 : _a2.current) !== "";
                  if (isTypingAhead && event.key === " ") return;
                  if (SELECTION_KEYS2.includes(event.key)) handleSelect();
                  if (event.key === " ") event.preventDefault();
                })
              }
            )
          }
        )
      }
    );
  }
);
SelectItem.displayName = ITEM_NAME6;
var ITEM_TEXT_NAME = "SelectItemText";
var SelectItemText = React50.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, className, style, ...itemTextProps } = props;
    const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);
    const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);
    const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);
    const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);
    const [itemTextNode, setItemTextNode] = React50.useState(null);
    const composedRefs = useComposedRefs(
      forwardedRef,
      (node) => setItemTextNode(node),
      itemContext.onItemTextChange,
      (node) => {
        var _a2;
        return (_a2 = contentContext.itemTextRefCallback) == null ? void 0 : _a2.call(contentContext, node, itemContext.value, itemContext.disabled);
      }
    );
    const textContent = itemTextNode == null ? void 0 : itemTextNode.textContent;
    const nativeOption = React50.useMemo(
      () => (0, import_jsx_runtime25.jsx)("option", { value: itemContext.value, disabled: itemContext.disabled, children: textContent }, itemContext.value),
      [itemContext.disabled, itemContext.value, textContent]
    );
    const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;
    useLayoutEffect2(() => {
      onNativeOptionAdd(nativeOption);
      return () => onNativeOptionRemove(nativeOption);
    }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);
    return (0, import_jsx_runtime25.jsxs)(import_jsx_runtime25.Fragment, { children: [
      (0, import_jsx_runtime25.jsx)(Primitive.span, { id: itemContext.textId, ...itemTextProps, ref: composedRefs }),
      itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren ? ReactDOM4.createPortal(itemTextProps.children, context.valueNode) : null
    ] });
  }
);
SelectItemText.displayName = ITEM_TEXT_NAME;
var ITEM_INDICATOR_NAME2 = "SelectItemIndicator";
var SelectItemIndicator = React50.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, ...itemIndicatorProps } = props;
    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME2, __scopeSelect);
    return itemContext.isSelected ? (0, import_jsx_runtime25.jsx)(Primitive.span, { "aria-hidden": true, ...itemIndicatorProps, ref: forwardedRef }) : null;
  }
);
SelectItemIndicator.displayName = ITEM_INDICATOR_NAME2;
var SCROLL_UP_BUTTON_NAME = "SelectScrollUpButton";
var SelectScrollUpButton = React50.forwardRef((props, forwardedRef) => {
  const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);
  const viewportContext = useSelectViewportContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);
  const [canScrollUp, setCanScrollUp] = React50.useState(false);
  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);
  useLayoutEffect2(() => {
    if (contentContext.viewport && contentContext.isPositioned) {
      let handleScroll22 = function() {
        const canScrollUp2 = viewport.scrollTop > 0;
        setCanScrollUp(canScrollUp2);
      };
      var handleScroll3 = handleScroll22;
      const viewport = contentContext.viewport;
      handleScroll22();
      viewport.addEventListener("scroll", handleScroll22);
      return () => viewport.removeEventListener("scroll", handleScroll22);
    }
  }, [contentContext.viewport, contentContext.isPositioned]);
  return canScrollUp ? (0, import_jsx_runtime25.jsx)(
    SelectScrollButtonImpl,
    {
      ...props,
      ref: composedRefs,
      onAutoScroll: () => {
        const { viewport, selectedItem } = contentContext;
        if (viewport && selectedItem) {
          viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;
        }
      }
    }
  ) : null;
});
SelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;
var SCROLL_DOWN_BUTTON_NAME = "SelectScrollDownButton";
var SelectScrollDownButton = React50.forwardRef((props, forwardedRef) => {
  const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);
  const viewportContext = useSelectViewportContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);
  const [canScrollDown, setCanScrollDown] = React50.useState(false);
  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);
  useLayoutEffect2(() => {
    if (contentContext.viewport && contentContext.isPositioned) {
      let handleScroll22 = function() {
        const maxScroll = viewport.scrollHeight - viewport.clientHeight;
        const canScrollDown2 = Math.ceil(viewport.scrollTop) < maxScroll;
        setCanScrollDown(canScrollDown2);
      };
      var handleScroll3 = handleScroll22;
      const viewport = contentContext.viewport;
      handleScroll22();
      viewport.addEventListener("scroll", handleScroll22);
      return () => viewport.removeEventListener("scroll", handleScroll22);
    }
  }, [contentContext.viewport, contentContext.isPositioned]);
  return canScrollDown ? (0, import_jsx_runtime25.jsx)(
    SelectScrollButtonImpl,
    {
      ...props,
      ref: composedRefs,
      onAutoScroll: () => {
        const { viewport, selectedItem } = contentContext;
        if (viewport && selectedItem) {
          viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;
        }
      }
    }
  ) : null;
});
SelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;
var SelectScrollButtonImpl = React50.forwardRef((props, forwardedRef) => {
  const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;
  const contentContext = useSelectContentContext("SelectScrollButton", __scopeSelect);
  const autoScrollTimerRef = React50.useRef(null);
  const getItems = useCollection4(__scopeSelect);
  const clearAutoScrollTimer = React50.useCallback(() => {
    if (autoScrollTimerRef.current !== null) {
      window.clearInterval(autoScrollTimerRef.current);
      autoScrollTimerRef.current = null;
    }
  }, []);
  React50.useEffect(() => {
    return () => clearAutoScrollTimer();
  }, [clearAutoScrollTimer]);
  useLayoutEffect2(() => {
    var _a2;
    const activeItem = getItems().find((item) => item.ref.current === document.activeElement);
    (_a2 = activeItem == null ? void 0 : activeItem.ref.current) == null ? void 0 : _a2.scrollIntoView({ block: "nearest" });
  }, [getItems]);
  return (0, import_jsx_runtime25.jsx)(
    Primitive.div,
    {
      "aria-hidden": true,
      ...scrollIndicatorProps,
      ref: forwardedRef,
      style: { flexShrink: 0, ...scrollIndicatorProps.style },
      onPointerDown: composeEventHandlers(scrollIndicatorProps.onPointerDown, () => {
        if (autoScrollTimerRef.current === null) {
          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);
        }
      }),
      onPointerMove: composeEventHandlers(scrollIndicatorProps.onPointerMove, () => {
        var _a2;
        (_a2 = contentContext.onItemLeave) == null ? void 0 : _a2.call(contentContext);
        if (autoScrollTimerRef.current === null) {
          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);
        }
      }),
      onPointerLeave: composeEventHandlers(scrollIndicatorProps.onPointerLeave, () => {
        clearAutoScrollTimer();
      })
    }
  );
});
var SEPARATOR_NAME4 = "SelectSeparator";
var SelectSeparator = React50.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, ...separatorProps } = props;
    return (0, import_jsx_runtime25.jsx)(Primitive.div, { "aria-hidden": true, ...separatorProps, ref: forwardedRef });
  }
);
SelectSeparator.displayName = SEPARATOR_NAME4;
var ARROW_NAME6 = "SelectArrow";
var SelectArrow = React50.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSelect, ...arrowProps } = props;
    const popperScope = usePopperScope3(__scopeSelect);
    const context = useSelectContext(ARROW_NAME6, __scopeSelect);
    const contentContext = useSelectContentContext(ARROW_NAME6, __scopeSelect);
    return context.open && contentContext.position === "popper" ? (0, import_jsx_runtime25.jsx)(Arrow2, { ...popperScope, ...arrowProps, ref: forwardedRef }) : null;
  }
);
SelectArrow.displayName = ARROW_NAME6;
var BUBBLE_INPUT_NAME3 = "SelectBubbleInput";
var SelectBubbleInput = React50.forwardRef(
  ({ __scopeSelect, value, ...props }, forwardedRef) => {
    const ref = React50.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, ref);
    const prevValue = usePrevious(value);
    React50.useEffect(() => {
      const select = ref.current;
      if (!select) return;
      const selectProto = window.HTMLSelectElement.prototype;
      const descriptor = Object.getOwnPropertyDescriptor(
        selectProto,
        "value"
      );
      const setValue = descriptor.set;
      if (prevValue !== value && setValue) {
        const event = new Event("change", { bubbles: true });
        setValue.call(select, value);
        select.dispatchEvent(event);
      }
    }, [prevValue, value]);
    return (0, import_jsx_runtime25.jsx)(
      Primitive.select,
      {
        ...props,
        style: { ...VISUALLY_HIDDEN_STYLES, ...props.style },
        ref: composedRefs,
        defaultValue: value
      }
    );
  }
);
SelectBubbleInput.displayName = BUBBLE_INPUT_NAME3;
function shouldShowPlaceholder(value) {
  return value === "" || value === void 0;
}
function useTypeaheadSearch(onSearchChange) {
  const handleSearchChange = useCallbackRef(onSearchChange);
  const searchRef = React50.useRef("");
  const timerRef = React50.useRef(0);
  const handleTypeaheadSearch = React50.useCallback(
    (key) => {
      const search = searchRef.current + key;
      handleSearchChange(search);
      (function updateSearch(value) {
        searchRef.current = value;
        window.clearTimeout(timerRef.current);
        if (value !== "") timerRef.current = window.setTimeout(() => updateSearch(""), 1e3);
      })(search);
    },
    [handleSearchChange]
  );
  const resetTypeahead = React50.useCallback(() => {
    searchRef.current = "";
    window.clearTimeout(timerRef.current);
  }, []);
  React50.useEffect(() => {
    return () => window.clearTimeout(timerRef.current);
  }, []);
  return [searchRef, handleTypeaheadSearch, resetTypeahead];
}
function findNextItem(items, search, currentItem) {
  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);
  const normalizedSearch = isRepeated ? search[0] : search;
  const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;
  let wrappedItems = wrapArray4(items, Math.max(currentItemIndex, 0));
  const excludeCurrentItem = normalizedSearch.length === 1;
  if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v) => v !== currentItem);
  const nextItem = wrappedItems.find(
    (item) => item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())
  );
  return nextItem !== currentItem ? nextItem : void 0;
}
function wrapArray4(array, startIndex) {
  return array.map((_2, index2) => array[(startIndex + index2) % array.length]);
}
var Root26 = Select;
var Trigger5 = SelectTrigger;
var Value = SelectValue;
var Icon = SelectIcon;
var Portal5 = SelectPortal;
var Content26 = SelectContent;
var Viewport = SelectViewport;
var Group2 = SelectGroup;
var Item4 = SelectItem;
var ItemText = SelectItemText;

// ../../../node_modules/@radix-ui/react-slider/dist/index.mjs
var React51 = __toESM(require_react(), 1);
var import_jsx_runtime26 = __toESM(require_jsx_runtime(), 1);
var PAGE_KEYS = ["PageUp", "PageDown"];
var ARROW_KEYS2 = ["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight"];
var BACK_KEYS = {
  "from-left": ["Home", "PageDown", "ArrowDown", "ArrowLeft"],
  "from-right": ["Home", "PageDown", "ArrowDown", "ArrowRight"],
  "from-bottom": ["Home", "PageDown", "ArrowDown", "ArrowLeft"],
  "from-top": ["Home", "PageDown", "ArrowUp", "ArrowLeft"]
};
var SLIDER_NAME = "Slider";
var [Collection5, useCollection5, createCollectionScope5] = createCollection(SLIDER_NAME);
var [createSliderContext, createSliderScope] = createContextScope(SLIDER_NAME, [
  createCollectionScope5
]);
var [SliderProvider, useSliderContext] = createSliderContext(SLIDER_NAME);
var Slider = React51.forwardRef(
  (props, forwardedRef) => {
    const {
      name,
      min: min2 = 0,
      max: max2 = 100,
      step = 1,
      orientation = "horizontal",
      disabled = false,
      minStepsBetweenThumbs = 0,
      defaultValue = [min2],
      value,
      onValueChange = () => {
      },
      onValueCommit = () => {
      },
      inverted = false,
      form,
      ...sliderProps
    } = props;
    const thumbRefs = React51.useRef(/* @__PURE__ */ new Set());
    const valueIndexToChangeRef = React51.useRef(0);
    const isHorizontal = orientation === "horizontal";
    const SliderOrientation = isHorizontal ? SliderHorizontal : SliderVertical;
    const [values = [], setValues] = useControllableState({
      prop: value,
      defaultProp: defaultValue,
      onChange: (value2) => {
        var _a2;
        const thumbs = [...thumbRefs.current];
        (_a2 = thumbs[valueIndexToChangeRef.current]) == null ? void 0 : _a2.focus();
        onValueChange(value2);
      }
    });
    const valuesBeforeSlideStartRef = React51.useRef(values);
    function handleSlideStart(value2) {
      const closestIndex = getClosestValueIndex(values, value2);
      updateValues(value2, closestIndex);
    }
    function handleSlideMove(value2) {
      updateValues(value2, valueIndexToChangeRef.current);
    }
    function handleSlideEnd() {
      const prevValue = valuesBeforeSlideStartRef.current[valueIndexToChangeRef.current];
      const nextValue = values[valueIndexToChangeRef.current];
      const hasChanged = nextValue !== prevValue;
      if (hasChanged) onValueCommit(values);
    }
    function updateValues(value2, atIndex, { commit } = { commit: false }) {
      const decimalCount = getDecimalCount(step);
      const snapToStep = roundValue(Math.round((value2 - min2) / step) * step + min2, decimalCount);
      const nextValue = clamp2(snapToStep, [min2, max2]);
      setValues((prevValues = []) => {
        const nextValues = getNextSortedValues(prevValues, nextValue, atIndex);
        if (hasMinStepsBetweenValues(nextValues, minStepsBetweenThumbs * step)) {
          valueIndexToChangeRef.current = nextValues.indexOf(nextValue);
          const hasChanged = String(nextValues) !== String(prevValues);
          if (hasChanged && commit) onValueCommit(nextValues);
          return hasChanged ? nextValues : prevValues;
        } else {
          return prevValues;
        }
      });
    }
    return (0, import_jsx_runtime26.jsx)(
      SliderProvider,
      {
        scope: props.__scopeSlider,
        name,
        disabled,
        min: min2,
        max: max2,
        valueIndexToChangeRef,
        thumbs: thumbRefs.current,
        values,
        orientation,
        form,
        children: (0, import_jsx_runtime26.jsx)(Collection5.Provider, { scope: props.__scopeSlider, children: (0, import_jsx_runtime26.jsx)(Collection5.Slot, { scope: props.__scopeSlider, children: (0, import_jsx_runtime26.jsx)(
          SliderOrientation,
          {
            "aria-disabled": disabled,
            "data-disabled": disabled ? "" : void 0,
            ...sliderProps,
            ref: forwardedRef,
            onPointerDown: composeEventHandlers(sliderProps.onPointerDown, () => {
              if (!disabled) valuesBeforeSlideStartRef.current = values;
            }),
            min: min2,
            max: max2,
            inverted,
            onSlideStart: disabled ? void 0 : handleSlideStart,
            onSlideMove: disabled ? void 0 : handleSlideMove,
            onSlideEnd: disabled ? void 0 : handleSlideEnd,
            onHomeKeyDown: () => !disabled && updateValues(min2, 0, { commit: true }),
            onEndKeyDown: () => !disabled && updateValues(max2, values.length - 1, { commit: true }),
            onStepKeyDown: ({ event, direction: stepDirection }) => {
              if (!disabled) {
                const isPageKey = PAGE_KEYS.includes(event.key);
                const isSkipKey = isPageKey || event.shiftKey && ARROW_KEYS2.includes(event.key);
                const multiplier = isSkipKey ? 10 : 1;
                const atIndex = valueIndexToChangeRef.current;
                const value2 = values[atIndex];
                const stepInDirection = step * multiplier * stepDirection;
                updateValues(value2 + stepInDirection, atIndex, { commit: true });
              }
            }
          }
        ) }) })
      }
    );
  }
);
Slider.displayName = SLIDER_NAME;
var [SliderOrientationProvider, useSliderOrientationContext] = createSliderContext(SLIDER_NAME, {
  startEdge: "left",
  endEdge: "right",
  size: "width",
  direction: 1
});
var SliderHorizontal = React51.forwardRef(
  (props, forwardedRef) => {
    const {
      min: min2,
      max: max2,
      dir,
      inverted,
      onSlideStart,
      onSlideMove,
      onSlideEnd,
      onStepKeyDown,
      ...sliderProps
    } = props;
    const [slider, setSlider] = React51.useState(null);
    const composedRefs = useComposedRefs(forwardedRef, (node) => setSlider(node));
    const rectRef = React51.useRef(void 0);
    const direction = useDirection(dir);
    const isDirectionLTR = direction === "ltr";
    const isSlidingFromLeft = isDirectionLTR && !inverted || !isDirectionLTR && inverted;
    function getValueFromPointer(pointerPosition) {
      const rect = rectRef.current || slider.getBoundingClientRect();
      const input = [0, rect.width];
      const output = isSlidingFromLeft ? [min2, max2] : [max2, min2];
      const value = linearScale(input, output);
      rectRef.current = rect;
      return value(pointerPosition - rect.left);
    }
    return (0, import_jsx_runtime26.jsx)(
      SliderOrientationProvider,
      {
        scope: props.__scopeSlider,
        startEdge: isSlidingFromLeft ? "left" : "right",
        endEdge: isSlidingFromLeft ? "right" : "left",
        direction: isSlidingFromLeft ? 1 : -1,
        size: "width",
        children: (0, import_jsx_runtime26.jsx)(
          SliderImpl,
          {
            dir: direction,
            "data-orientation": "horizontal",
            ...sliderProps,
            ref: composedRefs,
            style: {
              ...sliderProps.style,
              ["--radix-slider-thumb-transform"]: "translateX(-50%)"
            },
            onSlideStart: (event) => {
              const value = getValueFromPointer(event.clientX);
              onSlideStart == null ? void 0 : onSlideStart(value);
            },
            onSlideMove: (event) => {
              const value = getValueFromPointer(event.clientX);
              onSlideMove == null ? void 0 : onSlideMove(value);
            },
            onSlideEnd: () => {
              rectRef.current = void 0;
              onSlideEnd == null ? void 0 : onSlideEnd();
            },
            onStepKeyDown: (event) => {
              const slideDirection = isSlidingFromLeft ? "from-left" : "from-right";
              const isBackKey = BACK_KEYS[slideDirection].includes(event.key);
              onStepKeyDown == null ? void 0 : onStepKeyDown({ event, direction: isBackKey ? -1 : 1 });
            }
          }
        )
      }
    );
  }
);
var SliderVertical = React51.forwardRef(
  (props, forwardedRef) => {
    const {
      min: min2,
      max: max2,
      inverted,
      onSlideStart,
      onSlideMove,
      onSlideEnd,
      onStepKeyDown,
      ...sliderProps
    } = props;
    const sliderRef = React51.useRef(null);
    const ref = useComposedRefs(forwardedRef, sliderRef);
    const rectRef = React51.useRef(void 0);
    const isSlidingFromBottom = !inverted;
    function getValueFromPointer(pointerPosition) {
      const rect = rectRef.current || sliderRef.current.getBoundingClientRect();
      const input = [0, rect.height];
      const output = isSlidingFromBottom ? [max2, min2] : [min2, max2];
      const value = linearScale(input, output);
      rectRef.current = rect;
      return value(pointerPosition - rect.top);
    }
    return (0, import_jsx_runtime26.jsx)(
      SliderOrientationProvider,
      {
        scope: props.__scopeSlider,
        startEdge: isSlidingFromBottom ? "bottom" : "top",
        endEdge: isSlidingFromBottom ? "top" : "bottom",
        size: "height",
        direction: isSlidingFromBottom ? 1 : -1,
        children: (0, import_jsx_runtime26.jsx)(
          SliderImpl,
          {
            "data-orientation": "vertical",
            ...sliderProps,
            ref,
            style: {
              ...sliderProps.style,
              ["--radix-slider-thumb-transform"]: "translateY(50%)"
            },
            onSlideStart: (event) => {
              const value = getValueFromPointer(event.clientY);
              onSlideStart == null ? void 0 : onSlideStart(value);
            },
            onSlideMove: (event) => {
              const value = getValueFromPointer(event.clientY);
              onSlideMove == null ? void 0 : onSlideMove(value);
            },
            onSlideEnd: () => {
              rectRef.current = void 0;
              onSlideEnd == null ? void 0 : onSlideEnd();
            },
            onStepKeyDown: (event) => {
              const slideDirection = isSlidingFromBottom ? "from-bottom" : "from-top";
              const isBackKey = BACK_KEYS[slideDirection].includes(event.key);
              onStepKeyDown == null ? void 0 : onStepKeyDown({ event, direction: isBackKey ? -1 : 1 });
            }
          }
        )
      }
    );
  }
);
var SliderImpl = React51.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeSlider,
      onSlideStart,
      onSlideMove,
      onSlideEnd,
      onHomeKeyDown,
      onEndKeyDown,
      onStepKeyDown,
      ...sliderProps
    } = props;
    const context = useSliderContext(SLIDER_NAME, __scopeSlider);
    return (0, import_jsx_runtime26.jsx)(
      Primitive.span,
      {
        ...sliderProps,
        ref: forwardedRef,
        onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
          if (event.key === "Home") {
            onHomeKeyDown(event);
            event.preventDefault();
          } else if (event.key === "End") {
            onEndKeyDown(event);
            event.preventDefault();
          } else if (PAGE_KEYS.concat(ARROW_KEYS2).includes(event.key)) {
            onStepKeyDown(event);
            event.preventDefault();
          }
        }),
        onPointerDown: composeEventHandlers(props.onPointerDown, (event) => {
          const target = event.target;
          target.setPointerCapture(event.pointerId);
          event.preventDefault();
          if (context.thumbs.has(target)) {
            target.focus();
          } else {
            onSlideStart(event);
          }
        }),
        onPointerMove: composeEventHandlers(props.onPointerMove, (event) => {
          const target = event.target;
          if (target.hasPointerCapture(event.pointerId)) onSlideMove(event);
        }),
        onPointerUp: composeEventHandlers(props.onPointerUp, (event) => {
          const target = event.target;
          if (target.hasPointerCapture(event.pointerId)) {
            target.releasePointerCapture(event.pointerId);
            onSlideEnd(event);
          }
        })
      }
    );
  }
);
var TRACK_NAME = "SliderTrack";
var SliderTrack = React51.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSlider, ...trackProps } = props;
    const context = useSliderContext(TRACK_NAME, __scopeSlider);
    return (0, import_jsx_runtime26.jsx)(
      Primitive.span,
      {
        "data-disabled": context.disabled ? "" : void 0,
        "data-orientation": context.orientation,
        ...trackProps,
        ref: forwardedRef
      }
    );
  }
);
SliderTrack.displayName = TRACK_NAME;
var RANGE_NAME = "SliderRange";
var SliderRange = React51.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSlider, ...rangeProps } = props;
    const context = useSliderContext(RANGE_NAME, __scopeSlider);
    const orientation = useSliderOrientationContext(RANGE_NAME, __scopeSlider);
    const ref = React51.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, ref);
    const valuesCount = context.values.length;
    const percentages = context.values.map(
      (value) => convertValueToPercentage(value, context.min, context.max)
    );
    const offsetStart = valuesCount > 1 ? Math.min(...percentages) : 0;
    const offsetEnd = 100 - Math.max(...percentages);
    return (0, import_jsx_runtime26.jsx)(
      Primitive.span,
      {
        "data-orientation": context.orientation,
        "data-disabled": context.disabled ? "" : void 0,
        ...rangeProps,
        ref: composedRefs,
        style: {
          ...props.style,
          [orientation.startEdge]: offsetStart + "%",
          [orientation.endEdge]: offsetEnd + "%"
        }
      }
    );
  }
);
SliderRange.displayName = RANGE_NAME;
var THUMB_NAME = "SliderThumb";
var SliderThumb = React51.forwardRef(
  (props, forwardedRef) => {
    const getItems = useCollection5(props.__scopeSlider);
    const [thumb, setThumb] = React51.useState(null);
    const composedRefs = useComposedRefs(forwardedRef, (node) => setThumb(node));
    const index2 = React51.useMemo(
      () => thumb ? getItems().findIndex((item) => item.ref.current === thumb) : -1,
      [getItems, thumb]
    );
    return (0, import_jsx_runtime26.jsx)(SliderThumbImpl, { ...props, ref: composedRefs, index: index2 });
  }
);
var SliderThumbImpl = React51.forwardRef(
  (props, forwardedRef) => {
    const { __scopeSlider, index: index2, name, ...thumbProps } = props;
    const context = useSliderContext(THUMB_NAME, __scopeSlider);
    const orientation = useSliderOrientationContext(THUMB_NAME, __scopeSlider);
    const [thumb, setThumb] = React51.useState(null);
    const composedRefs = useComposedRefs(forwardedRef, (node) => setThumb(node));
    const isFormControl = thumb ? context.form || !!thumb.closest("form") : true;
    const size4 = useSize(thumb);
    const value = context.values[index2];
    const percent = value === void 0 ? 0 : convertValueToPercentage(value, context.min, context.max);
    const label = getLabel(index2, context.values.length);
    const orientationSize = size4 == null ? void 0 : size4[orientation.size];
    const thumbInBoundsOffset = orientationSize ? getThumbInBoundsOffset(orientationSize, percent, orientation.direction) : 0;
    React51.useEffect(() => {
      if (thumb) {
        context.thumbs.add(thumb);
        return () => {
          context.thumbs.delete(thumb);
        };
      }
    }, [thumb, context.thumbs]);
    return (0, import_jsx_runtime26.jsxs)(
      "span",
      {
        style: {
          transform: "var(--radix-slider-thumb-transform)",
          position: "absolute",
          [orientation.startEdge]: `calc(${percent}% + ${thumbInBoundsOffset}px)`
        },
        children: [
          (0, import_jsx_runtime26.jsx)(Collection5.ItemSlot, { scope: props.__scopeSlider, children: (0, import_jsx_runtime26.jsx)(
            Primitive.span,
            {
              role: "slider",
              "aria-label": props["aria-label"] || label,
              "aria-valuemin": context.min,
              "aria-valuenow": value,
              "aria-valuemax": context.max,
              "aria-orientation": context.orientation,
              "data-orientation": context.orientation,
              "data-disabled": context.disabled ? "" : void 0,
              tabIndex: context.disabled ? void 0 : 0,
              ...thumbProps,
              ref: composedRefs,
              style: value === void 0 ? { display: "none" } : props.style,
              onFocus: composeEventHandlers(props.onFocus, () => {
                context.valueIndexToChangeRef.current = index2;
              })
            }
          ) }),
          isFormControl && (0, import_jsx_runtime26.jsx)(
            SliderBubbleInput,
            {
              name: name ?? (context.name ? context.name + (context.values.length > 1 ? "[]" : "") : void 0),
              form: context.form,
              value
            },
            index2
          )
        ]
      }
    );
  }
);
SliderThumb.displayName = THUMB_NAME;
var BUBBLE_INPUT_NAME4 = "RadioBubbleInput";
var SliderBubbleInput = React51.forwardRef(
  ({ __scopeSlider, value, ...props }, forwardedRef) => {
    const ref = React51.useRef(null);
    const composedRefs = useComposedRefs(ref, forwardedRef);
    const prevValue = usePrevious(value);
    React51.useEffect(() => {
      const input = ref.current;
      if (!input) return;
      const inputProto = window.HTMLInputElement.prototype;
      const descriptor = Object.getOwnPropertyDescriptor(inputProto, "value");
      const setValue = descriptor.set;
      if (prevValue !== value && setValue) {
        const event = new Event("input", { bubbles: true });
        setValue.call(input, value);
        input.dispatchEvent(event);
      }
    }, [prevValue, value]);
    return (0, import_jsx_runtime26.jsx)(
      Primitive.input,
      {
        style: { display: "none" },
        ...props,
        ref: composedRefs,
        defaultValue: value
      }
    );
  }
);
SliderBubbleInput.displayName = BUBBLE_INPUT_NAME4;
function getNextSortedValues(prevValues = [], nextValue, atIndex) {
  const nextValues = [...prevValues];
  nextValues[atIndex] = nextValue;
  return nextValues.sort((a2, b) => a2 - b);
}
function convertValueToPercentage(value, min2, max2) {
  const maxSteps = max2 - min2;
  const percentPerStep = 100 / maxSteps;
  const percentage = percentPerStep * (value - min2);
  return clamp2(percentage, [0, 100]);
}
function getLabel(index2, totalValues) {
  if (totalValues > 2) {
    return `Value ${index2 + 1} of ${totalValues}`;
  } else if (totalValues === 2) {
    return ["Minimum", "Maximum"][index2];
  } else {
    return void 0;
  }
}
function getClosestValueIndex(values, nextValue) {
  if (values.length === 1) return 0;
  const distances = values.map((value) => Math.abs(value - nextValue));
  const closestDistance = Math.min(...distances);
  return distances.indexOf(closestDistance);
}
function getThumbInBoundsOffset(width, left, direction) {
  const halfWidth = width / 2;
  const halfPercent = 50;
  const offset4 = linearScale([0, halfPercent], [0, halfWidth]);
  return (halfWidth - offset4(left) * direction) * direction;
}
function getStepsBetweenValues(values) {
  return values.slice(0, -1).map((value, index2) => values[index2 + 1] - value);
}
function hasMinStepsBetweenValues(values, minStepsBetweenValues) {
  if (minStepsBetweenValues > 0) {
    const stepsBetweenValues = getStepsBetweenValues(values);
    const actualMinStepsBetweenValues = Math.min(...stepsBetweenValues);
    return actualMinStepsBetweenValues >= minStepsBetweenValues;
  }
  return true;
}
function linearScale(input, output) {
  return (value) => {
    if (input[0] === input[1] || output[0] === output[1]) return output[0];
    const ratio = (output[1] - output[0]) / (input[1] - input[0]);
    return output[0] + ratio * (value - input[0]);
  };
}
function getDecimalCount(value) {
  return (String(value).split(".")[1] || "").length;
}
function roundValue(value, decimalCount) {
  const rounder = Math.pow(10, decimalCount);
  return Math.round(value * rounder) / rounder;
}
var Root9 = Slider;
var Track = SliderTrack;
var Range = SliderRange;
var Thumb = SliderThumb;

// ../../../node_modules/@radix-ui/react-tooltip/dist/index.mjs
var React52 = __toESM(require_react(), 1);
var import_jsx_runtime27 = __toESM(require_jsx_runtime(), 1);
var [createTooltipContext, createTooltipScope] = createContextScope("Tooltip", [
  createPopperScope
]);
var usePopperScope4 = createPopperScope();
var PROVIDER_NAME = "TooltipProvider";
var DEFAULT_DELAY_DURATION = 700;
var TOOLTIP_OPEN = "tooltip.open";
var [TooltipProviderContextProvider, useTooltipProviderContext] = createTooltipContext(PROVIDER_NAME);
var TooltipProvider = (props) => {
  const {
    __scopeTooltip,
    delayDuration = DEFAULT_DELAY_DURATION,
    skipDelayDuration = 300,
    disableHoverableContent = false,
    children
  } = props;
  const isOpenDelayedRef = React52.useRef(true);
  const isPointerInTransitRef = React52.useRef(false);
  const skipDelayTimerRef = React52.useRef(0);
  React52.useEffect(() => {
    const skipDelayTimer = skipDelayTimerRef.current;
    return () => window.clearTimeout(skipDelayTimer);
  }, []);
  return (0, import_jsx_runtime27.jsx)(
    TooltipProviderContextProvider,
    {
      scope: __scopeTooltip,
      isOpenDelayedRef,
      delayDuration,
      onOpen: React52.useCallback(() => {
        window.clearTimeout(skipDelayTimerRef.current);
        isOpenDelayedRef.current = false;
      }, []),
      onClose: React52.useCallback(() => {
        window.clearTimeout(skipDelayTimerRef.current);
        skipDelayTimerRef.current = window.setTimeout(
          () => isOpenDelayedRef.current = true,
          skipDelayDuration
        );
      }, [skipDelayDuration]),
      isPointerInTransitRef,
      onPointerInTransitChange: React52.useCallback((inTransit) => {
        isPointerInTransitRef.current = inTransit;
      }, []),
      disableHoverableContent,
      children
    }
  );
};
TooltipProvider.displayName = PROVIDER_NAME;
var TOOLTIP_NAME = "Tooltip";
var [TooltipContextProvider, useTooltipContext] = createTooltipContext(TOOLTIP_NAME);
var Tooltip = (props) => {
  const {
    __scopeTooltip,
    children,
    open: openProp,
    defaultOpen,
    onOpenChange,
    disableHoverableContent: disableHoverableContentProp,
    delayDuration: delayDurationProp
  } = props;
  const providerContext = useTooltipProviderContext(TOOLTIP_NAME, props.__scopeTooltip);
  const popperScope = usePopperScope4(__scopeTooltip);
  const [trigger, setTrigger] = React52.useState(null);
  const contentId = useId();
  const openTimerRef = React52.useRef(0);
  const disableHoverableContent = disableHoverableContentProp ?? providerContext.disableHoverableContent;
  const delayDuration = delayDurationProp ?? providerContext.delayDuration;
  const wasOpenDelayedRef = React52.useRef(false);
  const [open, setOpen] = useControllableState({
    prop: openProp,
    defaultProp: defaultOpen ?? false,
    onChange: (open2) => {
      if (open2) {
        providerContext.onOpen();
        document.dispatchEvent(new CustomEvent(TOOLTIP_OPEN));
      } else {
        providerContext.onClose();
      }
      onOpenChange == null ? void 0 : onOpenChange(open2);
    },
    caller: TOOLTIP_NAME
  });
  const stateAttribute = React52.useMemo(() => {
    return open ? wasOpenDelayedRef.current ? "delayed-open" : "instant-open" : "closed";
  }, [open]);
  const handleOpen = React52.useCallback(() => {
    window.clearTimeout(openTimerRef.current);
    openTimerRef.current = 0;
    wasOpenDelayedRef.current = false;
    setOpen(true);
  }, [setOpen]);
  const handleClose = React52.useCallback(() => {
    window.clearTimeout(openTimerRef.current);
    openTimerRef.current = 0;
    setOpen(false);
  }, [setOpen]);
  const handleDelayedOpen = React52.useCallback(() => {
    window.clearTimeout(openTimerRef.current);
    openTimerRef.current = window.setTimeout(() => {
      wasOpenDelayedRef.current = true;
      setOpen(true);
      openTimerRef.current = 0;
    }, delayDuration);
  }, [delayDuration, setOpen]);
  React52.useEffect(() => {
    return () => {
      if (openTimerRef.current) {
        window.clearTimeout(openTimerRef.current);
        openTimerRef.current = 0;
      }
    };
  }, []);
  return (0, import_jsx_runtime27.jsx)(Root22, { ...popperScope, children: (0, import_jsx_runtime27.jsx)(
    TooltipContextProvider,
    {
      scope: __scopeTooltip,
      contentId,
      open,
      stateAttribute,
      trigger,
      onTriggerChange: setTrigger,
      onTriggerEnter: React52.useCallback(() => {
        if (providerContext.isOpenDelayedRef.current) handleDelayedOpen();
        else handleOpen();
      }, [providerContext.isOpenDelayedRef, handleDelayedOpen, handleOpen]),
      onTriggerLeave: React52.useCallback(() => {
        if (disableHoverableContent) {
          handleClose();
        } else {
          window.clearTimeout(openTimerRef.current);
          openTimerRef.current = 0;
        }
      }, [handleClose, disableHoverableContent]),
      onOpen: handleOpen,
      onClose: handleClose,
      disableHoverableContent,
      children
    }
  ) });
};
Tooltip.displayName = TOOLTIP_NAME;
var TRIGGER_NAME8 = "TooltipTrigger";
var TooltipTrigger = React52.forwardRef(
  (props, forwardedRef) => {
    const { __scopeTooltip, ...triggerProps } = props;
    const context = useTooltipContext(TRIGGER_NAME8, __scopeTooltip);
    const providerContext = useTooltipProviderContext(TRIGGER_NAME8, __scopeTooltip);
    const popperScope = usePopperScope4(__scopeTooltip);
    const ref = React52.useRef(null);
    const composedRefs = useComposedRefs(forwardedRef, ref, context.onTriggerChange);
    const isPointerDownRef = React52.useRef(false);
    const hasPointerMoveOpenedRef = React52.useRef(false);
    const handlePointerUp = React52.useCallback(() => isPointerDownRef.current = false, []);
    React52.useEffect(() => {
      return () => document.removeEventListener("pointerup", handlePointerUp);
    }, [handlePointerUp]);
    return (0, import_jsx_runtime27.jsx)(Anchor, { asChild: true, ...popperScope, children: (0, import_jsx_runtime27.jsx)(
      Primitive.button,
      {
        "aria-describedby": context.open ? context.contentId : void 0,
        "data-state": context.stateAttribute,
        ...triggerProps,
        ref: composedRefs,
        onPointerMove: composeEventHandlers(props.onPointerMove, (event) => {
          if (event.pointerType === "touch") return;
          if (!hasPointerMoveOpenedRef.current && !providerContext.isPointerInTransitRef.current) {
            context.onTriggerEnter();
            hasPointerMoveOpenedRef.current = true;
          }
        }),
        onPointerLeave: composeEventHandlers(props.onPointerLeave, () => {
          context.onTriggerLeave();
          hasPointerMoveOpenedRef.current = false;
        }),
        onPointerDown: composeEventHandlers(props.onPointerDown, () => {
          if (context.open) {
            context.onClose();
          }
          isPointerDownRef.current = true;
          document.addEventListener("pointerup", handlePointerUp, { once: true });
        }),
        onFocus: composeEventHandlers(props.onFocus, () => {
          if (!isPointerDownRef.current) context.onOpen();
        }),
        onBlur: composeEventHandlers(props.onBlur, context.onClose),
        onClick: composeEventHandlers(props.onClick, context.onClose)
      }
    ) });
  }
);
TooltipTrigger.displayName = TRIGGER_NAME8;
var PORTAL_NAME8 = "TooltipPortal";
var [PortalProvider4, usePortalContext4] = createTooltipContext(PORTAL_NAME8, {
  forceMount: void 0
});
var TooltipPortal = (props) => {
  const { __scopeTooltip, forceMount, children, container } = props;
  const context = useTooltipContext(PORTAL_NAME8, __scopeTooltip);
  return (0, import_jsx_runtime27.jsx)(PortalProvider4, { scope: __scopeTooltip, forceMount, children: (0, import_jsx_runtime27.jsx)(Presence, { present: forceMount || context.open, children: (0, import_jsx_runtime27.jsx)(Portal, { asChild: true, container, children }) }) });
};
TooltipPortal.displayName = PORTAL_NAME8;
var CONTENT_NAME9 = "TooltipContent";
var TooltipContent = React52.forwardRef(
  (props, forwardedRef) => {
    const portalContext = usePortalContext4(CONTENT_NAME9, props.__scopeTooltip);
    const { forceMount = portalContext.forceMount, side = "top", ...contentProps } = props;
    const context = useTooltipContext(CONTENT_NAME9, props.__scopeTooltip);
    return (0, import_jsx_runtime27.jsx)(Presence, { present: forceMount || context.open, children: context.disableHoverableContent ? (0, import_jsx_runtime27.jsx)(TooltipContentImpl, { side, ...contentProps, ref: forwardedRef }) : (0, import_jsx_runtime27.jsx)(TooltipContentHoverable, { side, ...contentProps, ref: forwardedRef }) });
  }
);
var TooltipContentHoverable = React52.forwardRef((props, forwardedRef) => {
  const context = useTooltipContext(CONTENT_NAME9, props.__scopeTooltip);
  const providerContext = useTooltipProviderContext(CONTENT_NAME9, props.__scopeTooltip);
  const ref = React52.useRef(null);
  const composedRefs = useComposedRefs(forwardedRef, ref);
  const [pointerGraceArea, setPointerGraceArea] = React52.useState(null);
  const { trigger, onClose } = context;
  const content = ref.current;
  const { onPointerInTransitChange } = providerContext;
  const handleRemoveGraceArea = React52.useCallback(() => {
    setPointerGraceArea(null);
    onPointerInTransitChange(false);
  }, [onPointerInTransitChange]);
  const handleCreateGraceArea = React52.useCallback(
    (event, hoverTarget) => {
      const currentTarget = event.currentTarget;
      const exitPoint = { x: event.clientX, y: event.clientY };
      const exitSide = getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect());
      const paddedExitPoints = getPaddedExitPoints(exitPoint, exitSide);
      const hoverTargetPoints = getPointsFromRect(hoverTarget.getBoundingClientRect());
      const graceArea = getHull([...paddedExitPoints, ...hoverTargetPoints]);
      setPointerGraceArea(graceArea);
      onPointerInTransitChange(true);
    },
    [onPointerInTransitChange]
  );
  React52.useEffect(() => {
    return () => handleRemoveGraceArea();
  }, [handleRemoveGraceArea]);
  React52.useEffect(() => {
    if (trigger && content) {
      const handleTriggerLeave = (event) => handleCreateGraceArea(event, content);
      const handleContentLeave = (event) => handleCreateGraceArea(event, trigger);
      trigger.addEventListener("pointerleave", handleTriggerLeave);
      content.addEventListener("pointerleave", handleContentLeave);
      return () => {
        trigger.removeEventListener("pointerleave", handleTriggerLeave);
        content.removeEventListener("pointerleave", handleContentLeave);
      };
    }
  }, [trigger, content, handleCreateGraceArea, handleRemoveGraceArea]);
  React52.useEffect(() => {
    if (pointerGraceArea) {
      const handleTrackPointerGrace = (event) => {
        const target = event.target;
        const pointerPosition = { x: event.clientX, y: event.clientY };
        const hasEnteredTarget = (trigger == null ? void 0 : trigger.contains(target)) || (content == null ? void 0 : content.contains(target));
        const isPointerOutsideGraceArea = !isPointInPolygon2(pointerPosition, pointerGraceArea);
        if (hasEnteredTarget) {
          handleRemoveGraceArea();
        } else if (isPointerOutsideGraceArea) {
          handleRemoveGraceArea();
          onClose();
        }
      };
      document.addEventListener("pointermove", handleTrackPointerGrace);
      return () => document.removeEventListener("pointermove", handleTrackPointerGrace);
    }
  }, [trigger, content, pointerGraceArea, onClose, handleRemoveGraceArea]);
  return (0, import_jsx_runtime27.jsx)(TooltipContentImpl, { ...props, ref: composedRefs });
});
var [VisuallyHiddenContentContextProvider, useVisuallyHiddenContentContext] = createTooltipContext(TOOLTIP_NAME, { isInside: false });
var Slottable2 = createSlottable("TooltipContent");
var TooltipContentImpl = React52.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeTooltip,
      children,
      "aria-label": ariaLabel,
      onEscapeKeyDown,
      onPointerDownOutside,
      ...contentProps
    } = props;
    const context = useTooltipContext(CONTENT_NAME9, __scopeTooltip);
    const popperScope = usePopperScope4(__scopeTooltip);
    const { onClose } = context;
    React52.useEffect(() => {
      document.addEventListener(TOOLTIP_OPEN, onClose);
      return () => document.removeEventListener(TOOLTIP_OPEN, onClose);
    }, [onClose]);
    React52.useEffect(() => {
      if (context.trigger) {
        const handleScroll3 = (event) => {
          const target = event.target;
          if (target == null ? void 0 : target.contains(context.trigger)) onClose();
        };
        window.addEventListener("scroll", handleScroll3, { capture: true });
        return () => window.removeEventListener("scroll", handleScroll3, { capture: true });
      }
    }, [context.trigger, onClose]);
    return (0, import_jsx_runtime27.jsx)(
      DismissableLayer,
      {
        asChild: true,
        disableOutsidePointerEvents: false,
        onEscapeKeyDown,
        onPointerDownOutside,
        onFocusOutside: (event) => event.preventDefault(),
        onDismiss: onClose,
        children: (0, import_jsx_runtime27.jsxs)(
          Content3,
          {
            "data-state": context.stateAttribute,
            ...popperScope,
            ...contentProps,
            ref: forwardedRef,
            style: {
              ...contentProps.style,
              // re-namespace exposed content custom properties
              ...{
                "--radix-tooltip-content-transform-origin": "var(--radix-popper-transform-origin)",
                "--radix-tooltip-content-available-width": "var(--radix-popper-available-width)",
                "--radix-tooltip-content-available-height": "var(--radix-popper-available-height)",
                "--radix-tooltip-trigger-width": "var(--radix-popper-anchor-width)",
                "--radix-tooltip-trigger-height": "var(--radix-popper-anchor-height)"
              }
            },
            children: [
              (0, import_jsx_runtime27.jsx)(Slottable2, { children }),
              (0, import_jsx_runtime27.jsx)(VisuallyHiddenContentContextProvider, { scope: __scopeTooltip, isInside: true, children: (0, import_jsx_runtime27.jsx)(Root4, { id: context.contentId, role: "tooltip", children: ariaLabel || children }) })
            ]
          }
        )
      }
    );
  }
);
TooltipContent.displayName = CONTENT_NAME9;
var ARROW_NAME7 = "TooltipArrow";
var TooltipArrow = React52.forwardRef(
  (props, forwardedRef) => {
    const { __scopeTooltip, ...arrowProps } = props;
    const popperScope = usePopperScope4(__scopeTooltip);
    const visuallyHiddenContentContext = useVisuallyHiddenContentContext(
      ARROW_NAME7,
      __scopeTooltip
    );
    return visuallyHiddenContentContext.isInside ? null : (0, import_jsx_runtime27.jsx)(Arrow2, { ...popperScope, ...arrowProps, ref: forwardedRef });
  }
);
TooltipArrow.displayName = ARROW_NAME7;
function getExitSideFromRect(point, rect) {
  const top = Math.abs(rect.top - point.y);
  const bottom = Math.abs(rect.bottom - point.y);
  const right = Math.abs(rect.right - point.x);
  const left = Math.abs(rect.left - point.x);
  switch (Math.min(top, bottom, right, left)) {
    case left:
      return "left";
    case right:
      return "right";
    case top:
      return "top";
    case bottom:
      return "bottom";
    default:
      throw new Error("unreachable");
  }
}
function getPaddedExitPoints(exitPoint, exitSide, padding = 5) {
  const paddedExitPoints = [];
  switch (exitSide) {
    case "top":
      paddedExitPoints.push(
        { x: exitPoint.x - padding, y: exitPoint.y + padding },
        { x: exitPoint.x + padding, y: exitPoint.y + padding }
      );
      break;
    case "bottom":
      paddedExitPoints.push(
        { x: exitPoint.x - padding, y: exitPoint.y - padding },
        { x: exitPoint.x + padding, y: exitPoint.y - padding }
      );
      break;
    case "left":
      paddedExitPoints.push(
        { x: exitPoint.x + padding, y: exitPoint.y - padding },
        { x: exitPoint.x + padding, y: exitPoint.y + padding }
      );
      break;
    case "right":
      paddedExitPoints.push(
        { x: exitPoint.x - padding, y: exitPoint.y - padding },
        { x: exitPoint.x - padding, y: exitPoint.y + padding }
      );
      break;
  }
  return paddedExitPoints;
}
function getPointsFromRect(rect) {
  const { top, right, bottom, left } = rect;
  return [
    { x: left, y: top },
    { x: right, y: top },
    { x: right, y: bottom },
    { x: left, y: bottom }
  ];
}
function isPointInPolygon2(point, polygon) {
  const { x, y } = point;
  let inside = false;
  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {
    const ii = polygon[i];
    const jj = polygon[j];
    const xi = ii.x;
    const yi = ii.y;
    const xj = jj.x;
    const yj = jj.y;
    const intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;
    if (intersect) inside = !inside;
  }
  return inside;
}
function getHull(points) {
  const newPoints = points.slice();
  newPoints.sort((a2, b) => {
    if (a2.x < b.x) return -1;
    else if (a2.x > b.x) return 1;
    else if (a2.y < b.y) return -1;
    else if (a2.y > b.y) return 1;
    else return 0;
  });
  return getHullPresorted(newPoints);
}
function getHullPresorted(points) {
  if (points.length <= 1) return points.slice();
  const upperHull = [];
  for (let i = 0; i < points.length; i++) {
    const p2 = points[i];
    while (upperHull.length >= 2) {
      const q = upperHull[upperHull.length - 1];
      const r2 = upperHull[upperHull.length - 2];
      if ((q.x - r2.x) * (p2.y - r2.y) >= (q.y - r2.y) * (p2.x - r2.x)) upperHull.pop();
      else break;
    }
    upperHull.push(p2);
  }
  upperHull.pop();
  const lowerHull = [];
  for (let i = points.length - 1; i >= 0; i--) {
    const p2 = points[i];
    while (lowerHull.length >= 2) {
      const q = lowerHull[lowerHull.length - 1];
      const r2 = lowerHull[lowerHull.length - 2];
      if ((q.x - r2.x) * (p2.y - r2.y) >= (q.y - r2.y) * (p2.x - r2.x)) lowerHull.pop();
      else break;
    }
    lowerHull.push(p2);
  }
  lowerHull.pop();
  if (upperHull.length === 1 && lowerHull.length === 1 && upperHull[0].x === lowerHull[0].x && upperHull[0].y === lowerHull[0].y) {
    return upperHull;
  } else {
    return upperHull.concat(lowerHull);
  }
}
var Provider = TooltipProvider;
var Root34 = Tooltip;
var Trigger6 = TooltipTrigger;
var Portal6 = TooltipPortal;
var Content27 = TooltipContent;

// ../../../node_modules/@firecms/ui/dist/index.es.js
var ReactDOM5 = __toESM(require_react_dom());

// ../../../node_modules/@radix-ui/react-tabs/dist/index.mjs
var React53 = __toESM(require_react(), 1);
var import_jsx_runtime28 = __toESM(require_jsx_runtime(), 1);
var TABS_NAME = "Tabs";
var [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [
  createRovingFocusGroupScope
]);
var useRovingFocusGroupScope4 = createRovingFocusGroupScope();
var [TabsProvider, useTabsContext] = createTabsContext(TABS_NAME);
var Tabs = React53.forwardRef(
  (props, forwardedRef) => {
    const {
      __scopeTabs,
      value: valueProp,
      onValueChange,
      defaultValue,
      orientation = "horizontal",
      dir,
      activationMode = "automatic",
      ...tabsProps
    } = props;
    const direction = useDirection(dir);
    const [value, setValue] = useControllableState({
      prop: valueProp,
      onChange: onValueChange,
      defaultProp: defaultValue ?? "",
      caller: TABS_NAME
    });
    return (0, import_jsx_runtime28.jsx)(
      TabsProvider,
      {
        scope: __scopeTabs,
        baseId: useId(),
        value,
        onValueChange: setValue,
        orientation,
        dir: direction,
        activationMode,
        children: (0, import_jsx_runtime28.jsx)(
          Primitive.div,
          {
            dir: direction,
            "data-orientation": orientation,
            ...tabsProps,
            ref: forwardedRef
          }
        )
      }
    );
  }
);
Tabs.displayName = TABS_NAME;
var TAB_LIST_NAME = "TabsList";
var TabsList = React53.forwardRef(
  (props, forwardedRef) => {
    const { __scopeTabs, loop = true, ...listProps } = props;
    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);
    const rovingFocusGroupScope = useRovingFocusGroupScope4(__scopeTabs);
    return (0, import_jsx_runtime28.jsx)(
      Root7,
      {
        asChild: true,
        ...rovingFocusGroupScope,
        orientation: context.orientation,
        dir: context.dir,
        loop,
        children: (0, import_jsx_runtime28.jsx)(
          Primitive.div,
          {
            role: "tablist",
            "aria-orientation": context.orientation,
            ...listProps,
            ref: forwardedRef
          }
        )
      }
    );
  }
);
TabsList.displayName = TAB_LIST_NAME;
var TRIGGER_NAME9 = "TabsTrigger";
var TabsTrigger = React53.forwardRef(
  (props, forwardedRef) => {
    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;
    const context = useTabsContext(TRIGGER_NAME9, __scopeTabs);
    const rovingFocusGroupScope = useRovingFocusGroupScope4(__scopeTabs);
    const triggerId = makeTriggerId(context.baseId, value);
    const contentId = makeContentId(context.baseId, value);
    const isSelected = value === context.value;
    return (0, import_jsx_runtime28.jsx)(
      Item,
      {
        asChild: true,
        ...rovingFocusGroupScope,
        focusable: !disabled,
        active: isSelected,
        children: (0, import_jsx_runtime28.jsx)(
          Primitive.button,
          {
            type: "button",
            role: "tab",
            "aria-selected": isSelected,
            "aria-controls": contentId,
            "data-state": isSelected ? "active" : "inactive",
            "data-disabled": disabled ? "" : void 0,
            disabled,
            id: triggerId,
            ...triggerProps,
            ref: forwardedRef,
            onMouseDown: composeEventHandlers(props.onMouseDown, (event) => {
              if (!disabled && event.button === 0 && event.ctrlKey === false) {
                context.onValueChange(value);
              } else {
                event.preventDefault();
              }
            }),
            onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {
              if ([" ", "Enter"].includes(event.key)) context.onValueChange(value);
            }),
            onFocus: composeEventHandlers(props.onFocus, () => {
              const isAutomaticActivation = context.activationMode !== "manual";
              if (!isSelected && !disabled && isAutomaticActivation) {
                context.onValueChange(value);
              }
            })
          }
        )
      }
    );
  }
);
TabsTrigger.displayName = TRIGGER_NAME9;
var CONTENT_NAME10 = "TabsContent";
var TabsContent = React53.forwardRef(
  (props, forwardedRef) => {
    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;
    const context = useTabsContext(CONTENT_NAME10, __scopeTabs);
    const triggerId = makeTriggerId(context.baseId, value);
    const contentId = makeContentId(context.baseId, value);
    const isSelected = value === context.value;
    const isMountAnimationPreventedRef = React53.useRef(isSelected);
    React53.useEffect(() => {
      const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);
      return () => cancelAnimationFrame(rAF);
    }, []);
    return (0, import_jsx_runtime28.jsx)(Presence, { present: forceMount || isSelected, children: ({ present }) => (0, import_jsx_runtime28.jsx)(
      Primitive.div,
      {
        "data-state": isSelected ? "active" : "inactive",
        "data-orientation": context.orientation,
        role: "tabpanel",
        "aria-labelledby": triggerId,
        hidden: !present,
        id: contentId,
        tabIndex: 0,
        ...contentProps,
        ref: forwardedRef,
        style: {
          ...props.style,
          animationDuration: isMountAnimationPreventedRef.current ? "0s" : void 0
        },
        children: present && children
      }
    ) });
  }
);
TabsContent.displayName = CONTENT_NAME10;
function makeTriggerId(baseId, value) {
  return `${baseId}-trigger-${value}`;
}
function makeContentId(baseId, value) {
  return `${baseId}-content-${value}`;
}
var Root27 = Tabs;
var List = TabsList;
var Trigger7 = TabsTrigger;

// ../../../node_modules/@firecms/ui/dist/index.es.js
var focusedDisabled = "focus-visible:ring-0 focus-visible:ring-offset-0";
var focusedInvisibleMixin = "focus:bg-opacity-70 focus:bg-surface-accent-100 focus:dark:bg-surface-800 focus:dark:bg-opacity-60";
var focusedClasses = "z-30 outline-none ring-2 ring-primary ring-opacity-75 ring-offset-2 ring-offset-transparent ";
var fieldBackgroundMixin = "bg-opacity-50 bg-surface-accent-200 dark:bg-surface-800 dark:bg-opacity-60";
var fieldBackgroundInvisibleMixin = "bg-opacity-0 bg-surface-accent-100 dark:bg-surface-800 dark:bg-opacity-0";
var fieldBackgroundDisabledMixin = "dark:bg-surface-800 bg-opacity-50 dark:bg-opacity-90";
var fieldBackgroundHoverMixin = "hover:bg-opacity-70 dark:hover:bg-surface-700 dark:hover:bg-opacity-40";
var defaultBorderMixin = "border-surface-200 border-opacity-40 dark:border-surface-700 dark:border-opacity-40";
var paperMixin = "bg-white rounded-md dark:bg-surface-950 border border-surface-200 border-opacity-40 dark:border-surface-700 dark:border-opacity-40";
var cardMixin = "bg-white border border-surface-200 border-opacity-40 dark:border-transparent rounded-md dark:bg-surface-950 dark:border-surface-700 dark:border-opacity-40 m-1 -p-1";
var cardClickableMixin = "hover:bg-primary-bg dark:hover:bg-primary-bg hover:bg-opacity-20 dark:hover:bg-opacity-20 hover:ring-2 hover:ring-primary cursor-pointer";
var cardSelectedMixin = "bg-primary-bg dark:bg-primary-bg bg-opacity-30 dark:bg-opacity-10 ring-1 ring-primary ring-opacity-75";
function cls(...classes) {
  return twMerge(clsx(classes));
}
function cn(...classes) {
  console.warn("cn() is deprecated, use cls() instead. cn will be removed in the final 3.0.0 version");
  return cls(...classes);
}
function debounce(func, wait = 166) {
  let timeout;
  function debounced(...args) {
    const later = () => {
      func.apply(this, args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  }
  debounced.clear = () => {
    clearTimeout(timeout);
  };
  return debounced;
}
function hashString(str) {
  let hash = 0;
  let i;
  let chr;
  for (i = 0; i < str.length; i++) {
    chr = str.charCodeAt(i);
    hash = (hash << 5) - hash + chr;
    hash |= 0;
  }
  return Math.abs(hash);
}
var CHIP_COLORS = {
  blueLighter: {
    color: "#cfdfff",
    text: "#102046"
  },
  cyanLighter: {
    color: "#d0f0fd",
    text: "#04283f"
  },
  tealLighter: {
    color: "#c2f5e9",
    text: "#012524"
  },
  greenLighter: {
    color: "#d1f7c4",
    text: "#0b1d05"
  },
  yellowLighter: {
    color: "#ffeab6",
    text: "#3b2501"
  },
  orangeLighter: {
    color: "#fee2d5",
    text: "#6b2613"
  },
  redLighter: {
    color: "#ffdce5",
    text: "#4c0c1c"
  },
  pinkLighter: {
    color: "#ffdaf6",
    text: "#400832"
  },
  purpleLighter: {
    color: "#ede2fe",
    text: "#280b42"
  },
  grayLighter: {
    color: "#eee",
    text: "#040404"
  },
  blueLight: {
    color: "#9cc7ff",
    text: "#102046"
  },
  cyanLight: {
    color: "#77d1f3",
    text: "#04283f"
  },
  tealLight: {
    color: "#72ddc3",
    text: "#012524"
  },
  greenLight: {
    color: "#93e088",
    text: "#0b1d05"
  },
  yellowLight: {
    color: "#ffd66e",
    text: "#3b2501"
  },
  orangeLight: {
    color: "#ffa981",
    text: "#6b2613"
  },
  redLight: {
    color: "#ff9eb7",
    text: "#4c0c1c"
  },
  pinkLight: {
    color: "#f99de2",
    text: "#400832"
  },
  purpleLight: {
    color: "#cdb0ff",
    text: "#280b42"
  },
  grayLight: {
    color: "#ccc",
    text: "#040404"
  },
  blueDark: {
    color: "#2d7ff9",
    text: "#fff"
  },
  cyanDark: {
    color: "#18bfff",
    text: "#fff"
  },
  tealDark: {
    color: "#20d9d2",
    text: "#fff"
  },
  greenDark: {
    color: "#20c933",
    text: "#fff"
  },
  yellowDark: {
    color: "#fcb400",
    text: "#fff"
  },
  orangeDark: {
    color: "#ff6f2c",
    text: "#fff"
  },
  redDark: {
    color: "#f82b60",
    text: "#fff"
  },
  pinkDark: {
    color: "#ff08c2",
    text: "#fff"
  },
  purpleDark: {
    color: "#8b46ff",
    text: "#fff"
  },
  grayDark: {
    color: "#666",
    text: "#fff"
  },
  blueDarker: {
    color: "#2750ae",
    text: "#cfdfff"
  },
  cyanDarker: {
    color: "#0b76b7",
    text: "#d0f0fd"
  },
  tealDarker: {
    color: "#06a09b",
    text: "#daf3e9"
  },
  greenDarker: {
    color: "#338a17",
    text: "#d1f7c4"
  },
  yellowDarker: {
    color: "#b87503",
    text: "#ffeab6"
  },
  orangeDarker: {
    color: "#d74d26",
    text: "#fee2d5"
  },
  redDarker: {
    color: "#ba1e45",
    text: "#ffdce5"
  },
  pinkDarker: {
    color: "#b2158b",
    text: "#ffdaf6"
  },
  purpleDarker: {
    color: "#6b1cb0",
    text: "#ede2fe"
  },
  grayDarker: {
    color: "#444",
    text: "#eee"
  }
};
function getColorSchemeForKey(key) {
  return CHIP_COLORS[key];
}
function getColorSchemeForSeed(seed) {
  const hash = hashString(seed);
  const colorKeys = Object.keys(CHIP_COLORS);
  const index2 = hash % colorKeys.length;
  return CHIP_COLORS[colorKeys[index2]];
}
function keyToIconComponent(key) {
  const startsWithNumber = key.match(/^\d/);
  const componentName = (startsWithNumber ? "_" : "") + key.split("_").map((word) => {
    return word.charAt(0).toUpperCase() + word.slice(1);
  }).join("") + "Icon";
  return componentName;
}
function useInjectStyles(key, styles2) {
  const $ = (0, import_react_compiler_runtime.c)(4);
  let t0;
  if ($[0] !== key || $[1] !== styles2) {
    t0 = () => {
      const styleElement = document.getElementById(key);
      if (!styleElement) {
        const style = document.createElement("style");
        style.id = key;
        style.innerHTML = styles2;
        document.head.appendChild(style);
      }
    };
    $[0] = key;
    $[1] = styles2;
    $[2] = t0;
  } else {
    t0 = $[2];
  }
  let t1;
  if ($[3] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = [];
    $[3] = t1;
  } else {
    t1 = $[3];
  }
  (0, import_react22.useEffect)(t0, t1);
}
function useOutsideAlerter(ref, onOutsideClick, t0) {
  const $ = (0, import_react_compiler_runtime.c)(5);
  const active = t0 === void 0 ? true : t0;
  let t1;
  let t2;
  if ($[0] !== active || $[1] !== onOutsideClick || $[2] !== ref) {
    t1 = () => {
      if (!active) {
        return;
      }
      const handleClickOutside = function handleClickOutside2(event) {
        if (isInPresentationLayer(event.target)) {
          return;
        }
        if (ref.current && !ref.current.contains(event.target)) {
          onOutsideClick();
        }
      };
      document.addEventListener("mousedown", handleClickOutside);
      return () => {
        document.removeEventListener("mousedown", handleClickOutside);
      };
    };
    t2 = [ref, active, onOutsideClick];
    $[0] = active;
    $[1] = onOutsideClick;
    $[2] = ref;
    $[3] = t1;
    $[4] = t2;
  } else {
    t1 = $[3];
    t2 = $[4];
  }
  (0, import_react22.useEffect)(t1, t2);
}
function isInPresentationLayer(node) {
  if (node instanceof HTMLElement) {
    if (node.getAttribute("role") === "presentation") return true;
    return isInPresentationLayer(node.parentNode);
  }
  return false;
}
function useDebounceValue(value, t0) {
  const $ = (0, import_react_compiler_runtime.c)(4);
  const delay = t0 === void 0 ? 300 : t0;
  const [debouncedValue, setDebouncedValue] = (0, import_react22.useState)(value);
  let t1;
  let t2;
  if ($[0] !== delay || $[1] !== value) {
    t1 = () => {
      const handler = setTimeout(() => {
        setDebouncedValue(value);
      }, delay);
      return () => {
        clearTimeout(handler);
      };
    };
    t2 = [value, delay];
    $[0] = delay;
    $[1] = value;
    $[2] = t1;
    $[3] = t2;
  } else {
    t1 = $[2];
    t2 = $[3];
  }
  (0, import_react22.useEffect)(t1, t2);
  return debouncedValue;
}
function useIconStyles(t0) {
  const {
    fill: t1,
    weight: t2,
    grad: t3,
    opticalSize: t4
  } = t0;
  const fill = t1 === void 0 ? true : t1;
  const weight = t2 === void 0 ? 500 : t2;
  const grad = t3 === void 0 ? 0 : t3;
  const opticalSize = t4 === void 0 ? 24 : t4;
  useInjectStyles("icons", `
.material-symbols-rounded {
  font-variation-settings: 'FILL' ${fill ? 1 : 0}, 'wght' ${weight}, 'GRAD' ${grad}, 'opsz' ${opticalSize};
}`);
}
function Collapse(t0) {
  const $ = (0, import_react_compiler_runtime.c)(9);
  const {
    children,
    className,
    in: t1,
    duration: t2
  } = t0;
  const isOpen = t1 === void 0 ? false : t1;
  const duration = t2 === void 0 ? 220 : t2;
  useInjectStyles(`Collapse-${duration}`, `
.CollapseContent-${duration} {
  overflow: hidden;
}
.CollapseContent-${duration}[data-state='open'] {
  animation: slideDown ${duration}ms ease-out;
}
.CollapseContent-${duration}[data-state='closed'] {
  animation: slideUp ${duration}ms ease-in;
}

@keyframes slideDown {
  from {
    height: 0;
  }
  to {
    height: var(--radix-collapsible-content-height);
  }
}

@keyframes slideUp {
  from {
    height: var(--radix-collapsible-content-height);
  }
  to {
    height: 0;
  }
}
`);
  const t3 = `CollapseContent-${duration}`;
  let t4;
  if ($[0] !== t3) {
    t4 = cls(t3);
    $[0] = t3;
    $[1] = t4;
  } else {
    t4 = $[1];
  }
  let t5;
  if ($[2] !== children || $[3] !== t4) {
    t5 = (0, import_jsx_runtime29.jsx)(Content, { className: t4, children });
    $[2] = children;
    $[3] = t4;
    $[4] = t5;
  } else {
    t5 = $[4];
  }
  let t6;
  if ($[5] !== className || $[6] !== isOpen || $[7] !== t5) {
    t6 = (0, import_jsx_runtime29.jsx)(Root, { open: isOpen, className, children: t5 });
    $[5] = className;
    $[6] = isOpen;
    $[7] = t5;
    $[8] = t6;
  } else {
    t6 = $[8];
  }
  return t6;
}
var useAutoComplete = ({
  ref
}) => {
  const [autoCompleteOpen, setAutoCompleteOpen] = import_react22.default.useState(false);
  const [inputFocused, setInputFocused] = import_react22.default.useState(false);
  import_react22.default.useEffect(() => {
    if (ref.current) {
      ref.current.onfocus = () => {
        setAutoCompleteOpen(true);
        setInputFocused(true);
      };
      ref.current.onblur = () => {
        setInputFocused(false);
      };
    }
  }, [ref]);
  return {
    inputFocused,
    autoCompleteOpen,
    setAutoCompleteOpen
  };
};
function Autocomplete(t0) {
  const $ = (0, import_react_compiler_runtime.c)(13);
  const {
    children,
    open,
    setOpen
  } = t0;
  const autocompleteRef = import_react22.default.useRef(null);
  let t1;
  if ($[0] !== setOpen) {
    t1 = () => setOpen(false);
    $[0] = setOpen;
    $[1] = t1;
  } else {
    t1 = $[1];
  }
  useOutsideAlerter(autocompleteRef, t1);
  const t2 = open ? "shadow" : "";
  let t3;
  if ($[2] !== t2) {
    t3 = cls("absolute top-full left-0 right-0 overflow-visible", t2, "my-2", "z-20", "w-full");
    $[2] = t2;
    $[3] = t3;
  } else {
    t3 = $[3];
  }
  const t4 = open ? paperMixin : "";
  let t5;
  if ($[4] !== t4) {
    t5 = cls(t4, "bg-surface-50 dark:bg-surface-900 py-2");
    $[4] = t4;
    $[5] = t5;
  } else {
    t5 = $[5];
  }
  let t6;
  if ($[6] !== children || $[7] !== t5) {
    t6 = (0, import_jsx_runtime29.jsx)("div", { ref: autocompleteRef, className: t5, children });
    $[6] = children;
    $[7] = t5;
    $[8] = t6;
  } else {
    t6 = $[8];
  }
  let t7;
  if ($[9] !== open || $[10] !== t3 || $[11] !== t6) {
    t7 = (0, import_jsx_runtime29.jsx)(Collapse, { in: open, duration: 50, className: t3, children: t6 });
    $[9] = open;
    $[10] = t3;
    $[11] = t6;
    $[12] = t7;
  } else {
    t7 = $[12];
  }
  return t7;
}
function AutocompleteItem(t0) {
  const $ = (0, import_react_compiler_runtime.c)(3);
  const {
    children,
    onClick
  } = t0;
  let t1;
  if ($[0] !== children || $[1] !== onClick) {
    t1 = (0, import_jsx_runtime29.jsx)("div", { className: "flex w-full items-center pr-6 pl-14 h-[48px] cursor-pointer hover:bg-surface-accent-100 dark:hover:bg-surface-accent-800", onClick, children });
    $[0] = children;
    $[1] = onClick;
    $[2] = t1;
  } else {
    t1 = $[2];
  }
  return t1;
}
var getSizeClasses = (size4) => {
  switch (size4) {
    case "small":
      return "px-4 py-1";
    case "large":
      return "px-4 py-4";
    case "medium":
    default:
      return "px-4 py-2";
  }
};
var getColorClasses = (severity) => {
  switch (severity) {
    case "error":
      return "bg-red-50 dark:bg-red-800 dark:text-red-100 text-red-900";
    case "warning":
      return "bg-amber-50 dark:bg-amber-800 dark:text-amber-100 text-amber-900";
    case "info":
      return "bg-blue-100 dark:bg-blue-800 dark:text-blue-100 text-blue-900";
    case "success":
      return "bg-emerald-50 dark:bg-emerald-800 dark:text-emerald-100 text-emerald-900";
    case "base":
    default:
      return "bg-surface-accent-50 dark:bg-surface-accent-800 dark:text-white text-surface-accent-900";
  }
};
var Alert = (t0) => {
  const $ = (0, import_react_compiler_runtime.c)(16);
  const {
    children,
    onDismiss,
    color: t1,
    size: t2,
    action,
    className,
    style
  } = t0;
  const color = t1 === void 0 ? "info" : t1;
  const size4 = t2 === void 0 ? "medium" : t2;
  let t3;
  let t4;
  if ($[0] !== className || $[1] !== color || $[2] !== size4 || $[3] !== style) {
    const classes = getColorClasses(color);
    t3 = style;
    t4 = cls(getSizeClasses(size4), "w-full", "font-medium", "rounded-md flex items-center gap-2", classes, className);
    $[0] = className;
    $[1] = color;
    $[2] = size4;
    $[3] = style;
    $[4] = t3;
    $[5] = t4;
  } else {
    t3 = $[4];
    t4 = $[5];
  }
  let t5;
  if ($[6] !== children) {
    t5 = (0, import_jsx_runtime29.jsx)("div", { className: "flex-grow", children });
    $[6] = children;
    $[7] = t5;
  } else {
    t5 = $[7];
  }
  let t6;
  if ($[8] !== onDismiss) {
    t6 = onDismiss && (0, import_jsx_runtime29.jsx)("button", { className: "text-surface-accent-400 hover:text-surface-accent-600 dark:text-surface-accent-500 dark:hover:text-surface-accent-400", onClick: onDismiss, children: "×" });
    $[8] = onDismiss;
    $[9] = t6;
  } else {
    t6 = $[9];
  }
  let t7;
  if ($[10] !== action || $[11] !== t3 || $[12] !== t4 || $[13] !== t5 || $[14] !== t6) {
    t7 = (0, import_jsx_runtime29.jsxs)("div", { style: t3, className: t4, children: [
      t5,
      t6,
      action
    ] });
    $[10] = action;
    $[11] = t3;
    $[12] = t4;
    $[13] = t5;
    $[14] = t6;
    $[15] = t7;
  } else {
    t7 = $[15];
  }
  return t7;
};
var AvatarInner = (t0, ref) => {
  const $ = (0, import_react_compiler_runtime.c)(25);
  let alt;
  let children;
  let className;
  let outerClassName;
  let props;
  let src;
  let style;
  let t1;
  if ($[0] !== t0) {
    ({
      src,
      alt,
      children,
      className,
      style,
      outerClassName,
      hover: t1,
      ...props
    } = t0);
    $[0] = t0;
    $[1] = alt;
    $[2] = children;
    $[3] = className;
    $[4] = outerClassName;
    $[5] = props;
    $[6] = src;
    $[7] = style;
    $[8] = t1;
  } else {
    alt = $[1];
    children = $[2];
    className = $[3];
    outerClassName = $[4];
    props = $[5];
    src = $[6];
    style = $[7];
    t1 = $[8];
  }
  const hover = t1 === void 0 ? true : t1;
  const [isImageError, setIsImageError] = (0, import_react22.useState)(false);
  let t2;
  if ($[9] === Symbol.for("react.memo_cache_sentinel")) {
    t2 = () => {
      setIsImageError(true);
    };
    $[9] = t2;
  } else {
    t2 = $[9];
  }
  const handleImageError = t2;
  const t3 = hover && "hover:bg-surface-accent-200 hover:dark:bg-surface-accent-700";
  let t4;
  if ($[10] !== outerClassName || $[11] !== t3) {
    t4 = cls("rounded-full flex items-center justify-center overflow-hidden", "p-1 w-12 h-12 min-w-12 min-h-12", t3, outerClassName);
    $[10] = outerClassName;
    $[11] = t3;
    $[12] = t4;
  } else {
    t4 = $[12];
  }
  let t5;
  if ($[13] !== alt || $[14] !== children || $[15] !== className || $[16] !== isImageError || $[17] !== src) {
    t5 = src && !isImageError ? (0, import_jsx_runtime29.jsx)("img", { className: cls("bg-surface-accent-100 dark:bg-surface-accent-800", "w-full h-full object-cover rounded-full", className), src, alt, onError: handleImageError }) : (0, import_jsx_runtime29.jsx)("span", { className: cls("bg-surface-accent-100 dark:bg-surface-accent-800", "flex items-center justify-center", "w-full h-full py-1.5 text-lg font-medium text-surface-accent-900 dark:text-white rounded-full", className), children });
    $[13] = alt;
    $[14] = children;
    $[15] = className;
    $[16] = isImageError;
    $[17] = src;
    $[18] = t5;
  } else {
    t5 = $[18];
  }
  let t6;
  if ($[19] !== props || $[20] !== ref || $[21] !== style || $[22] !== t4 || $[23] !== t5) {
    t6 = (0, import_jsx_runtime29.jsx)("button", { ref, style, ...props, className: t4, children: t5 });
    $[19] = props;
    $[20] = ref;
    $[21] = style;
    $[22] = t4;
    $[23] = t5;
    $[24] = t6;
  } else {
    t6 = $[24];
  }
  return t6;
};
var Avatar = import_react22.default.forwardRef(AvatarInner);
var BooleanSwitch = import_react22.default.forwardRef(function BooleanSwitch2({
  value,
  allowIndeterminate,
  className,
  onValueChange,
  disabled = false,
  size: size4 = "medium",
  ...props
}, ref) {
  return (0, import_jsx_runtime29.jsxs)("button", { type: "button", ref, tabIndex: disabled ? -1 : void 0, onClick: disabled ? (e) => e.preventDefault() : (e_0) => {
    e_0.preventDefault();
    if (allowIndeterminate) {
      if (value === null || value === void 0) onValueChange == null ? void 0 : onValueChange(true);
      else if (value) onValueChange == null ? void 0 : onValueChange(false);
      else onValueChange == null ? void 0 : onValueChange(null);
    } else {
      onValueChange == null ? void 0 : onValueChange(!value);
    }
  }, className: cls(size4 === "small" ? "w-[38px] h-[22px] min-w-[38px] min-h-[22px]" : "w-[42px] h-[26px] min-w-[42px] min-h-[26px]", "outline-none rounded-full relative shadow-sm", value ? disabled ? "bg-white bg-opacity-54 dark:bg-surface-accent-950 border-surface-accent-100 dark:border-surface-accent-700 ring-1 ring-surface-accent-200 dark:ring-surface-accent-700" : "ring-secondary ring-1 bg-secondary dark:bg-secondary" : "bg-white bg-opacity-54 dark:bg-surface-accent-900 ring-1 ring-surface-accent-200 dark:ring-surface-accent-700", className), ...props, children: [
    allowIndeterminate && (value === null || value === void 0) && (0, import_jsx_runtime29.jsx)("div", { className: cls("block rounded-full transition-transform duration-100 transform will-change-auto", disabled ? "bg-surface-accent-400 dark:bg-surface-accent-600" : "bg-surface-accent-400 dark:bg-surface-accent-600", {
      "w-[21px] h-[10px]": size4 === "medium" || size4 === "large",
      "w-[19px] h-[8px]": size4 === "small",
      "translate-x-[10px]": size4 === "medium" || size4 === "large",
      "translate-x-[9px]": size4 === "small"
    }) }, "knob"),
    !(allowIndeterminate && (value === null || value === void 0)) && (0, import_jsx_runtime29.jsx)("div", { className: cls("block rounded-full transition-transform duration-100 transform will-change-auto", disabled ? "bg-surface-accent-300 dark:bg-surface-accent-700" : value ? "bg-white" : "bg-surface-accent-600 dark:bg-surface-accent-400", {
      "w-[21px] h-[21px]": size4 === "medium" || size4 === "large",
      "w-[19px] h-[19px]": size4 === "small",
      [value ? "translate-x-[19px]" : "translate-x-[3px]"]: size4 === "medium" || size4 === "large",
      [value ? "translate-x-[17px]" : "translate-x-[2px]"]: size4 === "small"
    }) }, "knob")
  ] });
});
var BooleanSwitchWithLabel = function BooleanSwitchWithLabel2({
  value,
  position = "end",
  size: size4 = "medium",
  invisible,
  onValueChange,
  error: error2,
  label,
  autoFocus,
  disabled,
  className,
  fullWidth = true,
  inputClassName,
  ...props
}) {
  const ref = import_react22.default.useRef(null);
  const refInput = import_react22.default.useRef(null);
  const [_2, setFocused] = import_react22.default.useState(autoFocus);
  const onFocus = () => setFocused(true);
  const onBlur = () => setFocused(false);
  import_react22.default.useEffect(() => {
  }, []);
  const focus2 = document.activeElement === (refInput == null ? void 0 : refInput.current) || document.activeElement === (ref == null ? void 0 : ref.current);
  return (0, import_jsx_runtime29.jsxs)("div", { ref, onFocus, onBlur, tabIndex: -1, className: cls(!invisible && fieldBackgroundMixin, !invisible && (disabled ? fieldBackgroundDisabledMixin : fieldBackgroundHoverMixin), disabled ? "cursor-default" : "cursor-pointer", "rounded-md max-w-full justify-between box-border relative inline-flex items-center", !invisible && focus2 && !disabled ? focusedClasses : "", error2 ? "text-red-500 dark:text-red-600" : focus2 && !disabled ? "text-primary" : !disabled ? "text-text-primary dark:text-text-primary-dark" : "text-text-secondary dark:text-text-secondary-dark", {
    "min-h-[28px]": size4 === "smallest",
    "min-h-[32px]": size4 === "small",
    "min-h-[42px]": size4 === "medium",
    "min-h-[64px]": size4 === "large"
  }, size4 === "small" ? "pl-2" : "pl-4", size4 === "small" ? "pr-4" : "pr-6", position === "end" ? "flex-row-reverse" : "flex-row", fullWidth ? "w-full" : "", className), onClick: disabled ? void 0 : (e) => {
    if (props.allowIndeterminate) {
      if (value === null || value === void 0) onValueChange == null ? void 0 : onValueChange(true);
      else if (value) onValueChange == null ? void 0 : onValueChange(false);
      else onValueChange == null ? void 0 : onValueChange(null);
    } else {
      onValueChange == null ? void 0 : onValueChange(!value);
    }
  }, children: [
    (0, import_jsx_runtime29.jsx)(BooleanSwitch, { value, ref: refInput, size: size4, className: cls(invisible && focus2 ? focusedClasses : "", inputClassName), disabled, ...props }),
    (0, import_jsx_runtime29.jsx)("div", { className: cls("flex-grow", position === "end" ? "mr-4" : "ml-4", size4 === "small" ? "text-sm" : "text-base"), children: label })
  ] });
};
var ButtonInner = import_react22.default.forwardRef((t0, ref) => {
  const $ = (0, import_react_compiler_runtime.c)(53);
  let Component;
  let children;
  let className;
  let props;
  let t1;
  let t2;
  let t3;
  let t4;
  let t5;
  let t6;
  if ($[0] !== t0) {
    ({
      children,
      className,
      variant: t1,
      disabled: t2,
      size: t3,
      startIcon: t4,
      fullWidth: t5,
      component: Component,
      color: t6,
      ...props
    } = t0);
    $[0] = t0;
    $[1] = Component;
    $[2] = children;
    $[3] = className;
    $[4] = props;
    $[5] = t1;
    $[6] = t2;
    $[7] = t3;
    $[8] = t4;
    $[9] = t5;
    $[10] = t6;
  } else {
    Component = $[1];
    children = $[2];
    className = $[3];
    props = $[4];
    t1 = $[5];
    t2 = $[6];
    t3 = $[7];
    t4 = $[8];
    t5 = $[9];
    t6 = $[10];
  }
  const variant = t1 === void 0 ? "filled" : t1;
  const disabled = t2 === void 0 ? false : t2;
  const size4 = t3 === void 0 ? "medium" : t3;
  const startIcon = t4 === void 0 ? null : t4;
  const fullWidth = t5 === void 0 ? false : t5;
  const color = t6 === void 0 ? "primary" : t6;
  const t7 = !fullWidth;
  const t8 = variant === "filled" && color === "primary" && !disabled;
  const t9 = variant === "filled" && color === "secondary" && !disabled;
  const t10 = variant === "filled" && color === "error" && !disabled;
  const t11 = variant === "filled" && color === "text" && !disabled;
  const t12 = variant === "filled" && color === "neutral" && !disabled;
  const t13 = variant === "text" && color === "primary" && !disabled;
  const t14 = variant === "text" && color === "secondary" && !disabled;
  const t15 = variant === "text" && color === "error" && !disabled;
  const t16 = variant === "text" && color === "text" && !disabled;
  const t17 = variant === "text" && color === "neutral" && !disabled;
  const t18 = variant === "outlined" && color === "primary" && !disabled;
  const t19 = variant === "outlined" && color === "secondary" && !disabled;
  const t20 = variant === "outlined" && color === "error" && !disabled;
  const t21 = variant === "outlined" && color === "text" && !disabled;
  const t22 = variant === "outlined" && color === "neutral" && !disabled;
  const t23 = variant === "text" && disabled;
  const t24 = variant === "outlined" && disabled;
  const t25 = variant === "filled" && disabled;
  let t26;
  let t27;
  let t28;
  let t29;
  let t30;
  if ($[11] !== Component || $[12] !== children || $[13] !== className || $[14] !== disabled || $[15] !== fullWidth || $[16] !== props || $[17] !== ref || $[18] !== size4 || $[19] !== startIcon || $[20] !== t10 || $[21] !== t11 || $[22] !== t12 || $[23] !== t13 || $[24] !== t14 || $[25] !== t15 || $[26] !== t16 || $[27] !== t17 || $[28] !== t18 || $[29] !== t19 || $[30] !== t20 || $[31] !== t21 || $[32] !== t22 || $[33] !== t23 || $[34] !== t24 || $[35] !== t25 || $[36] !== t7 || $[37] !== t8 || $[38] !== t9) {
    t30 = Symbol.for("react.early_return_sentinel");
    bb0: {
      const buttonClasses2 = cls({
        "w-full": fullWidth,
        "w-fit": t7,
        "border border-primary bg-primary focus:ring-primary shadow hover:ring-1 hover:ring-primary text-white hover:text-white": t8,
        "border border-secondary bg-secondary focus:ring-secondary shadow hover:ring-1 hover:ring-secondary text-white hover:text-white": t9,
        "border border-red-500 bg-red-500 hover:bg-red-500 focus:ring-red-500 shadow hover:ring-1 hover:ring-red-600 text-white hover:text-white": t10,
        "border border-surface-accent-200 bg-surface-accent-200 hover:bg-surface-accent-300 focus:ring-surface-accent-400 shadow hover:ring-1 hover:ring-surface-accent-400 text-text-primary hover:text-text-primary dark:text-text-primary-dark hover:dark:text-text-primary-dark": t11,
        "border border-transparent bg-surface-100 hover:bg-surface-accent-200 text-text-primary dark:bg-surface-800 dark:hover:bg-surface-accent-700 dark:text-text-primary-dark": t12,
        "border border-transparent text-primary hover:text-primary hover:bg-surface-accent-200 hover:bg-opacity-75 dark:hover:bg-surface-accent-800": t13,
        "border border-transparent text-secondary hover:text-secondary hover:bg-surface-accent-200 hover:bg-opacity-75 dark:hover:bg-surface-accent-800": t14,
        "border border-transparent text-red-500 hover:text-red-500 hover:bg-red-500 hover:bg-opacity-10": t15,
        "border border-transparent text-text-primary hover:text-text-primary dark:text-text-primary-dark hover:dark:text-text-primary-dark hover:bg-surface-accent-200 hover:dark:bg-surface-700": t16,
        "border border-transparent text-text-primary hover:text-text-primary hover:bg-surface-accent-200 dark:text-text-primary-dark dark:hover:bg-surface-accent-700": t17,
        "border border-primary text-primary hover:text-primary hover:bg-primary-bg": t18,
        "border border-secondary text-secondary hover:text-secondary hover:bg-secondary-bg": t19,
        "border border-red-500 text-red-500 hover:text-red-500 hover:bg-red-500 hover:text-white": t20,
        "border border-surface-accent-400 text-text-primary hover:text-text-primary dark:text-text-primary-dark hover:bg-surface-accent-200": t21,
        "border border-surface-400 text-text-primary hover:bg-surface-accent-200 dark:border-surface-600 dark:text-text-primary-dark dark:hover:bg-surface-accent-700": t22,
        "text-text-disabled dark:text-text-disabled-dark": disabled,
        "border border-transparent opacity-50": t23,
        "border border-surface-500 opacity-50": t24,
        "border border-transparent bg-surface-300 dark:bg-surface-500 opacity-40": t25
      });
      const sizeClasses2 = cls({
        "py-1 px-2": size4 === "small",
        "py-2 px-4": size4 === "medium",
        "py-2.5 px-5": size4 === "large",
        "py-3 px-6": size4 === "xl",
        "py-4 px-10": size4 === "2xl"
      });
      if (Component) {
        t30 = (0, import_jsx_runtime29.jsxs)(Component, { ref, onClick: props.onClick, className: cls(startIcon ? "pl-3" : "", "typography-button h-fit rounded-md whitespace-nowrap inline-flex items-center justify-center p-2 px-4 focus:outline-none transition ease-in-out duration-150 gap-2", buttonClasses2, sizeClasses2, className), ...props, children: [
          startIcon,
          children
        ] });
        break bb0;
      }
      t26 = ref;
      t27 = props.type ?? "button";
      t28 = props.onClick;
      t29 = cls(startIcon ? "pl-3" : "", "typography-button h-fit rounded-md whitespace-nowrap inline-flex items-center justify-center p-2 px-4 focus:outline-none transition ease-in-out duration-150 gap-2", buttonClasses2, sizeClasses2, className);
    }
    $[11] = Component;
    $[12] = children;
    $[13] = className;
    $[14] = disabled;
    $[15] = fullWidth;
    $[16] = props;
    $[17] = ref;
    $[18] = size4;
    $[19] = startIcon;
    $[20] = t10;
    $[21] = t11;
    $[22] = t12;
    $[23] = t13;
    $[24] = t14;
    $[25] = t15;
    $[26] = t16;
    $[27] = t17;
    $[28] = t18;
    $[29] = t19;
    $[30] = t20;
    $[31] = t21;
    $[32] = t22;
    $[33] = t23;
    $[34] = t24;
    $[35] = t25;
    $[36] = t7;
    $[37] = t8;
    $[38] = t9;
    $[39] = t26;
    $[40] = t27;
    $[41] = t28;
    $[42] = t29;
    $[43] = t30;
  } else {
    t26 = $[39];
    t27 = $[40];
    t28 = $[41];
    t29 = $[42];
    t30 = $[43];
  }
  if (t30 !== Symbol.for("react.early_return_sentinel")) {
    return t30;
  }
  const t31 = props;
  let t32;
  if ($[44] !== children || $[45] !== disabled || $[46] !== startIcon || $[47] !== t26 || $[48] !== t27 || $[49] !== t28 || $[50] !== t29 || $[51] !== t31) {
    t32 = (0, import_jsx_runtime29.jsxs)("button", { ref: t26, type: t27, onClick: t28, className: t29, disabled, ...t31, children: [
      startIcon,
      children
    ] });
    $[44] = children;
    $[45] = disabled;
    $[46] = startIcon;
    $[47] = t26;
    $[48] = t27;
    $[49] = t28;
    $[50] = t29;
    $[51] = t31;
    $[52] = t32;
  } else {
    t32 = $[52];
  }
  return t32;
});
ButtonInner.displayName = "Button";
var Button = ButtonInner;
var Card = import_react22.default.forwardRef((t0, ref) => {
  const $ = (0, import_react_compiler_runtime.c)(21);
  let children;
  let className;
  let onClick;
  let props;
  let style;
  if ($[0] !== t0) {
    ({
      children,
      className,
      onClick,
      style,
      ...props
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = onClick;
    $[4] = props;
    $[5] = style;
  } else {
    children = $[1];
    className = $[2];
    onClick = $[3];
    props = $[4];
    style = $[5];
  }
  let t1;
  if ($[6] !== onClick) {
    t1 = (e) => {
      if (e.key === "Enter" || e.key === " ") {
        onClick == null ? void 0 : onClick();
      }
    };
    $[6] = onClick;
    $[7] = t1;
  } else {
    t1 = $[7];
  }
  const onKeyPress = t1;
  const t2 = onClick ? "button" : void 0;
  const t3 = onClick ? 0 : void 0;
  const t4 = onClick && cardClickableMixin;
  let t5;
  if ($[8] !== className || $[9] !== t4) {
    t5 = cls(cardMixin, t4, className);
    $[8] = className;
    $[9] = t4;
    $[10] = t5;
  } else {
    t5 = $[10];
  }
  let t6;
  if ($[11] !== children || $[12] !== onClick || $[13] !== onKeyPress || $[14] !== props || $[15] !== ref || $[16] !== style || $[17] !== t2 || $[18] !== t3 || $[19] !== t5) {
    t6 = (0, import_jsx_runtime29.jsx)("div", { ref, onKeyPress, role: t2, tabIndex: t3, onClick, className: t5, style, ...props, children });
    $[11] = children;
    $[12] = onClick;
    $[13] = onKeyPress;
    $[14] = props;
    $[15] = ref;
    $[16] = style;
    $[17] = t2;
    $[18] = t3;
    $[19] = t5;
    $[20] = t6;
  } else {
    t6 = $[20];
  }
  return t6;
});
var containerMaxWidths = {
  xs: "max-w-xs",
  sm: "max-w-sm",
  md: "max-w-md",
  lg: "max-w-lg",
  xl: "max-w-xl",
  "2xl": "max-w-2xl",
  "3xl": "max-w-3xl",
  "4xl": "max-w-4xl",
  "5xl": "max-w-5xl",
  "6xl": "max-w-6xl",
  "7xl": "max-w-7xl"
};
var ContainerInner = (t0, ref) => {
  const $ = (0, import_react_compiler_runtime.c)(8);
  const {
    children,
    className,
    style,
    maxWidth: t1
  } = t0;
  const maxWidth = t1 === void 0 ? "7xl" : t1;
  const classForMaxWidth = maxWidth ? containerMaxWidths[maxWidth] : "";
  let t2;
  if ($[0] !== classForMaxWidth || $[1] !== className) {
    t2 = cls("mx-auto px-3 md:px-4 lg-px-6", classForMaxWidth, className);
    $[0] = classForMaxWidth;
    $[1] = className;
    $[2] = t2;
  } else {
    t2 = $[2];
  }
  let t3;
  if ($[3] !== children || $[4] !== ref || $[5] !== style || $[6] !== t2) {
    t3 = (0, import_jsx_runtime29.jsx)("div", { ref, className: t2, style, children });
    $[3] = children;
    $[4] = ref;
    $[5] = style;
    $[6] = t2;
    $[7] = t3;
  } else {
    t3 = $[7];
  }
  return t3;
};
var Container = import_react22.default.forwardRef(ContainerInner);
var CenteredView = import_react22.default.forwardRef((t0, ref) => {
  const $ = (0, import_react_compiler_runtime.c)(21);
  let children;
  let className;
  let fullScreen;
  let maxWidth;
  let outerClassName;
  let rest;
  if ($[0] !== t0) {
    ({
      children,
      maxWidth,
      outerClassName,
      className,
      fullScreen,
      ...rest
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = fullScreen;
    $[4] = maxWidth;
    $[5] = outerClassName;
    $[6] = rest;
  } else {
    children = $[1];
    className = $[2];
    fullScreen = $[3];
    maxWidth = $[4];
    outerClassName = $[5];
    rest = $[6];
  }
  const t1 = fullScreen ? "h-screen" : "h-full";
  let t2;
  if ($[7] !== outerClassName || $[8] !== t1) {
    t2 = cls("flex flex-col flex-grow", t1, outerClassName);
    $[7] = outerClassName;
    $[8] = t1;
    $[9] = t2;
  } else {
    t2 = $[9];
  }
  let t3;
  if ($[10] !== className) {
    t3 = cls("m-auto", className);
    $[10] = className;
    $[11] = t3;
  } else {
    t3 = $[11];
  }
  let t4;
  if ($[12] !== children || $[13] !== maxWidth || $[14] !== t3) {
    t4 = (0, import_jsx_runtime29.jsx)(Container, { className: t3, maxWidth, children });
    $[12] = children;
    $[13] = maxWidth;
    $[14] = t3;
    $[15] = t4;
  } else {
    t4 = $[15];
  }
  let t5;
  if ($[16] !== ref || $[17] !== rest || $[18] !== t2 || $[19] !== t4) {
    t5 = (0, import_jsx_runtime29.jsx)("div", { ref, className: t2, ...rest, children: t4 });
    $[16] = ref;
    $[17] = rest;
    $[18] = t2;
    $[19] = t4;
    $[20] = t5;
  } else {
    t5 = $[20];
  }
  return t5;
});
CenteredView.displayName = "CenteredView";
function CircularProgress(t0) {
  const $ = (0, import_react_compiler_runtime.c)(7);
  const {
    size: t1,
    className
  } = t0;
  const size4 = t1 === void 0 ? "medium" : t1;
  let sizeClasses2;
  if (size4 === "smallest") {
    sizeClasses2 = "w-4 h-4";
  } else {
    if (size4 === "small") {
      sizeClasses2 = "w-6 h-6";
    } else {
      if (size4 === "medium") {
        sizeClasses2 = "w-8 h-8 m-1";
      } else {
        sizeClasses2 = "w-10 h-10 m-1";
      }
    }
  }
  let borderClasses;
  if (size4 === "smallest") {
    borderClasses = "border-[3px]";
  } else {
    if (size4 === "small") {
      borderClasses = "border-[4px]";
    } else {
      if (size4 === "medium") {
        borderClasses = "border-4";
      } else {
        borderClasses = "border-[6px]";
      }
    }
  }
  let t2;
  if ($[0] !== borderClasses || $[1] !== className || $[2] !== sizeClasses2) {
    t2 = cls(sizeClasses2, borderClasses, "inline-block animate-spin rounded-full border-solid border-current border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]", "text-primary dark:text-primary", className);
    $[0] = borderClasses;
    $[1] = className;
    $[2] = sizeClasses2;
    $[3] = t2;
  } else {
    t2 = $[3];
  }
  let t3;
  if ($[4] === Symbol.for("react.memo_cache_sentinel")) {
    t3 = (0, import_jsx_runtime29.jsx)("span", { className: "!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]", children: "Loading..." });
    $[4] = t3;
  } else {
    t3 = $[4];
  }
  let t4;
  if ($[5] !== t2) {
    t4 = (0, import_jsx_runtime29.jsx)("div", { className: t2, role: "status", children: t3 });
    $[5] = t2;
    $[6] = t4;
  } else {
    t4 = $[6];
  }
  return t4;
}
var iconKeys = ["10k", "10mp", "11mp", "123", "12mp", "13mp", "14mp", "15mp", "16mp", "17mp", "18_up_rating", "18mp", "19mp", "1k", "1k_plus", "1x_mobiledata", "20mp", "21mp", "22mp", "23mp", "24mp", "2k", "2k_plus", "2mp", "30fps", "30fps_select", "360", "3d_rotation", "3g_mobiledata", "3k", "3k_plus", "3mp", "3p", "4g_mobiledata", "4g_plus_mobiledata", "4k", "4k_plus", "4mp", "5g", "5k", "5k_plus", "5mp", "60fps", "60fps_select", "6_ft_apart", "6k", "6k_plus", "6mp", "7k", "7k_plus", "7mp", "8k", "8k_plus", "8mp", "9k", "9k_plus", "9mp", "abc", "ac_unit", "access_alarm", "access_alarms", "access_time", "access_time_filled", "accessibility", "accessibility_new", "accessible", "accessible_forward", "account_balance", "account_balance_wallet", "account_box", "account_circle", "account_tree", "ad_units", "adb", "add", "add_a_photo", "add_alarm", "add_alert", "add_box", "add_business", "add_card", "add_chart", "add_circle", "add_circle_outline", "add_comment", "add_home", "add_home_work", "add_ic_call", "add_link", "add_location", "add_location_alt", "add_moderator", "add_photo_alternate", "add_reaction", "add_road", "add_shopping_cart", "add_task", "add_to_drive", "add_to_home_screen", "add_to_photos", "add_to_queue", "addchart", "adf_scanner", "adjust", "admin_panel_settings", "adobe", "ads_click", "agriculture", "air", "airline_seat_flat", "airline_seat_flat_angled", "airline_seat_individual_suite", "airline_seat_legroom_extra", "airline_seat_legroom_normal", "airline_seat_legroom_reduced", "airline_seat_recline_extra", "airline_seat_recline_normal", "airline_stops", "airlines", "airplane_ticket", "airplanemode_active", "airplanemode_inactive", "airplanemode_off", "airplanemode_on", "airplay", "airport_shuttle", "alarm", "alarm_add", "alarm_off", "alarm_on", "album", "align_horizontal_center", "align_horizontal_left", "align_horizontal_right", "align_vertical_bottom", "align_vertical_center", "align_vertical_top", "all_inbox", "all_inclusive", "all_out", "alt_route", "alternate_email", "amp_stories", "analytics", "anchor", "android", "animation", "announcement", "aod", "apartment", "api", "app_blocking", "app_registration", "app_settings_alt", "app_shortcut", "apple", "approval", "apps", "apps_outage", "architecture", "archive", "area_chart", "arrow_back", "arrow_back_ios", "arrow_back_ios_new", "arrow_circle_down", "arrow_circle_left", "arrow_circle_right", "arrow_circle_up", "arrow_downward", "arrow_drop_down", "arrow_drop_down_circle", "arrow_drop_up", "arrow_forward", "arrow_forward_ios", "arrow_left", "arrow_outward", "arrow_right", "arrow_right_alt", "arrow_upward", "art_track", "article", "aspect_ratio", "assessment", "assignment", "assignment_ind", "assignment_late", "assignment_return", "assignment_returned", "assignment_turned_in", "assist_walker", "assistant", "assistant_direction", "assistant_photo", "assured_workload", "atm", "attach_email", "attach_file", "attach_money", "attachment", "attractions", "attribution", "audio_file", "audiotrack", "auto_awesome", "auto_awesome_mosaic", "auto_awesome_motion", "auto_delete", "auto_fix_high", "auto_fix_normal", "auto_fix_off", "auto_graph", "auto_mode", "auto_stories", "autofps_select", "autorenew", "av_timer", "baby_changing_station", "back_hand", "backpack", "backspace", "backup", "backup_table", "badge", "bakery_dining", "balance", "balcony", "ballot", "bar_chart", "batch_prediction", "bathroom", "bathtub", "battery_0_bar", "battery_1_bar", "battery_2_bar", "battery_3_bar", "battery_4_bar", "battery_5_bar", "battery_6_bar", "battery_alert", "battery_charging_full", "battery_full", "battery_saver", "battery_std", "battery_unknown", "beach_access", "bed", "bedroom_baby", "bedroom_child", "bedroom_parent", "bedtime", "bedtime_off", "beenhere", "bento", "bike_scooter", "biotech", "blender", "blind", "blinds", "blinds_closed", "block", "bloodtype", "bluetooth", "bluetooth_audio", "bluetooth_connected", "bluetooth_disabled", "bluetooth_drive", "bluetooth_searching", "blur_circular", "blur_linear", "blur_off", "blur_on", "bolt", "book", "book_online", "bookmark", "bookmark_add", "bookmark_added", "bookmark_border", "bookmark_outline", "bookmark_remove", "bookmarks", "border_all", "border_bottom", "border_clear", "border_color", "border_horizontal", "border_inner", "border_left", "border_outer", "border_right", "border_style", "border_top", "border_vertical", "boy", "branding_watermark", "breakfast_dining", "brightness_1", "brightness_2", "brightness_3", "brightness_4", "brightness_5", "brightness_6", "brightness_7", "brightness_auto", "brightness_high", "brightness_low", "brightness_medium", "broadcast_on_home", "broadcast_on_personal", "broken_image", "browse_gallery", "browser_not_supported", "browser_updated", "brunch_dining", "brush", "bubble_chart", "bug_report", "build", "build_circle", "bungalow", "burst_mode", "bus_alert", "business", "business_center", "cabin", "cable", "cached", "cake", "calculate", "calendar_month", "calendar_today", "calendar_view_day", "calendar_view_month", "calendar_view_week", "call", "call_end", "call_made", "call_merge", "call_missed", "call_missed_outgoing", "call_received", "call_split", "call_to_action", "camera", "camera_alt", "camera_enhance", "camera_front", "camera_indoor", "camera_outdoor", "camera_rear", "camera_roll", "cameraswitch", "campaign", "cancel", "cancel_presentation", "cancel_schedule_send", "candlestick_chart", "car_crash", "car_rental", "car_repair", "card_giftcard", "card_membership", "card_travel", "carpenter", "cases", "casino", "cast", "cast_connected", "cast_for_education", "castle", "catching_pokemon", "category", "celebration", "cell_tower", "cell_wifi", "center_focus_strong", "center_focus_weak", "chair", "chair_alt", "chalet", "change_circle", "change_history", "charging_station", "chat", "chat_bubble", "chat_bubble_outline", "check", "check_box", "check_box_outline_blank", "check_circle", "check_circle_outline", "checklist", "checklist_rtl", "checkroom", "chevron_left", "chevron_right", "child_care", "child_friendly", "chrome_reader_mode", "church", "circle", "circle_notifications", "class", "clean_hands", "cleaning_services", "clear", "clear_all", "close", "close_fullscreen", "closed_caption", "closed_caption_disabled", "closed_caption_off", "cloud", "cloud_circle", "cloud_done", "cloud_download", "cloud_off", "cloud_queue", "cloud_sync", "cloud_upload", "co2", "co_present", "code", "code_off", "coffee", "coffee_maker", "collections", "collections_bookmark", "color_lens", "colorize", "comment", "comment_bank", "comments_disabled", "commit", "commute", "compare", "compare_arrows", "compass_calibration", "compost", "compress", "computer", "confirmation_num", "confirmation_number", "connect_without_contact", "connected_tv", "connecting_airports", "construction", "contact_emergency", "contact_mail", "contact_page", "contact_phone", "contact_support", "contactless", "contacts", "content_copy", "content_cut", "content_paste", "content_paste_go", "content_paste_off", "content_paste_search", "contrast", "control_camera", "control_point", "control_point_duplicate", "cookie", "copy", "copy_all", "copyright", "coronavirus", "corporate_fare", "cottage", "countertops", "create", "create_new_folder", "credit_card", "credit_card_off", "credit_score", "crib", "crisis_alert", "crop", "crop_16_9", "crop_3_2", "crop_5_4", "crop_7_5", "crop_din", "crop_free", "crop_landscape", "crop_original", "crop_portrait", "crop_rotate", "crop_square", "cruelty_free", "css", "currency_bitcoin", "currency_exchange", "currency_franc", "currency_lira", "currency_pound", "currency_ruble", "currency_rupee", "currency_yen", "currency_yuan", "curtains", "curtains_closed", "cut", "cyclone", "dangerous", "dark_mode", "dashboard", "dashboard_customize", "data_array", "data_exploration", "data_object", "data_saver_off", "data_saver_on", "data_thresholding", "data_usage", "dataset", "dataset_linked", "date_range", "deblur", "deck", "dehaze", "delete", "delete_forever", "delete_outline", "delete_sweep", "delivery_dining", "density_large", "density_medium", "density_small", "departure_board", "description", "deselect", "design_services", "desk", "desktop_access_disabled", "desktop_mac", "desktop_windows", "details", "developer_board", "developer_board_off", "developer_mode", "device_hub", "device_thermostat", "device_unknown", "devices", "devices_fold", "devices_other", "dialer_sip", "dialpad", "diamond", "difference", "dining", "dinner_dining", "directions", "directions_bike", "directions_boat", "directions_boat_filled", "directions_bus", "directions_bus_filled", "directions_car", "directions_car_filled", "directions_ferry", "directions_off", "directions_railway", "directions_railway_filled", "directions_run", "directions_subway", "directions_subway_filled", "directions_train", "directions_transit", "directions_transit_filled", "directions_walk", "dirty_lens", "disabled_by_default", "disabled_visible", "disc_full", "discord", "discount", "display_settings", "diversity_1", "diversity_2", "diversity_3", "dnd_forwardslash", "dns", "do_disturb", "do_disturb_alt", "do_disturb_off", "do_disturb_on", "do_not_disturb", "do_not_disturb_alt", "do_not_disturb_off", "do_not_disturb_on", "do_not_disturb_on_total_silence", "do_not_step", "do_not_touch", "dock", "document_scanner", "domain", "domain_add", "domain_disabled", "domain_verification", "done", "done_all", "done_outline", "donut_large", "donut_small", "door_back", "door_front", "door_sliding", "doorbell", "double_arrow", "downhill_skiing", "download", "download_done", "download_for_offline", "downloading", "drafts", "drag_handle", "drag_indicator", "draw", "drive_eta", "drive_file_move", "drive_file_move_rtl", "drive_file_rename_outline", "drive_folder_upload", "dry", "dry_cleaning", "duo", "dvr", "dynamic_feed", "dynamic_form", "e_mobiledata", "earbuds", "earbuds_battery", "east", "eco", "edgesensor_high", "edgesensor_low", "edit", "edit_attributes", "edit_calendar", "edit_location", "edit_location_alt", "edit_note", "edit_notifications", "edit_off", "edit_road", "egg", "egg_alt", "eject", "elderly", "elderly_woman", "electric_bike", "electric_bolt", "electric_car", "electric_meter", "electric_moped", "electric_rickshaw", "electric_scooter", "electrical_services", "elevator", "email", "emergency", "emergency_recording", "emergency_share", "emoji_emotions", "emoji_events", "emoji_flags", "emoji_food_beverage", "emoji_nature", "emoji_objects", "emoji_people", "emoji_symbols", "emoji_transportation", "energy_savings_leaf", "engineering", "enhance_photo_translate", "enhanced_encryption", "equalizer", "error", "error_outline", "escalator", "escalator_warning", "euro", "euro_symbol", "ev_station", "event", "event_available", "event_busy", "event_note", "event_repeat", "event_seat", "exit_to_app", "expand", "expand_circle_down", "expand_less", "expand_more", "explicit", "explore", "explore_off", "exposure", "exposure_minus_1", "exposure_minus_2", "exposure_neg_1", "exposure_neg_2", "exposure_plus_1", "exposure_plus_2", "exposure_zero", "extension", "extension_off", "face", "face_2", "face_3", "face_4", "face_5", "face_6", "face_retouching_natural", "face_retouching_off", "face_unlock", "facebook", "fact_check", "factory", "family_restroom", "fast_forward", "fast_rewind", "fastfood", "favorite", "favorite_border", "favorite_outline", "fax", "featured_play_list", "featured_video", "feed", "feedback", "female", "fence", "festival", "fiber_dvr", "fiber_manual_record", "fiber_new", "fiber_pin", "fiber_smart_record", "file_copy", "file_download", "file_download_done", "file_download_off", "file_open", "file_present", "file_upload", "filter", "filter_1", "filter_2", "filter_3", "filter_4", "filter_5", "filter_6", "filter_7", "filter_8", "filter_9", "filter_9_plus", "filter_alt", "filter_alt_off", "filter_b_and_w", "filter_center_focus", "filter_drama", "filter_frames", "filter_hdr", "filter_list", "filter_list_off", "filter_none", "filter_tilt_shift", "filter_vintage", "find_in_page", "find_replace", "fingerprint", "fire_extinguisher", "fire_hydrant_alt", "fire_truck", "fireplace", "first_page", "fit_screen", "fitbit", "fitness_center", "flag", "flag_circle", "flaky", "flare", "flash_auto", "flash_off", "flash_on", "flashlight_off", "flashlight_on", "flatware", "flight", "flight_class", "flight_land", "flight_takeoff", "flip", "flip_camera_android", "flip_camera_ios", "flip_to_back", "flip_to_front", "flood", "flourescent", "fluorescent", "flutter_dash", "fmd_bad", "fmd_good", "folder", "folder_copy", "folder_delete", "folder_off", "folder_open", "folder_shared", "folder_special", "folder_zip", "follow_the_signs", "font_download", "font_download_off", "food_bank", "forest", "fork_left", "fork_right", "format_align_center", "format_align_justify", "format_align_left", "format_align_right", "format_bold", "format_clear", "format_color_fill", "format_color_reset", "format_color_text", "format_indent_decrease", "format_indent_increase", "format_italic", "format_line_spacing", "format_list_bulleted", "format_list_numbered", "format_list_numbered_rtl", "format_overline", "format_paint", "format_quote", "format_shapes", "format_size", "format_strikethrough", "format_textdirection_l_to_r", "format_textdirection_r_to_l", "format_underline", "format_underlined", "fort", "forum", "forward", "forward_10", "forward_30", "forward_5", "forward_to_inbox", "foundation", "free_breakfast", "free_cancellation", "front_hand", "fullscreen", "fullscreen_exit", "functions", "g_mobiledata", "g_translate", "gamepad", "games", "garage", "gas_meter", "gavel", "generating_tokens", "gesture", "get_app", "gif", "gif_box", "girl", "gite", "golf_course", "gpp_bad", "gpp_good", "gpp_maybe", "gps_fixed", "gps_not_fixed", "gps_off", "grade", "gradient", "grading", "grain", "graphic_eq", "grass", "grid_3x3", "grid_4x4", "grid_goldenratio", "grid_off", "grid_on", "grid_view", "group", "group_add", "group_off", "group_remove", "group_work", "groups", "groups_2", "groups_3", "h_mobiledata", "h_plus_mobiledata", "hail", "handshake", "handyman", "hardware", "hd", "hdr_auto", "hdr_auto_select", "hdr_enhanced_select", "hdr_off", "hdr_off_select", "hdr_on", "hdr_on_select", "hdr_plus", "hdr_strong", "hdr_weak", "headphones", "headphones_battery", "headset", "headset_mic", "headset_off", "healing", "health_and_safety", "hearing", "hearing_disabled", "heart_broken", "heat_pump", "height", "help", "help_center", "help_outline", "hevc", "hexagon", "hide_image", "hide_source", "high_quality", "highlight", "highlight_alt", "highlight_off", "highlight_remove", "hiking", "history", "history_edu", "history_toggle_off", "hive", "hls", "hls_off", "holiday_village", "home", "home_max", "home_mini", "home_repair_service", "home_work", "horizontal_distribute", "horizontal_rule", "horizontal_split", "hot_tub", "hotel", "hotel_class", "hourglass_bottom", "hourglass_disabled", "hourglass_empty", "hourglass_full", "hourglass_top", "house", "house_siding", "houseboat", "how_to_reg", "how_to_vote", "html", "http", "https", "hub", "hvac", "ice_skating", "icecream", "image", "image_aspect_ratio", "image_not_supported", "image_search", "imagesearch_roller", "import_contacts", "import_export", "important_devices", "inbox", "incomplete_circle", "indeterminate_check_box", "info", "info_outline", "input", "insert_chart", "insert_chart_outlined", "insert_comment", "insert_drive_file", "insert_emoticon", "insert_invitation", "insert_link", "insert_page_break", "insert_photo", "insights", "install_desktop", "install_mobile", "integration_instructions", "interests", "interpreter_mode", "inventory", "inventory_2", "invert_colors", "invert_colors_off", "invert_colors_on", "ios_share", "iron", "iso", "javascript", "join_full", "join_inner", "join_left", "join_right", "kayaking", "kebab_dining", "key", "key_off", "keyboard", "keyboard_alt", "keyboard_arrow_down", "keyboard_arrow_left", "keyboard_arrow_right", "keyboard_arrow_up", "keyboard_backspace", "keyboard_capslock", "keyboard_command_key", "keyboard_control", "keyboard_control_key", "keyboard_double_arrow_down", "keyboard_double_arrow_left", "keyboard_double_arrow_right", "keyboard_double_arrow_up", "keyboard_hide", "keyboard_option_key", "keyboard_return", "keyboard_tab", "keyboard_voice", "king_bed", "kitchen", "kitesurfing", "label", "label_important", "label_important_outline", "label_off", "label_outline", "lan", "landscape", "landslide", "language", "laptop", "laptop_chromebook", "laptop_mac", "laptop_windows", "last_page", "launch", "layers", "layers_clear", "leaderboard", "leak_add", "leak_remove", "leave_bags_at_home", "legend_toggle", "lens", "lens_blur", "library_add", "library_add_check", "library_books", "library_music", "light", "light_mode", "lightbulb", "lightbulb_circle", "lightbulb_outline", "line_axis", "line_style", "line_weight", "linear_scale", "link", "link_off", "linked_camera", "liquor", "list", "list_alt", "live_help", "live_tv", "living", "local_activity", "local_airport", "local_atm", "local_attraction", "local_bar", "local_cafe", "local_car_wash", "local_convenience_store", "local_dining", "local_drink", "local_fire_department", "local_florist", "local_gas_station", "local_grocery_store", "local_hospital", "local_hotel", "local_laundry_service", "local_library", "local_mall", "local_movies", "local_offer", "local_parking", "local_pharmacy", "local_phone", "local_pizza", "local_play", "local_police", "local_post_office", "local_print_shop", "local_printshop", "local_restaurant", "local_see", "local_shipping", "local_taxi", "location_city", "location_disabled", "location_history", "location_off", "location_on", "location_searching", "lock", "lock_clock", "lock_open", "lock_outline", "lock_person", "lock_reset", "login", "logo_dev", "logout", "looks", "looks_3", "looks_4", "looks_5", "looks_6", "looks_one", "looks_two", "loop", "loupe", "low_priority", "loyalty", "lte_mobiledata", "lte_plus_mobiledata", "luggage", "lunch_dining", "lyrics", "macro_off", "mail", "mail_lock", "mail_outline", "male", "man", "man_2", "man_3", "man_4", "manage_accounts", "manage_history", "manage_search", "map", "maps_home_work", "maps_ugc", "margin", "mark_as_unread", "mark_chat_read", "mark_chat_unread", "mark_email_read", "mark_email_unread", "mark_unread_chat_alt", "markunread", "markunread_mailbox", "masks", "maximize", "media_bluetooth_off", "media_bluetooth_on", "mediation", "medical_information", "medical_services", "medication", "medication_liquid", "meeting_room", "memory", "menu", "menu_book", "menu_open", "merge", "merge_type", "message", "messenger", "messenger_outline", "mic", "mic_external_off", "mic_external_on", "mic_none", "mic_off", "microwave", "military_tech", "minimize", "minor_crash", "miscellaneous_services", "missed_video_call", "mms", "mobile_friendly", "mobile_off", "mobile_screen_share", "mobiledata_off", "mode", "mode_comment", "mode_edit", "mode_edit_outline", "mode_fan_off", "mode_night", "mode_of_travel", "mode_standby", "model_training", "monetization_on", "money", "money_off", "money_off_csred", "monitor", "monitor_heart", "monitor_weight", "monochrome_photos", "mood", "mood_bad", "moped", "more", "more_horiz", "more_time", "more_vert", "mosque", "motion_photos_auto", "motion_photos_off", "motion_photos_on", "motion_photos_pause", "motion_photos_paused", "motorcycle", "mouse", "move_down", "move_to_inbox", "move_up", "movie", "movie_creation", "movie_filter", "moving", "mp", "multiline_chart", "multiple_stop", "multitrack_audio", "museum", "music_note", "music_off", "music_video", "my_library_add", "my_library_books", "my_library_music", "my_location", "nat", "nature", "nature_people", "navigate_before", "navigate_next", "navigation", "near_me", "near_me_disabled", "nearby_error", "nearby_off", "nest_cam_wired_stand", "network_cell", "network_check", "network_locked", "network_ping", "network_wifi", "network_wifi_1_bar", "network_wifi_2_bar", "network_wifi_3_bar", "new_label", "new_releases", "newspaper", "next_plan", "next_week", "nfc", "night_shelter", "nightlife", "nightlight", "nightlight_round", "nights_stay", "no_accounts", "no_adult_content", "no_backpack", "no_cell", "no_crash", "no_drinks", "no_encryption", "no_encryption_gmailerrorred", "no_flash", "no_food", "no_luggage", "no_meals", "no_meeting_room", "no_photography", "no_sim", "no_stroller", "no_transfer", "noise_aware", "noise_control_off", "nordic_walking", "north", "north_east", "north_west", "not_accessible", "not_interested", "not_listed_location", "not_started", "note", "note_add", "note_alt", "notes", "notification_add", "notification_important", "notifications", "notifications_active", "notifications_none", "notifications_off", "notifications_on", "notifications_paused", "now_wallpaper", "now_widgets", "numbers", "offline_bolt", "offline_pin", "offline_share", "oil_barrel", "on_device_training", "ondemand_video", "online_prediction", "opacity", "open_in_browser", "open_in_full", "open_in_new", "open_in_new_off", "open_with", "other_houses", "outbond", "outbound", "outbox", "outdoor_grill", "outlet", "outlined_flag", "output", "padding", "pages", "pageview", "paid", "palette", "pan_tool", "pan_tool_alt", "panorama", "panorama_fish_eye", "panorama_fisheye", "panorama_horizontal", "panorama_horizontal_select", "panorama_photosphere", "panorama_photosphere_select", "panorama_vertical", "panorama_vertical_select", "panorama_wide_angle", "panorama_wide_angle_select", "paragliding", "park", "party_mode", "password", "paste", "pattern", "pause", "pause_circle", "pause_circle_filled", "pause_circle_outline", "pause_presentation", "payment", "payments", "paypal", "pedal_bike", "pending", "pending_actions", "pentagon", "people", "people_alt", "people_outline", "percent", "perm_camera_mic", "perm_contact_cal", "perm_contact_calendar", "perm_data_setting", "perm_device_info", "perm_device_information", "perm_identity", "perm_media", "perm_phone_msg", "perm_scan_wifi", "person", "person_2", "person_3", "person_4", "person_add", "person_add_alt", "person_add_alt_1", "person_add_disabled", "person_off", "person_outline", "person_pin", "person_pin_circle", "person_remove", "person_remove_alt_1", "person_search", "personal_injury", "personal_video", "pest_control", "pest_control_rodent", "pets", "phishing", "phone", "phone_android", "phone_bluetooth_speaker", "phone_callback", "phone_disabled", "phone_enabled", "phone_forwarded", "phone_in_talk", "phone_iphone", "phone_locked", "phone_missed", "phone_paused", "phonelink", "phonelink_erase", "phonelink_lock", "phonelink_off", "phonelink_ring", "phonelink_setup", "photo", "photo_album", "photo_camera", "photo_camera_back", "photo_camera_front", "photo_filter", "photo_library", "photo_size_select_actual", "photo_size_select_large", "photo_size_select_small", "php", "piano", "piano_off", "picture_as_pdf", "picture_in_picture", "picture_in_picture_alt", "pie_chart", "pie_chart_outline", "pin", "pin_drop", "pin_end", "pin_invoke", "pinch", "pivot_table_chart", "pix", "place", "plagiarism", "play_arrow", "play_circle", "play_circle_fill", "play_circle_filled", "play_circle_outline", "play_disabled", "play_for_work", "play_lesson", "playlist_add", "playlist_add_check", "playlist_add_check_circle", "playlist_add_circle", "playlist_play", "playlist_remove", "plumbing", "plus_one", "podcasts", "point_of_sale", "policy", "poll", "polyline", "polymer", "pool", "portable_wifi_off", "portrait", "post_add", "power", "power_input", "power_off", "power_settings_new", "precision_manufacturing", "pregnant_woman", "present_to_all", "preview", "price_change", "price_check", "print", "print_disabled", "priority_high", "privacy_tip", "private_connectivity", "production_quantity_limits", "propane", "propane_tank", "psychology", "psychology_alt", "public", "public_off", "publish", "published_with_changes", "punch_clock", "push_pin", "qr_code", "qr_code_2", "qr_code_scanner", "query_builder", "query_stats", "question_answer", "question_mark", "queue", "queue_music", "queue_play_next", "quick_contacts_dialer", "quick_contacts_mail", "quickreply", "quiz", "quora", "r_mobiledata", "radar", "radio", "radio_button_checked", "radio_button_off", "radio_button_on", "radio_button_unchecked", "railway_alert", "ramen_dining", "ramp_left", "ramp_right", "rate_review", "raw_off", "raw_on", "read_more", "real_estate_agent", "receipt", "receipt_long", "recent_actors", "recommend", "record_voice_over", "rectangle", "recycling", "reddit", "redeem", "redo", "reduce_capacity", "refresh", "remember_me", "remove", "remove_circle", "remove_circle_outline", "remove_done", "remove_from_queue", "remove_moderator", "remove_red_eye", "remove_road", "remove_shopping_cart", "reorder", "repartition", "repeat", "repeat_on", "repeat_one", "repeat_one_on", "replay", "replay_10", "replay_30", "replay_5", "replay_circle_filled", "reply", "reply_all", "report", "report_gmailerrorred", "report_off", "report_problem", "request_page", "request_quote", "reset_tv", "restart_alt", "restaurant", "restaurant_menu", "restore", "restore_from_trash", "restore_page", "reviews", "rice_bowl", "ring_volume", "rocket", "rocket_launch", "roller_shades", "roller_shades_closed", "roller_skating", "roofing", "room", "room_preferences", "room_service", "rotate_90_degrees_ccw", "rotate_90_degrees_cw", "rotate_left", "rotate_right", "roundabout_left", "roundabout_right", "rounded_corner", "route", "router", "rowing", "rss_feed", "rsvp", "rtt", "rule", "rule_folder", "run_circle", "running_with_errors", "rv_hookup", "safety_check", "safety_divider", "sailing", "sanitizer", "satellite", "satellite_alt", "save", "save_alt", "save_as", "saved_search", "savings", "scale", "scanner", "scatter_plot", "schedule", "schedule_send", "schema", "school", "science", "score", "scoreboard", "screen_lock_landscape", "screen_lock_portrait", "screen_lock_rotation", "screen_rotation", "screen_rotation_alt", "screen_search_desktop", "screen_share", "screenshot", "screenshot_monitor", "scuba_diving", "sd", "sd_card", "sd_card_alert", "sd_storage", "search", "search_off", "security", "security_update", "security_update_good", "security_update_warning", "segment", "select_all", "self_improvement", "sell", "send", "send_and_archive", "send_time_extension", "send_to_mobile", "sensor_door", "sensor_occupied", "sensor_window", "sensors", "sensors_off", "sentiment_dissatisfied", "sentiment_neutral", "sentiment_satisfied", "sentiment_satisfied_alt", "sentiment_very_dissatisfied", "sentiment_very_satisfied", "set_meal", "settings", "settings_accessibility", "settings_applications", "settings_backup_restore", "settings_bluetooth", "settings_brightness", "settings_cell", "settings_display", "settings_ethernet", "settings_input_antenna", "settings_input_component", "settings_input_composite", "settings_input_hdmi", "settings_input_svideo", "settings_overscan", "settings_phone", "settings_power", "settings_remote", "settings_suggest", "settings_system_daydream", "settings_voice", "severe_cold", "shape_line", "share", "share_arrival_time", "share_location", "shield", "shield_moon", "shop", "shop_2", "shop_two", "shopify", "shopping_bag", "shopping_basket", "shopping_cart", "shopping_cart_checkout", "short_text", "shortcut", "show_chart", "shower", "shuffle", "shuffle_on", "shutter_speed", "sick", "sign_language", "signal_cellular_0_bar", "signal_cellular_4_bar", "signal_cellular_alt", "signal_cellular_alt_1_bar", "signal_cellular_alt_2_bar", "signal_cellular_connected_no_internet_0_bar", "signal_cellular_connected_no_internet_4_bar", "signal_cellular_no_sim", "signal_cellular_nodata", "signal_cellular_null", "signal_cellular_off", "signal_wifi_0_bar", "signal_wifi_4_bar", "signal_wifi_4_bar_lock", "signal_wifi_bad", "signal_wifi_connected_no_internet_4", "signal_wifi_off", "signal_wifi_statusbar_4_bar", "signal_wifi_statusbar_connected_no_internet_4", "signal_wifi_statusbar_null", "signpost", "sim_card", "sim_card_alert", "sim_card_download", "single_bed", "sip", "skateboarding", "skip_next", "skip_previous", "sledding", "slideshow", "slow_motion_video", "smart_button", "smart_display", "smart_screen", "smart_toy", "smartphone", "smoke_free", "smoking_rooms", "sms", "sms_failed", "snapchat", "snippet_folder", "snooze", "snowboarding", "snowmobile", "snowshoeing", "soap", "social_distance", "solar_power", "sort", "sort_by_alpha", "sos", "soup_kitchen", "source", "south", "south_america", "south_east", "south_west", "spa", "space_bar", "space_dashboard", "spatial_audio", "spatial_audio_off", "spatial_tracking", "speaker", "speaker_group", "speaker_notes", "speaker_notes_off", "speaker_phone", "speed", "spellcheck", "splitscreen", "spoke", "sports", "sports_bar", "sports_baseball", "sports_basketball", "sports_cricket", "sports_esports", "sports_football", "sports_golf", "sports_gymnastics", "sports_handball", "sports_hockey", "sports_kabaddi", "sports_martial_arts", "sports_mma", "sports_motorsports", "sports_rugby", "sports_score", "sports_soccer", "sports_tennis", "sports_volleyball", "square", "square_foot", "ssid_chart", "stacked_bar_chart", "stacked_line_chart", "stadium", "stairs", "star", "star_border", "star_border_purple500", "star_half", "star_outline", "star_purple500", "star_rate", "stars", "start", "stay_current_landscape", "stay_current_portrait", "stay_primary_landscape", "stay_primary_portrait", "sticky_note_2", "stop", "stop_circle", "stop_screen_share", "storage", "store", "store_mall_directory", "storefront", "storm", "straight", "straighten", "stream", "streetview", "strikethrough_s", "stroller", "style", "subdirectory_arrow_left", "subdirectory_arrow_right", "subject", "subscript", "subscriptions", "subtitles", "subtitles_off", "subway", "summarize", "superscript", "supervised_user_circle", "supervisor_account", "support", "support_agent", "surfing", "surround_sound", "swap_calls", "swap_horiz", "swap_horizontal_circle", "swap_vert", "swap_vert_circle", "swap_vertical_circle", "swipe", "swipe_down", "swipe_down_alt", "swipe_left", "swipe_left_alt", "swipe_right", "swipe_right_alt", "swipe_up", "swipe_up_alt", "swipe_vertical", "switch_access_shortcut", "switch_access_shortcut_add", "switch_account", "switch_camera", "switch_left", "switch_right", "switch_video", "synagogue", "sync", "sync_alt", "sync_disabled", "sync_lock", "sync_problem", "system_security_update", "system_security_update_good", "system_security_update_warning", "system_update", "system_update_alt", "system_update_tv", "tab", "tab_unselected", "table_bar", "table_chart", "table_restaurant", "table_rows", "table_view", "tablet", "tablet_android", "tablet_mac", "tag", "tag_faces", "takeout_dining", "tap_and_play", "tapas", "task", "task_alt", "taxi_alert", "telegram", "temple_buddhist", "temple_hindu", "terminal", "terrain", "text_decrease", "text_fields", "text_format", "text_increase", "text_rotate_up", "text_rotate_vertical", "text_rotation_angledown", "text_rotation_angleup", "text_rotation_down", "text_rotation_none", "text_snippet", "textsms", "texture", "theater_comedy", "theaters", "thermostat", "thermostat_auto", "thumb_down", "thumb_down_alt", "thumb_down_off_alt", "thumb_up", "thumb_up_alt", "thumb_up_off_alt", "thumbs_up_down", "thunderstorm", "tiktok", "time_to_leave", "timelapse", "timeline", "timer", "timer_10", "timer_10_select", "timer_3", "timer_3_select", "timer_off", "tips_and_updates", "tire_repair", "title", "toc", "today", "toggle_off", "toggle_on", "token", "toll", "tonality", "topic", "tornado", "touch_app", "tour", "toys", "track_changes", "traffic", "train", "tram", "transcribe", "transfer_within_a_station", "transform", "transgender", "transit_enterexit", "translate", "travel_explore", "trending_down", "trending_flat", "trending_neutral", "trending_up", "trip_origin", "troubleshoot", "try", "tsunami", "tty", "tune", "tungsten", "turn_left", "turn_right", "turn_sharp_left", "turn_sharp_right", "turn_slight_left", "turn_slight_right", "turned_in", "turned_in_not", "tv", "tv_off", "two_wheeler", "type_specimen", "u_turn_left", "u_turn_right", "umbrella", "unarchive", "undo", "unfold_less", "unfold_less_double", "unfold_more", "unfold_more_double", "unpublished", "unsubscribe", "upcoming", "update", "update_disabled", "upgrade", "upload", "upload_file", "usb", "usb_off", "vaccines", "vape_free", "vaping_rooms", "verified", "verified_user", "vertical_align_bottom", "vertical_align_center", "vertical_align_top", "vertical_distribute", "vertical_shades", "vertical_shades_closed", "vertical_split", "vibration", "video_call", "video_camera_back", "video_camera_front", "video_chat", "video_collection", "video_file", "video_label", "video_library", "video_settings", "video_stable", "videocam", "videocam_off", "videogame_asset", "videogame_asset_off", "view_agenda", "view_array", "view_carousel", "view_column", "view_comfortable", "view_comfy", "view_comfy_alt", "view_compact", "view_compact_alt", "view_cozy", "view_day", "view_headline", "view_in_ar", "view_kanban", "view_list", "view_module", "view_quilt", "view_sidebar", "view_stream", "view_timeline", "view_week", "vignette", "villa", "visibility", "visibility_off", "voice_chat", "voice_over_off", "voicemail", "volcano", "volume_down", "volume_mute", "volume_off", "volume_up", "volunteer_activism", "vpn_key", "vpn_key_off", "vpn_lock", "vrpano", "wallet", "wallet_giftcard", "wallet_membership", "wallet_travel", "wallpaper", "warehouse", "warning", "warning_amber", "wash", "watch", "watch_later", "watch_off", "water", "water_damage", "water_drop", "waterfall_chart", "waves", "waving_hand", "wb_auto", "wb_cloudy", "wb_incandescent", "wb_iridescent", "wb_shade", "wb_sunny", "wb_twilight", "wc", "web", "web_asset", "web_asset_off", "web_stories", "webhook", "wechat", "weekend", "west", "whatshot", "wheelchair_pickup", "where_to_vote", "widgets", "width_full", "width_normal", "width_wide", "wifi", "wifi_1_bar", "wifi_2_bar", "wifi_calling", "wifi_calling_3", "wifi_channel", "wifi_find", "wifi_lock", "wifi_off", "wifi_password", "wifi_protected_setup", "wifi_tethering", "wifi_tethering_error", "wifi_tethering_error_rounded", "wifi_tethering_off", "wind_power", "window", "wine_bar", "woman", "woman_2", "woo_commerce", "wordpress", "work", "work_history", "work_off", "work_outline", "workspace_premium", "workspaces", "wrap_text", "wrong_location", "wysiwyg", "yard", "youtube_searched_for", "zoom_in", "zoom_in_map", "zoom_out", "zoom_out_map", ""];
var coolIconKeys = ["table_rows", "video_label", "airlines", "bento", "border_all", "border_clear", "ac_unit", "adjust", "align_horizontal_center", "album", "all_inclusive", "all_out", "animation", "assistant", "audiotrack", "account_balance_wallet", "auto_awesome_mosaic", "bolt", "brightness_1", "breakfast_dining", "broken_image", "brightness_5", "cable", "calendar_view_month", "casino", "category", "cloud", "color_lens", "credit_card", "earbuds", "egg_alt", "fiber_smart_record", "flag", "healing", "heat_pump", "hive", "hub", "local_library", "local_pizza", "memory", "outlet", "pages", "panorama_photosphere", "signal_cellular_0_bar", "sports_baseball", "storm", "stairs", "keyboard_command_key"];
var colorClassesMapping = {
  inherit: "",
  primary: "text-primary",
  success: "text-green-500",
  warning: "text-yellow-500",
  secondary: "text-secondary",
  disabled: "text-text-disabled dark:text-text-disabled-dark",
  error: "text-red-500"
};
var Icon2 = React54.forwardRef((t0, ref) => {
  const $ = (0, import_react_compiler_runtime.c)(12);
  const {
    iconKey,
    size: t1,
    color,
    className,
    onClick,
    style
  } = t0;
  const size4 = t1 === void 0 ? "medium" : t1;
  let sizeInPx;
  bb0: switch (size4) {
    case "smallest": {
      sizeInPx = 16;
      break bb0;
    }
    case "small": {
      sizeInPx = 20;
      break bb0;
    }
    case "medium": {
      sizeInPx = 24;
      break bb0;
    }
    case "large": {
      sizeInPx = 28;
      break bb0;
    }
    default: {
      sizeInPx = typeof size4 === "number" ? size4 : 24;
    }
  }
  const t2 = `${sizeInPx}px`;
  let t3;
  if ($[0] !== style || $[1] !== t2) {
    t3 = {
      fontSize: t2,
      ...style
    };
    $[0] = style;
    $[1] = t2;
    $[2] = t3;
  } else {
    t3 = $[2];
  }
  const t4 = color ? colorClassesMapping[color] : "";
  let t5;
  if ($[3] !== className || $[4] !== t4) {
    t5 = cls("material-icons", "block", t4, "select-none", className);
    $[3] = className;
    $[4] = t4;
    $[5] = t5;
  } else {
    t5 = $[5];
  }
  let t6;
  if ($[6] !== iconKey || $[7] !== onClick || $[8] !== ref || $[9] !== t3 || $[10] !== t5) {
    t6 = (0, import_jsx_runtime29.jsx)("span", { ref, style: t3, className: t5, onClick, children: iconKey });
    $[6] = iconKey;
    $[7] = onClick;
    $[8] = ref;
    $[9] = t3;
    $[10] = t5;
    $[11] = t6;
  } else {
    t6 = $[11];
  }
  return t6;
});
Icon2.displayName = "Icon";
function GitHubIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(5);
  const t0 = props.size ?? 24;
  const t1 = props.size ?? 24;
  let t2;
  if ($[0] === Symbol.for("react.memo_cache_sentinel")) {
    t2 = (0, import_jsx_runtime29.jsx)("path", { d: "M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z" });
    $[0] = t2;
  } else {
    t2 = $[0];
  }
  let t3;
  if ($[1] !== props.className || $[2] !== t0 || $[3] !== t1) {
    t3 = (0, import_jsx_runtime29.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", className: props.className, fill: "currentColor", width: t0, height: t1, viewBox: "0 0 24 24", children: t2 });
    $[1] = props.className;
    $[2] = t0;
    $[3] = t1;
    $[4] = t3;
  } else {
    t3 = $[4];
  }
  return t3;
}
function HandleIcon() {
  const $ = (0, import_react_compiler_runtime.c)(1);
  let t0;
  if ($[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = (0, import_jsx_runtime29.jsxs)("svg", { width: "24", height: "24", viewBox: "0 0 100 100", fill: "none", children: [
      (0, import_jsx_runtime29.jsx)("circle", { cx: "28", cy: "50", r: "9", fill: "currentColor" }),
      (0, import_jsx_runtime29.jsx)("circle", { cx: "28", cy: "21", r: "9", fill: "currentColor" }),
      (0, import_jsx_runtime29.jsx)("circle", { cx: "71", cy: "21", r: "9", fill: "currentColor" }),
      (0, import_jsx_runtime29.jsx)("circle", { cx: "71", cy: "50", r: "9", fill: "currentColor" }),
      (0, import_jsx_runtime29.jsx)("circle", { cx: "71", cy: "78", r: "9", fill: "currentColor" }),
      (0, import_jsx_runtime29.jsx)("circle", { cx: "28", cy: "78", r: "9", fill: "currentColor" })
    ] });
    $[0] = t0;
  } else {
    t0 = $[0];
  }
  return t0;
}
function _10kIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "10k" });
}
function _10mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "10mp" });
}
function _11mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "11mp" });
}
function _123Icon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "123" });
}
function _12mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "12mp" });
}
function _13mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "13mp" });
}
function _14mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "14mp" });
}
function _15mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "15mp" });
}
function _16mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "16mp" });
}
function _17mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "17mp" });
}
function _18UpRatingIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "18_up_rating" });
}
function _18mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "18mp" });
}
function _19mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "19mp" });
}
function _1kIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "1k" });
}
function _1kPlusIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "1k_plus" });
}
function _1xMobiledataIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "1x_mobiledata" });
}
function _20mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "20mp" });
}
function _21mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "21mp" });
}
function _22mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "22mp" });
}
function _23mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "23mp" });
}
function _24mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "24mp" });
}
function _2kIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "2k" });
}
function _2kPlusIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "2k_plus" });
}
function _2mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "2mp" });
}
function _30fpsIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "30fps" });
}
function _30fpsSelectIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "30fps_select" });
}
function _360Icon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "360" });
}
function _3dRotationIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "3d_rotation" });
}
function _3gMobiledataIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "3g_mobiledata" });
}
function _3kIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "3k" });
}
function _3kPlusIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "3k_plus" });
}
function _3mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "3mp" });
}
function _3pIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "3p" });
}
function _4gMobiledataIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "4g_mobiledata" });
}
function _4gPlusMobiledataIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "4g_plus_mobiledata" });
}
function _4kIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "4k" });
}
function _4kPlusIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "4k_plus" });
}
function _4mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "4mp" });
}
function _5gIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "5g" });
}
function _5kIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "5k" });
}
function _5kPlusIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "5k_plus" });
}
function _5mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "5mp" });
}
function _60fpsIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "60fps" });
}
function _60fpsSelectIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "60fps_select" });
}
function _6FtApartIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "6_ft_apart" });
}
function _6kIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "6k" });
}
function _6kPlusIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "6k_plus" });
}
function _6mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "6mp" });
}
function _7kIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "7k" });
}
function _7kPlusIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "7k_plus" });
}
function _7mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "7mp" });
}
function _8kIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "8k" });
}
function _8kPlusIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "8k_plus" });
}
function _8mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "8mp" });
}
function _9kIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "9k" });
}
function _9kPlusIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "9k_plus" });
}
function _9mpIcon(props) {
  return (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "9mp" });
}
function AbcIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "abc" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AcUnitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "ac_unit" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AccessAlarmIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "access_alarm" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AccessAlarmsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "access_alarms" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AccessTimeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "access_time" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AccessTimeFilledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "access_time_filled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AccessibilityIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "accessibility" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AccessibilityNewIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "accessibility_new" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AccessibleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "accessible" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AccessibleForwardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "accessible_forward" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AccountBalanceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "account_balance" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AccountBalanceWalletIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "account_balance_wallet" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AccountBoxIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "account_box" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AccountCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "account_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AccountTreeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "account_tree" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AdUnitsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "ad_units" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AdbIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "adb" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddAPhotoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_a_photo" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddAlarmIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_alarm" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddAlertIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_alert" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddBoxIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_box" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddBusinessIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_business" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddCardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_card" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "addchart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddCircleOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_circle_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddCommentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_comment" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddHomeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_home" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddHomeWorkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_home_work" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddIcCallIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_ic_call" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddLinkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_link" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddLocationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_location" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddLocationAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_location_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddModeratorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_moderator" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddPhotoAlternateIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_photo_alternate" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddReactionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_reaction" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddRoadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_road" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddShoppingCartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_shopping_cart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddTaskIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_task" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddToDriveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_to_drive" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddToHomeScreenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_to_home_screen" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddToPhotosIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_to_photos" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AddToQueueIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "add_to_queue" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AdfScannerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "adf_scanner" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AdjustIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "adjust" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AdminPanelSettingsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "admin_panel_settings" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AdobeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "adobe" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AdsClickIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "ads_click" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AgricultureIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "agriculture" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "air" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirlineSeatFlatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airline_seat_flat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirlineSeatFlatAngledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airline_seat_flat_angled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirlineSeatIndividualSuiteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airline_seat_individual_suite" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirlineSeatLegroomExtraIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airline_seat_legroom_extra" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirlineSeatLegroomNormalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airline_seat_legroom_normal" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirlineSeatLegroomReducedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airline_seat_legroom_reduced" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirlineSeatReclineExtraIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airline_seat_recline_extra" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirlineSeatReclineNormalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airline_seat_recline_normal" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirlineStopsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airline_stops" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirlinesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airlines" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirplaneTicketIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airplane_ticket" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirplanemodeActiveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airplanemode_active" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirplanemodeInactiveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airplanemode_inactive" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirplanemodeOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airplanemode_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirplanemodeOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airplanemode_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirplayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airplay" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AirportShuttleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "airport_shuttle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AlarmIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "alarm" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AlarmAddIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "alarm_add" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AlarmOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "alarm_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AlarmOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "alarm_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AlbumIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "album" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AlignHorizontalCenterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "align_horizontal_center" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AlignHorizontalLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "align_horizontal_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AlignHorizontalRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "align_horizontal_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AlignVerticalBottomIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "align_vertical_bottom" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AlignVerticalCenterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "align_vertical_center" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AlignVerticalTopIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "align_vertical_top" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AllInboxIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "all_inbox" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AllInclusiveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "all_inclusive" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AllOutIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "all_out" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AltRouteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "alt_route" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AlternateEmailIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "alternate_email" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AmpStoriesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "amp_stories" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AnalyticsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "analytics" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AnchorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "anchor" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AndroidIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "android" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AnimationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "animation" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AnnouncementIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "announcement" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AodIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "aod" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ApartmentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "apartment" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ApiIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "api" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AppBlockingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "app_blocking" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AppRegistrationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "app_registration" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AppSettingsAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "app_settings_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AppShortcutIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "app_shortcut" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AppleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "apple" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ApprovalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "approval" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AppsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "apps" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AppsOutageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "apps_outage" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArchitectureIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "architecture" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArchiveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "archive" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AreaChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "area_chart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowBackIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_back" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowBackIosIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_back_ios" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowBackIosNewIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_back_ios_new" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowCircleDownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_circle_down" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowCircleLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_circle_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowCircleRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_circle_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowCircleUpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_circle_up" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowDownwardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_downward" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowDropDownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_drop_down" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowDropDownCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_drop_down_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowDropUpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_drop_up" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowForwardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_forward" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowForwardIosIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_forward_ios" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowOutwardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_outward" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowRightAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_right_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArrowUpwardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "arrow_upward" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArtTrackIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "art_track" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ArticleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "article" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AspectRatioIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "aspect_ratio" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AssessmentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "assessment" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AssignmentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "assignment" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AssignmentIndIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "assignment_ind" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AssignmentLateIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "assignment_late" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AssignmentReturnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "assignment_return" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AssignmentReturnedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "assignment_returned" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AssignmentTurnedInIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "assignment_turned_in" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AssistWalkerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "assist_walker" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AssistantIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "assistant" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AssistantDirectionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "assistant_direction" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AssistantPhotoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "assistant_photo" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AssuredWorkloadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "assured_workload" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AtmIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "atm" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AttachEmailIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "attach_email" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AttachFileIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "attach_file" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AttachMoneyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "attach_money" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AttachmentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "attachment" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AttractionsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "attractions" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AttributionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "attribution" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AudioFileIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "audio_file" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AudiotrackIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "audiotrack" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AutoAwesomeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "auto_awesome" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AutoAwesomeMosaicIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "auto_awesome_mosaic" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AutoAwesomeMotionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "auto_awesome_motion" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AutoDeleteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "auto_delete" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AutoFixHighIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "auto_fix_high" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AutoFixNormalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "auto_fix_normal" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AutoFixOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "auto_fix_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AutoGraphIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "auto_graph" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AutoModeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "auto_mode" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AutoStoriesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "auto_stories" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AutofpsSelectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "autofps_select" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AutorenewIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "autorenew" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function AvTimerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "av_timer" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BabyChangingStationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "baby_changing_station" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BackHandIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "back_hand" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BackpackIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "backpack" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BackspaceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "backspace" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BackupIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "backup" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BackupTableIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "backup_table" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BadgeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "badge" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BakeryDiningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bakery_dining" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BalanceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "balance" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BalconyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "balcony" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BallotIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "ballot" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BarChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bar_chart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BatchPredictionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "batch_prediction" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BathroomIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bathroom" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BathtubIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bathtub" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Battery0BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "battery_0_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Battery1BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "battery_1_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Battery2BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "battery_2_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Battery3BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "battery_3_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Battery4BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "battery_4_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Battery5BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "battery_5_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Battery6BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "battery_6_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BatteryAlertIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "battery_alert" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BatteryChargingFullIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "battery_charging_full" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BatteryFullIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "battery_full" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BatterySaverIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "battery_saver" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BatteryStdIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "battery_std" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BatteryUnknownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "battery_unknown" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BeachAccessIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "beach_access" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BedroomBabyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bedroom_baby" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BedroomChildIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bedroom_child" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BedroomParentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bedroom_parent" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BedtimeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bedtime" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BedtimeOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bedtime_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BeenhereIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "beenhere" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BentoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bento" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BikeScooterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bike_scooter" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BiotechIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "biotech" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BlenderIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "blender" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BlindIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "blind" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BlindsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "blinds" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BlindsClosedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "blinds_closed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BlockIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "block" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BloodtypeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bloodtype" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BluetoothIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bluetooth" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BluetoothAudioIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bluetooth_audio" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BluetoothConnectedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bluetooth_connected" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BluetoothDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bluetooth_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BluetoothDriveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bluetooth_drive" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BluetoothSearchingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bluetooth_searching" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BlurCircularIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "blur_circular" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BlurLinearIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "blur_linear" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BlurOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "blur_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BlurOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "blur_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BoltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bolt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BookIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "book" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BookOnlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "book_online" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BookmarkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bookmark" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BookmarkAddIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bookmark_add" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BookmarkAddedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bookmark_added" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BookmarkBorderIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bookmark_border" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BookmarkOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bookmark_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BookmarkRemoveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bookmark_remove" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BookmarksIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bookmarks" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BorderAllIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "border_all" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BorderBottomIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "border_bottom" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BorderClearIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "border_clear" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BorderColorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "border_color" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BorderHorizontalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "border_horizontal" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BorderInnerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "border_inner" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BorderLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "border_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BorderOuterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "border_outer" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BorderRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "border_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BorderStyleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "border_style" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BorderTopIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "border_top" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BorderVerticalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "border_vertical" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BoyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "boy" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BrandingWatermarkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "branding_watermark" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BreakfastDiningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "breakfast_dining" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Brightness1Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "brightness_1" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Brightness2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "brightness_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Brightness3Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "brightness_3" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Brightness4Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "brightness_4" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Brightness5Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "brightness_5" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Brightness6Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "brightness_6" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Brightness7Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "brightness_7" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BrightnessAutoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "brightness_auto" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BrightnessHighIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "brightness_high" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BrightnessLowIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "brightness_low" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BrightnessMediumIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "brightness_medium" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BroadcastOnHomeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "broadcast_on_home" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BroadcastOnPersonalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "broadcast_on_personal" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BrokenImageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "broken_image" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BrowseGalleryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "browse_gallery" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BrowserNotSupportedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "browser_not_supported" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BrowserUpdatedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "browser_updated" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BrunchDiningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "brunch_dining" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BrushIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "brush" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BubbleChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bubble_chart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BugReportIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bug_report" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BuildIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "build" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BuildCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "build_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BungalowIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bungalow" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BurstModeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "burst_mode" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BusAlertIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "bus_alert" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BusinessIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "business" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function BusinessCenterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "business_center" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CabinIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cabin" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CableIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cable" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CachedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cached" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CakeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cake" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CalculateIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "calculate" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CalendarMonthIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "calendar_month" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CalendarTodayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "calendar_today" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CalendarViewDayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "calendar_view_day" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CalendarViewMonthIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "calendar_view_month" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CalendarViewWeekIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "calendar_view_week" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CallIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "call" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CallEndIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "call_end" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CallMadeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "call_made" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CallMergeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "call_merge" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CallMissedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "call_missed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CallMissedOutgoingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "call_missed_outgoing" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CallReceivedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "call_received" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CallSplitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "call_split" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CallToActionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "call_to_action" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CameraIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "camera" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CameraAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "camera_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CameraEnhanceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "camera_enhance" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CameraFrontIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "camera_front" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CameraIndoorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "camera_indoor" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CameraOutdoorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "camera_outdoor" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CameraRearIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "camera_rear" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CameraRollIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "camera_roll" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CameraswitchIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cameraswitch" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CampaignIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "campaign" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CancelIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cancel" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CancelPresentationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cancel_presentation" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CancelScheduleSendIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cancel_schedule_send" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CandlestickChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "candlestick_chart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CarCrashIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "car_crash" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CarRentalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "car_rental" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CarRepairIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "car_repair" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CardGiftcardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "card_giftcard" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CardMembershipIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "card_membership" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CardTravelIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "card_travel" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CarpenterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "carpenter" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CasesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cases" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CasinoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "casino" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CastIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cast" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CastConnectedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cast_connected" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CastForEducationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cast_for_education" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CastleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "castle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CatchingPokemonIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "catching_pokemon" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CategoryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "category" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CelebrationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "celebration" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CellTowerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cell_tower" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CellWifiIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cell_wifi" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CenterFocusStrongIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "center_focus_strong" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CenterFocusWeakIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "center_focus_weak" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChairIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "chair" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChairAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "chair_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChaletIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "chalet" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChangeCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "change_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChangeHistoryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "change_history" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChargingStationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "charging_station" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "chat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChatBubbleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "chat_bubble" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChatBubbleOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "chat_bubble_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CheckIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "check" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CheckBoxIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "check_box" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CheckBoxOutlineBlankIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "check_box_outline_blank" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CheckCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "check_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CheckCircleOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "check_circle_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChecklistIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "checklist" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChecklistRtlIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "checklist_rtl" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CheckroomIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "checkroom" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChevronLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "chevron_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChevronRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "chevron_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChildCareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "child_care" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChildFriendlyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "child_friendly" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChromeReaderModeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "chrome_reader_mode" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ChurchIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "church" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CircleNotificationsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "circle_notifications" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ClassIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "class" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CleanHandsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "clean_hands" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CleaningServicesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cleaning_services" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ClearIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "clear" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ClearAllIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "clear_all" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CloseIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "close" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CloseFullscreenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "close_fullscreen" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ClosedCaptionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "closed_caption" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ClosedCaptionDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "closed_caption_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ClosedCaptionOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "closed_caption_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CloudIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cloud" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CloudCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cloud_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CloudDoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cloud_done" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CloudDownloadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cloud_download" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CloudOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cloud_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CloudQueueIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cloud_queue" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CloudSyncIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cloud_sync" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CloudUploadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cloud_upload" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Co2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "co2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CoPresentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "co_present" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CodeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "code" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CodeOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "code_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CoffeeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "coffee" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CoffeeMakerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "coffee_maker" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CollectionsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "collections" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CollectionsBookmarkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "collections_bookmark" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ColorLensIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "color_lens" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ColorizeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "colorize" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CommentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "comment" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CommentBankIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "comment_bank" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CommentsDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "comments_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CommitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "commit" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CommuteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "commute" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CompareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "compare" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CompareArrowsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "compare_arrows" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CompassCalibrationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "compass_calibration" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CompostIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "compost" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CompressIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "compress" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ComputerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "computer" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ConfirmationNumIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "confirmation_num" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ConfirmationNumberIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "confirmation_number" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ConnectWithoutContactIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "connect_without_contact" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ConnectedTvIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "connected_tv" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ConnectingAirportsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "connecting_airports" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ConstructionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "construction" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ContactEmergencyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "contact_emergency" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ContactMailIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "contact_mail" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ContactPageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "contact_page" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ContactPhoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "contact_phone" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ContactSupportIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "contact_support" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ContactlessIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "contactless" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ContactsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "contacts" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ContentCopyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "content_copy" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ContentCutIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "content_cut" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ContentPasteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "content_paste" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ContentPasteGoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "content_paste_go" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ContentPasteOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "content_paste_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ContentPasteSearchIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "content_paste_search" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ContrastIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "contrast" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ControlCameraIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "control_camera" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ControlPointIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "control_point" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ControlPointDuplicateIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "control_point_duplicate" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CookieIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cookie" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CopyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "copy" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CopyAllIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "copy_all" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CopyrightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "copyright" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CoronavirusIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "coronavirus" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CorporateFareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "corporate_fare" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CottageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cottage" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CountertopsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "countertops" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CreateIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "create" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CreateNewFolderIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "create_new_folder" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CreditCardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "credit_card" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CreditCardOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "credit_card_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CreditScoreIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "credit_score" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CribIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "crib" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CrisisAlertIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "crisis_alert" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CropIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "crop" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Crop169Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "crop_16_9" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Crop32Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "crop_3_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Crop54Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "crop_5_4" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Crop75Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "crop_7_5" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CropDinIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "crop_din" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CropFreeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "crop_free" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CropLandscapeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "crop_landscape" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CropOriginalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "crop_original" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CropPortraitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "crop_portrait" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CropRotateIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "crop_rotate" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CropSquareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "crop_square" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CrueltyFreeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cruelty_free" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CssIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "css" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CurrencyBitcoinIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "currency_bitcoin" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CurrencyExchangeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "currency_exchange" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CurrencyFrancIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "currency_franc" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CurrencyLiraIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "currency_lira" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CurrencyPoundIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "currency_pound" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CurrencyRubleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "currency_ruble" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CurrencyRupeeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "currency_rupee" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CurrencyYenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "currency_yen" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CurrencyYuanIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "currency_yuan" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CurtainsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "curtains" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CurtainsClosedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "curtains_closed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CutIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cut" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function CycloneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "cyclone" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DangerousIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dangerous" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DarkModeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dark_mode" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DashboardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dashboard" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DashboardCustomizeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dashboard_customize" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DataArrayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "data_array" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DataExplorationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "data_exploration" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DataObjectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "data_object" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DataSaverOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "data_saver_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DataSaverOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "data_saver_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DataThresholdingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "data_thresholding" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DataUsageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "data_usage" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DatasetIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dataset" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DatasetLinkedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dataset_linked" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DateRangeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "date_range" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeblurIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "deblur" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeckIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "deck" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DehazeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dehaze" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeleteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "delete" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeleteForeverIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "delete_forever" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeleteOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "delete_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeleteSweepIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "delete_sweep" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeliveryDiningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "delivery_dining" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DensityLargeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "density_large" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DensityMediumIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "density_medium" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DensitySmallIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "density_small" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DepartureBoardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "departure_board" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DescriptionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "description" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeselectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "deselect" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DesignServicesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "design_services" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeskIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "desk" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DesktopAccessDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "desktop_access_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DesktopMacIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "desktop_mac" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DesktopWindowsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "desktop_windows" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DetailsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "details" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeveloperBoardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "developer_board" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeveloperBoardOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "developer_board_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeveloperModeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "developer_mode" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeviceHubIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "device_hub" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeviceThermostatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "device_thermostat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DeviceUnknownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "device_unknown" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DevicesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "devices" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DevicesFoldIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "devices_fold" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DevicesOtherIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "devices_other" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DialerSipIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dialer_sip" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DialpadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dialpad" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DiamondIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "diamond" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DifferenceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "difference" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DiningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dining" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DinnerDiningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dinner_dining" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsBikeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_bike" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsBoatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_boat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsBoatFilledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_boat_filled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsBusIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_bus" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsBusFilledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_bus_filled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsCarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_car" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsCarFilledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_car_filled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsFerryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_ferry" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsRailwayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_railway" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsRailwayFilledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_railway_filled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsRunIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_run" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsSubwayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_subway" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsSubwayFilledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_subway_filled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsTrainIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_train" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsTransitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_transit" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsTransitFilledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_transit_filled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirectionsWalkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "directions_walk" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DirtyLensIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dirty_lens" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DisabledByDefaultIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "disabled_by_default" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DisabledVisibleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "disabled_visible" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DiscFullIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "disc_full" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DiscordIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "discord" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DiscountIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "discount" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DisplaySettingsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "display_settings" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Diversity1Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "diversity_1" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Diversity2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "diversity_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Diversity3Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "diversity_3" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DndForwardslashIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dnd_forwardslash" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DnsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dns" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoDisturbIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "do_disturb" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoDisturbAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "do_disturb_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoDisturbOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "do_disturb_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoDisturbOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "do_disturb_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoNotDisturbIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "do_not_disturb" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoNotDisturbAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "do_not_disturb_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoNotDisturbOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "do_not_disturb_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoNotDisturbOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "do_not_disturb_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoNotDisturbOnTotalSilenceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "do_not_disturb_on_total_silence" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoNotStepIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "do_not_step" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoNotTouchIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "do_not_touch" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DockIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dock" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DocumentScannerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "document_scanner" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DomainIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "domain" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DomainAddIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "domain_add" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DomainDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "domain_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DomainVerificationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "domain_verification" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "done" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoneAllIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "done_all" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoneOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "done_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DonutLargeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "donut_large" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DonutSmallIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "donut_small" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoorBackIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "door_back" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoorFrontIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "door_front" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoorSlidingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "door_sliding" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoorbellIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "doorbell" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DoubleArrowIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "double_arrow" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DownhillSkiingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "downhill_skiing" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DownloadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "download" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DownloadDoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "download_done" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DownloadForOfflineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "download_for_offline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DownloadingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "downloading" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DraftsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "drafts" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DragHandleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "drag_handle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DragIndicatorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "drag_indicator" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DrawIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "draw" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DriveEtaIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "drive_eta" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DriveFileMoveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "drive_file_move" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DriveFileMoveRtlIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "drive_file_move_rtl" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DriveFileRenameOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "drive_file_rename_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DriveFolderUploadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "drive_folder_upload" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dry" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DryCleaningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dry_cleaning" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DuoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "duo" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DvrIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dvr" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DynamicFeedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dynamic_feed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function DynamicFormIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "dynamic_form" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EMobiledataIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "e_mobiledata" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EarbudsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "earbuds" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EarbudsBatteryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "earbuds_battery" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EastIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "east" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EcoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "eco" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EdgesensorHighIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "edgesensor_high" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EdgesensorLowIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "edgesensor_low" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EditIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "edit" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EditAttributesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "edit_attributes" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EditCalendarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "edit_calendar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EditLocationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "edit_location" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EditLocationAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "edit_location_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EditNoteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "edit_note" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EditNotificationsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "edit_notifications" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EditOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "edit_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EditRoadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "edit_road" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EggIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "egg" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EggAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "egg_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EjectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "eject" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ElderlyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "elderly" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ElderlyWomanIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "elderly_woman" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ElectricBikeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "electric_bike" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ElectricBoltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "electric_bolt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ElectricCarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "electric_car" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ElectricMeterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "electric_meter" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ElectricMopedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "electric_moped" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ElectricRickshawIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "electric_rickshaw" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ElectricScooterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "electric_scooter" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ElectricalServicesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "electrical_services" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ElevatorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "elevator" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EmailIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "email" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EmergencyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "emergency" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EmergencyRecordingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "emergency_recording" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EmergencyShareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "emergency_share" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EmojiEmotionsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "emoji_emotions" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EmojiEventsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "emoji_events" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EmojiFlagsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "emoji_flags" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EmojiFoodBeverageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "emoji_food_beverage" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EmojiNatureIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "emoji_nature" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EmojiObjectsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "emoji_objects" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EmojiPeopleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "emoji_people" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EmojiSymbolsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "emoji_symbols" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EmojiTransportationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "emoji_transportation" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EnergySavingsLeafIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "energy_savings_leaf" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EngineeringIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "engineering" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EnhancePhotoTranslateIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "enhance_photo_translate" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EnhancedEncryptionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "enhanced_encryption" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EqualizerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "equalizer" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ErrorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "error" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ErrorOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "error_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EscalatorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "escalator" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EscalatorWarningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "escalator_warning" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EuroIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "euro" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EuroSymbolIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "euro_symbol" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EvStationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "ev_station" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EventIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "event" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EventAvailableIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "event_available" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EventBusyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "event_busy" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EventNoteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "event_note" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EventRepeatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "event_repeat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function EventSeatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "event_seat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExitToAppIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "exit_to_app" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExpandIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "expand" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExpandCircleDownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "expand_circle_down" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExpandLessIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "expand_less" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExpandMoreIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "expand_more" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExplicitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "explicit" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExploreIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "explore" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExploreOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "explore_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExposureIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "exposure" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExposureMinus1Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "exposure_minus_1" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExposureMinus2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "exposure_minus_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExposureNeg1Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "exposure_neg_1" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExposureNeg2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "exposure_neg_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExposurePlus1Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "exposure_plus_1" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExposurePlus2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "exposure_plus_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExposureZeroIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "exposure_zero" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExtensionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "extension" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ExtensionOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "extension_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FaceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "face" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Face2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "face_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Face3Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "face_3" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Face4Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "face_4" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Face5Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "face_5" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Face6Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "face_6" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FaceRetouchingNaturalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "face_retouching_natural" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FaceRetouchingOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "face_retouching_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FaceUnlockIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "face_unlock" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FacebookIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "facebook" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FactCheckIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fact_check" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FactoryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "factory" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FamilyRestroomIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "family_restroom" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FastForwardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fast_forward" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FastRewindIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fast_rewind" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FastfoodIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fastfood" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FavoriteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "favorite" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FavoriteBorderIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "favorite_border" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FavoriteOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "favorite_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FaxIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fax" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FeaturedPlayListIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "featured_play_list" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FeaturedVideoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "featured_video" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FeedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "feed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FeedbackIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "feedback" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FemaleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "female" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FenceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fence" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FestivalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "festival" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FiberDvrIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fiber_dvr" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FiberManualRecordIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fiber_manual_record" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FiberNewIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fiber_new" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FiberPinIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fiber_pin" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FiberSmartRecordIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fiber_smart_record" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FileCopyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "file_copy" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FileDownloadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "file_download" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FileDownloadDoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "file_download_done" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FileDownloadOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "file_download_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FileOpenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "file_open" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FilePresentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "file_present" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FileUploadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "file_upload" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FilterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Filter1Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_1" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Filter2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Filter3Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_3" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Filter4Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_4" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Filter5Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_5" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Filter6Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_6" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Filter7Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_7" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Filter8Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_8" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Filter9Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_9" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Filter9PlusIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_9_plus" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FilterAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FilterAltOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_alt_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FilterBAndWIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_b_and_w" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FilterCenterFocusIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_center_focus" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FilterDramaIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_drama" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FilterFramesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_frames" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FilterHdrIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_hdr" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FilterListIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_list" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FilterListOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_list_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FilterNoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_none" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FilterTiltShiftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_tilt_shift" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FilterVintageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "filter_vintage" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FindInPageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "find_in_page" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FindReplaceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "find_replace" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FingerprintIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fingerprint" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FireExtinguisherIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fire_extinguisher" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FireHydrantAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fire_hydrant_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FireTruckIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fire_truck" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FireplaceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fireplace" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FirstPageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "first_page" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FitScreenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fit_screen" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FitbitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fitbit" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FitnessCenterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fitness_center" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlagIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flag" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlagCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flag_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlakyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flaky" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flare" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlashAutoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flash_auto" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlashOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flash_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlashOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flash_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlashlightOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flashlight_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlashlightOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flashlight_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlatwareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flatware" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flight" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlightClassIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flight_class" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlightLandIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flight_land" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlightTakeoffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flight_takeoff" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlipIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flip" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlipCameraAndroidIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flip_camera_android" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlipCameraIosIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flip_camera_ios" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlipToBackIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flip_to_back" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlipToFrontIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flip_to_front" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FloodIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flood" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlourescentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flourescent" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FluorescentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fluorescent" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FlutterDashIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "flutter_dash" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FmdBadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fmd_bad" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FmdGoodIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fmd_good" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FolderIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "folder" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FolderCopyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "folder_copy" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FolderDeleteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "folder_delete" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FolderOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "folder_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FolderOpenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "folder_open" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FolderSharedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "folder_shared" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FolderSpecialIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "folder_special" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FolderZipIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "folder_zip" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FollowTheSignsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "follow_the_signs" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FontDownloadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "font_download" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FontDownloadOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "font_download_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FoodBankIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "food_bank" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ForestIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "forest" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ForkLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fork_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ForkRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fork_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatAlignCenterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_align_center" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatAlignJustifyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_align_justify" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatAlignLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_align_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatAlignRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_align_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatBoldIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_bold" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatClearIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_clear" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatColorFillIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_color_fill" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatColorResetIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_color_reset" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatColorTextIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_color_text" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatIndentDecreaseIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_indent_decrease" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatIndentIncreaseIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_indent_increase" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatItalicIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_italic" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatLineSpacingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_line_spacing" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatListBulletedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_list_bulleted" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatListNumberedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_list_numbered" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatListNumberedRtlIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_list_numbered_rtl" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatOverlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_overline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatPaintIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_paint" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatQuoteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_quote" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatShapesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_shapes" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatSizeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_size" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatStrikethroughIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_strikethrough" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatTextdirectionLToRIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_textdirection_l_to_r" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatTextdirectionRToLIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_textdirection_r_to_l" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatUnderlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_underline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FormatUnderlinedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "format_underlined" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FortIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fort" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ForumIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "forum" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ForwardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "forward" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Forward10Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "forward_10" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Forward30Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "forward_30" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Forward5Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "forward_5" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ForwardToInboxIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "forward_to_inbox" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FoundationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "foundation" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FreeBreakfastIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "free_breakfast" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FreeCancellationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "free_cancellation" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FrontHandIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "front_hand" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FullscreenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fullscreen" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FullscreenExitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "fullscreen_exit" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function FunctionsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "functions" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GMobiledataIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "g_mobiledata" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GTranslateIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "g_translate" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GamepadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "gamepad" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GamesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "games" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GarageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "garage" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GasMeterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "gas_meter" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GavelIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "gavel" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GeneratingTokensIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "generating_tokens" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GestureIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "gesture" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GetAppIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "get_app" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GifIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "gif" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GifBoxIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "gif_box" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GirlIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "girl" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GiteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "gite" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GolfCourseIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "golf_course" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GppBadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "gpp_bad" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GppGoodIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "gpp_good" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GppMaybeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "gpp_maybe" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GpsFixedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "gps_fixed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GpsNotFixedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "gps_not_fixed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GpsOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "gps_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GradeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "grade" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GradientIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "gradient" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GradingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "grading" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GrainIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "grain" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GraphicEqIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "graphic_eq" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GrassIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "grass" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Grid3x3Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "grid_3x3" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Grid4x4Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "grid_4x4" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GridGoldenratioIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "grid_goldenratio" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GridOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "grid_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GridOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "grid_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GridViewIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "grid_view" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GroupIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "group" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GroupAddIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "group_add" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GroupOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "group_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GroupRemoveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "group_remove" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GroupWorkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "group_work" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function GroupsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "groups" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Groups2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "groups_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Groups3Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "groups_3" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HMobiledataIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "h_mobiledata" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HPlusMobiledataIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "h_plus_mobiledata" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HailIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hail" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HandshakeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "handshake" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HandymanIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "handyman" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HardwareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hardware" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HdIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hd" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HdrAutoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hdr_auto" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HdrAutoSelectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hdr_auto_select" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HdrEnhancedSelectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hdr_enhanced_select" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HdrOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hdr_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HdrOffSelectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hdr_off_select" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HdrOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hdr_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HdrOnSelectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hdr_on_select" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HdrPlusIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hdr_plus" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HdrStrongIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hdr_strong" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HdrWeakIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hdr_weak" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HeadphonesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "headphones" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HeadphonesBatteryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "headphones_battery" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HeadsetIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "headset" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HeadsetMicIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "headset_mic" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HeadsetOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "headset_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HealingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "healing" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HealthAndSafetyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "health_and_safety" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HearingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hearing" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HearingDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hearing_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HeartBrokenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "heart_broken" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HeatPumpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "heat_pump" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HeightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "height" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HelpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "help" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HelpCenterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "help_center" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HelpOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "help_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HevcIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hevc" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HexagonIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hexagon" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HideImageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hide_image" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HideSourceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hide_source" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HighQualityIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "high_quality" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HighlightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "highlight" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HighlightAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "highlight_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HighlightOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "highlight_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HighlightRemoveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "highlight_remove" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HikingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hiking" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HistoryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "history" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HistoryEduIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "history_edu" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HistoryToggleOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "history_toggle_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HiveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hive" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HlsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hls" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HlsOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hls_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HolidayVillageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "holiday_village" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HomeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "home" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HomeMaxIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "home_max" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HomeMiniIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "home_mini" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HomeRepairServiceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "home_repair_service" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HomeWorkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "home_work" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HorizontalDistributeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "horizontal_distribute" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HorizontalRuleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "horizontal_rule" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HorizontalSplitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "horizontal_split" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HotTubIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hot_tub" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HotelIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hotel" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HotelClassIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hotel_class" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HourglassBottomIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hourglass_bottom" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HourglassDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hourglass_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HourglassEmptyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hourglass_empty" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HourglassFullIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hourglass_full" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HourglassTopIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hourglass_top" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HouseIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "house" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HouseSidingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "house_siding" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HouseboatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "houseboat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HowToRegIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "how_to_reg" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HowToVoteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "how_to_vote" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HtmlIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "html" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HttpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "http" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HttpsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "https" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HubIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hub" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function HvacIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "hvac" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function IceSkatingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "ice_skating" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function IcecreamIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "icecream" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ImageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "image" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ImageAspectRatioIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "image_aspect_ratio" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ImageNotSupportedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "image_not_supported" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ImageSearchIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "image_search" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ImagesearchRollerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "imagesearch_roller" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ImportContactsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "import_contacts" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ImportExportIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "import_export" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ImportantDevicesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "important_devices" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InboxIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "inbox" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function IncompleteCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "incomplete_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function IndeterminateCheckBoxIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "indeterminate_check_box" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InfoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "info" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InfoOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "info_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InputIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "input" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InsertChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "insert_chart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InsertChartOutlinedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "insert_chart_outlined" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InsertCommentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "insert_comment" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InsertDriveFileIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "insert_drive_file" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InsertEmoticonIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "insert_emoticon" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InsertInvitationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "insert_invitation" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InsertLinkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "insert_link" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InsertPageBreakIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "insert_page_break" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InsertPhotoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "insert_photo" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InsightsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "insights" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InstallDesktopIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "install_desktop" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InstallMobileIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "install_mobile" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function IntegrationInstructionsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "integration_instructions" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InterestsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "interests" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InterpreterModeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "interpreter_mode" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InventoryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "inventory" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Inventory2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "inventory_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InvertColorsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "invert_colors" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InvertColorsOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "invert_colors_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function InvertColorsOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "invert_colors_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function IosShareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "ios_share" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function IronIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "iron" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function IsoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "iso" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function JavascriptIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "javascript" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function JoinFullIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "join_full" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function JoinInnerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "join_inner" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function JoinLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "join_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function JoinRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "join_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KayakingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "kayaking" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KebabDiningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "kebab_dining" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "key" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "key_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardArrowDownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_arrow_down" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardArrowLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_arrow_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardArrowRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_arrow_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardArrowUpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_arrow_up" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardBackspaceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_backspace" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardCapslockIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_capslock" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardCommandKeyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_command_key" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardControlIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_control" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardControlKeyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_control_key" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardDoubleArrowDownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_double_arrow_down" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardDoubleArrowLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_double_arrow_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardDoubleArrowRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_double_arrow_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardDoubleArrowUpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_double_arrow_up" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardHideIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_hide" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardOptionKeyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_option_key" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardReturnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_return" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardTabIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_tab" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KeyboardVoiceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "keyboard_voice" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KingBedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "king_bed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KitchenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "kitchen" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function KitesurfingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "kitesurfing" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LabelIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "label" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LabelImportantIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "label_important" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LabelImportantOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "label_important_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LabelOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "label_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LabelOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "label_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LanIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lan" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LandscapeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "landscape" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LandslideIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "landslide" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LanguageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "language" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LaptopIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "laptop" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LaptopChromebookIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "laptop_chromebook" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LaptopMacIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "laptop_mac" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LaptopWindowsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "laptop_windows" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LastPageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "last_page" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LaunchIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "launch" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LayersIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "layers" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LayersClearIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "layers_clear" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LeaderboardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "leaderboard" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LeakAddIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "leak_add" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LeakRemoveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "leak_remove" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LeaveBagsAtHomeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "leave_bags_at_home" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LegendToggleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "legend_toggle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LensIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lens" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LensBlurIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lens_blur" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LibraryAddIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "library_add" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LibraryAddCheckIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "library_add_check" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LibraryBooksIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "library_books" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LibraryMusicIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "library_music" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "light" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LightModeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "light_mode" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LightbulbIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lightbulb" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LightbulbCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lightbulb_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LightbulbOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lightbulb_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LineAxisIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "line_axis" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LineStyleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "line_style" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LineWeightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "line_weight" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LinearScaleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "linear_scale" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LinkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "link" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LinkOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "link_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LinkedCameraIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "linked_camera" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LiquorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "liquor" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ListIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "list" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ListAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "list_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LiveHelpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "live_help" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LiveTvIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "live_tv" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LivingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "living" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalActivityIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_activity" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalAirportIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_airport" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalAtmIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_atm" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalAttractionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_attraction" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalBarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalCafeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_cafe" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalCarWashIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_car_wash" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalConvenienceStoreIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_convenience_store" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalDiningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_dining" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalDrinkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_drink" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalFireDepartmentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_fire_department" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalFloristIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_florist" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalGasStationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_gas_station" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalGroceryStoreIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_grocery_store" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalHospitalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_hospital" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalHotelIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_hotel" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalLaundryServiceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_laundry_service" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalLibraryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_library" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalMallIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_mall" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalMoviesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_movies" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalOfferIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_offer" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalParkingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_parking" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalPharmacyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_pharmacy" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalPhoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_phone" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalPizzaIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_pizza" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalPlayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_play" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalPoliceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_police" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalPostOfficeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_post_office" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalPrintshopIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_printshop" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalRestaurantIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_restaurant" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalSeeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_see" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalShippingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_shipping" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocalTaxiIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "local_taxi" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocationCityIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "location_city" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocationDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "location_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocationHistoryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "location_history" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocationOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "location_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocationOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "location_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LocationSearchingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "location_searching" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LockIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lock" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LockClockIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lock_clock" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LockOpenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lock_open" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LockOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lock_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LockPersonIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lock_person" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LockResetIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lock_reset" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LoginIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "login" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LogoDevIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "logo_dev" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LogoutIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "logout" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LooksIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "looks" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Looks3Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "looks_3" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Looks4Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "looks_4" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Looks5Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "looks_5" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Looks6Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "looks_6" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LooksOneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "looks_one" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LooksTwoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "looks_two" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LoopIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "loop" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LoupeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "loupe" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LowPriorityIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "low_priority" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LoyaltyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "loyalty" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LteMobiledataIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lte_mobiledata" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LtePlusMobiledataIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lte_plus_mobiledata" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LuggageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "luggage" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LunchDiningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lunch_dining" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function LyricsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "lyrics" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MacroOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "macro_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MailIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mail" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MailLockIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mail_lock" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MailOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mail_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MaleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "male" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ManIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "man" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Man2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "man_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Man3Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "man_3" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Man4Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "man_4" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ManageAccountsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "manage_accounts" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ManageHistoryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "manage_history" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ManageSearchIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "manage_search" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MapIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "map" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MapsHomeWorkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "maps_home_work" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MapsUgcIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "maps_ugc" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MarginIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "margin" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MarkAsUnreadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mark_as_unread" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MarkChatReadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mark_chat_read" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MarkChatUnreadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mark_chat_unread" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MarkEmailReadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mark_email_read" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MarkEmailUnreadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mark_email_unread" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MarkUnreadChatAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mark_unread_chat_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MarkunreadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "markunread" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MarkunreadMailboxIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "markunread_mailbox" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MasksIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "masks" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MaximizeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "maximize" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MediaBluetoothOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "media_bluetooth_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MediaBluetoothOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "media_bluetooth_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MediationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mediation" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MedicalInformationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "medical_information" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MedicalServicesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "medical_services" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MedicationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "medication" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MedicationLiquidIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "medication_liquid" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MeetingRoomIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "meeting_room" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MemoryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "memory" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MenuIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "menu" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MenuBookIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "menu_book" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MenuOpenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "menu_open" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MergeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "merge" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MergeTypeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "merge_type" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MessageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "message" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MessengerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "messenger" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MessengerOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "messenger_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MicIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mic" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MicExternalOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mic_external_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MicExternalOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mic_external_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MicNoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mic_none" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MicOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mic_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MicrowaveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "microwave" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MilitaryTechIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "military_tech" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MinimizeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "minimize" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MinorCrashIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "minor_crash" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MiscellaneousServicesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "miscellaneous_services" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MissedVideoCallIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "missed_video_call" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MmsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mms" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MobileFriendlyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mobile_friendly" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MobileOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mobile_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MobileScreenShareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mobile_screen_share" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MobiledataOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mobiledata_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ModeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mode" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ModeCommentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mode_comment" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ModeEditIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mode_edit" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ModeEditOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mode_edit_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ModeFanOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mode_fan_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ModeNightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mode_night" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ModeOfTravelIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mode_of_travel" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ModeStandbyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mode_standby" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ModelTrainingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "model_training" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MonetizationOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "monetization_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MoneyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "money" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MoneyOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "money_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MoneyOffCsredIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "money_off_csred" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MonitorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "monitor" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MonitorHeartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "monitor_heart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MonitorWeightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "monitor_weight" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MonochromePhotosIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "monochrome_photos" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MoodIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mood" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MoodBadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mood_bad" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MopedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "moped" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MoreIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "more" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MoreHorizIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "more_horiz" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MoreTimeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "more_time" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MoreVertIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "more_vert" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MosqueIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mosque" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MotionPhotosAutoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "motion_photos_auto" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MotionPhotosOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "motion_photos_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MotionPhotosOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "motion_photos_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MotionPhotosPauseIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "motion_photos_pause" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MotionPhotosPausedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "motion_photos_paused" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MotorcycleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "motorcycle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MouseIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mouse" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MoveDownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "move_down" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MoveToInboxIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "move_to_inbox" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MoveUpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "move_up" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MovieIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "movie" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MovieCreationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "movie_creation" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MovieFilterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "movie_filter" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MovingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "moving" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "mp" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MultilineChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "multiline_chart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MultipleStopIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "multiple_stop" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MultitrackAudioIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "multitrack_audio" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MuseumIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "museum" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MusicNoteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "music_note" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MusicOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "music_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MusicVideoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "music_video" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MyLibraryAddIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "my_library_add" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MyLibraryBooksIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "my_library_books" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MyLibraryMusicIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "my_library_music" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function MyLocationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "my_location" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "nat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NatureIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "nature" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NaturePeopleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "nature_people" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NavigateBeforeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "navigate_before" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NavigateNextIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "navigate_next" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NavigationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "navigation" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NearMeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "near_me" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NearMeDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "near_me_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NearbyErrorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "nearby_error" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NearbyOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "nearby_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NestCamWiredStandIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "nest_cam_wired_stand" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NetworkCellIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "network_cell" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NetworkCheckIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "network_check" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NetworkLockedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "network_locked" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NetworkPingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "network_ping" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NetworkWifiIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "network_wifi" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NetworkWifi1BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "network_wifi_1_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NetworkWifi2BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "network_wifi_2_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NetworkWifi3BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "network_wifi_3_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NewLabelIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "new_label" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NewReleasesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "new_releases" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NewspaperIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "newspaper" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NextPlanIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "next_plan" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NextWeekIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "next_week" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NfcIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "nfc" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NightShelterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "night_shelter" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NightlifeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "nightlife" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NightlightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "nightlight" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NightlightRoundIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "nightlight_round" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NightsStayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "nights_stay" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoAccountsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_accounts" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoAdultContentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_adult_content" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoBackpackIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_backpack" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoCellIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_cell" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoCrashIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_crash" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoDrinksIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_drinks" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoEncryptionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_encryption" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoEncryptionGmailerrorredIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_encryption_gmailerrorred" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoFlashIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_flash" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoFoodIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_food" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoLuggageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_luggage" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoMealsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_meals" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoMeetingRoomIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_meeting_room" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoPhotographyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_photography" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoSimIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_sim" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoStrollerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_stroller" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoTransferIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "no_transfer" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoiseAwareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "noise_aware" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoiseControlOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "noise_control_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NordicWalkingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "nordic_walking" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NorthIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "north" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NorthEastIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "north_east" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NorthWestIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "north_west" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NotAccessibleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "not_accessible" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NotInterestedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "not_interested" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NotListedLocationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "not_listed_location" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NotStartedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "not_started" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "note" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoteAddIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "note_add" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NoteAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "note_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NotesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "notes" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NotificationAddIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "notification_add" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NotificationImportantIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "notification_important" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NotificationsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "notifications" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NotificationsActiveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "notifications_active" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NotificationsNoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "notifications_none" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NotificationsOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "notifications_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NotificationsOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "notifications_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NotificationsPausedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "notifications_paused" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NowWallpaperIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "now_wallpaper" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NowWidgetsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "now_widgets" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function NumbersIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "numbers" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OfflineBoltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "offline_bolt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OfflinePinIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "offline_pin" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OfflineShareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "offline_share" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OilBarrelIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "oil_barrel" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OnDeviceTrainingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "on_device_training" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OndemandVideoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "ondemand_video" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OnlinePredictionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "online_prediction" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OpacityIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "opacity" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OpenInBrowserIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "open_in_browser" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OpenInFullIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "open_in_full" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OpenInNewIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "open_in_new" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OpenInNewOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "open_in_new_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OpenWithIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "open_with" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OtherHousesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "other_houses" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OutbondIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "outbond" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OutboundIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "outbound" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OutboxIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "outbox" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OutdoorGrillIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "outdoor_grill" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OutletIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "outlet" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OutlinedFlagIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "outlined_flag" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function OutputIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "output" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PaddingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "padding" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PagesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pages" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PageviewIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pageview" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PaidIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "paid" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PaletteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "palette" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PanToolIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pan_tool" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PanToolAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pan_tool_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PanoramaIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "panorama" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PanoramaFisheyeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "panorama_fisheye" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PanoramaHorizontalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "panorama_horizontal" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PanoramaHorizontalSelectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "panorama_horizontal_select" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PanoramaPhotosphereIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "panorama_photosphere" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PanoramaPhotosphereSelectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "panorama_photosphere_select" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PanoramaVerticalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "panorama_vertical" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PanoramaVerticalSelectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "panorama_vertical_select" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PanoramaWideAngleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "panorama_wide_angle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PanoramaWideAngleSelectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "panorama_wide_angle_select" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ParaglidingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "paragliding" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ParkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "park" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PartyModeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "party_mode" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PasswordIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "password" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PasteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "paste" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PatternIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pattern" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PauseIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pause" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PauseCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pause_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PauseCircleFilledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pause_circle_filled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PauseCircleOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pause_circle_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PausePresentationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pause_presentation" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PaymentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "payment" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PaymentsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "payments" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PaypalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "paypal" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PedalBikeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pedal_bike" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PendingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pending" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PendingActionsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pending_actions" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PentagonIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pentagon" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PeopleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "people" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PeopleAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "people_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PeopleOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "people_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PercentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "percent" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PermCameraMicIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "perm_camera_mic" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PermContactCalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "perm_contact_cal" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PermContactCalendarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "perm_contact_calendar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PermDataSettingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "perm_data_setting" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PermDeviceInfoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "perm_device_info" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PermDeviceInformationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "perm_device_information" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PermIdentityIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "perm_identity" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PermMediaIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "perm_media" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PermPhoneMsgIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "perm_phone_msg" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PermScanWifiIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "perm_scan_wifi" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PersonIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Person2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Person3Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person_3" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Person4Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person_4" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PersonAddIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person_add" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PersonAddAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person_add_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PersonAddAlt1Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person_add_alt_1" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PersonAddDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person_add_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PersonOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PersonOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PersonPinIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person_pin" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PersonPinCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person_pin_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PersonRemoveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person_remove" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PersonRemoveAlt1Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person_remove_alt_1" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PersonSearchIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "person_search" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PersonalInjuryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "personal_injury" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PersonalVideoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "personal_video" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PestControlIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pest_control" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PestControlRodentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pest_control_rodent" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PetsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pets" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhishingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phishing" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phone" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhoneAndroidIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phone_android" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhoneBluetoothSpeakerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phone_bluetooth_speaker" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhoneCallbackIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phone_callback" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhoneDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phone_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhoneEnabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phone_enabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhoneForwardedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phone_forwarded" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhoneInTalkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phone_in_talk" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhoneIphoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phone_iphone" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhoneLockedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phone_locked" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhoneMissedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phone_missed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhonePausedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phone_paused" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhonelinkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phonelink" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhonelinkEraseIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phonelink_erase" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhonelinkLockIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phonelink_lock" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhonelinkOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phonelink_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhonelinkRingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phonelink_ring" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhonelinkSetupIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "phonelink_setup" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhotoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "photo" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhotoAlbumIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "photo_album" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhotoCameraIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "photo_camera" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhotoCameraBackIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "photo_camera_back" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhotoCameraFrontIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "photo_camera_front" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhotoFilterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "photo_filter" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhotoLibraryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "photo_library" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhotoSizeSelectActualIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "photo_size_select_actual" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhotoSizeSelectLargeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "photo_size_select_large" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhotoSizeSelectSmallIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "photo_size_select_small" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PhpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "php" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PianoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "piano" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PianoOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "piano_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PictureAsPdfIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "picture_as_pdf" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PictureInPictureIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "picture_in_picture" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PictureInPictureAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "picture_in_picture_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PieChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pie_chart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PieChartOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pie_chart_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PinIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pin" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PinDropIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pin_drop" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PinEndIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pin_end" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PinInvokeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pin_invoke" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PinchIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pinch" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PivotTableChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pivot_table_chart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PixIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pix" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlaceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "place" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlagiarismIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "plagiarism" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlayArrowIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "play_arrow" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlayCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "play_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlayCircleFillIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "play_circle_fill" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlayCircleFilledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "play_circle_filled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlayCircleOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "play_circle_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlayDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "play_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlayForWorkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "play_for_work" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlayLessonIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "play_lesson" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlaylistAddIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "playlist_add" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlaylistAddCheckIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "playlist_add_check" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlaylistAddCheckCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "playlist_add_check_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlaylistAddCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "playlist_add_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlaylistPlayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "playlist_play" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlaylistRemoveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "playlist_remove" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlumbingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "plumbing" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PlusOneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "plus_one" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PodcastsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "podcasts" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PointOfSaleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "point_of_sale" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PolicyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "policy" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PollIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "poll" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PolylineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "polyline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PolymerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "polymer" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PoolIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pool" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PortableWifiOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "portable_wifi_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PortraitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "portrait" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PostAddIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "post_add" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PowerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "power" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PowerInputIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "power_input" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PowerOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "power_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PowerSettingsNewIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "power_settings_new" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PrecisionManufacturingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "precision_manufacturing" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PregnantWomanIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "pregnant_woman" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PresentToAllIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "present_to_all" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PreviewIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "preview" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PriceChangeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "price_change" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PriceCheckIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "price_check" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PrintIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "print" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PrintDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "print_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PriorityHighIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "priority_high" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PrivacyTipIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "privacy_tip" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PrivateConnectivityIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "private_connectivity" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ProductionQuantityLimitsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "production_quantity_limits" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PropaneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "propane" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PropaneTankIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "propane_tank" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PsychologyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "psychology" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PsychologyAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "psychology_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PublicIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "public" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PublicOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "public_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PublishIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "publish" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PublishedWithChangesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "published_with_changes" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PunchClockIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "punch_clock" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function PushPinIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "push_pin" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QrCodeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "qr_code" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QrCode2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "qr_code_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QrCodeScannerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "qr_code_scanner" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QueryBuilderIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "query_builder" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QueryStatsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "query_stats" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QuestionAnswerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "question_answer" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QuestionMarkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "question_mark" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QueueIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "queue" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QueueMusicIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "queue_music" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QueuePlayNextIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "queue_play_next" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QuickContactsDialerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "quick_contacts_dialer" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QuickContactsMailIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "quick_contacts_mail" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QuickreplyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "quickreply" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QuizIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "quiz" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function QuoraIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "quora" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RMobiledataIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "r_mobiledata" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RadarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "radar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RadioIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "radio" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RadioButtonCheckedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "radio_button_checked" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RadioButtonOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "radio_button_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RadioButtonOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "radio_button_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RadioButtonUncheckedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "radio_button_unchecked" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RailwayAlertIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "railway_alert" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RamenDiningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "ramen_dining" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RampLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "ramp_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RampRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "ramp_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RateReviewIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rate_review" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RawOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "raw_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RawOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "raw_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ReadMoreIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "read_more" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RealEstateAgentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "real_estate_agent" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ReceiptIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "receipt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ReceiptLongIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "receipt_long" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RecentActorsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "recent_actors" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RecommendIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "recommend" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RecordVoiceOverIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "record_voice_over" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RectangleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rectangle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RecyclingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "recycling" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RedditIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "reddit" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RedeemIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "redeem" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RedoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "redo" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ReduceCapacityIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "reduce_capacity" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RefreshIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "refresh" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RememberMeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "remember_me" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RemoveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "remove" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RemoveCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "remove_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RemoveCircleOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "remove_circle_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RemoveDoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "remove_done" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RemoveFromQueueIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "remove_from_queue" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RemoveModeratorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "remove_moderator" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RemoveRedEyeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "remove_red_eye" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RemoveRoadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "remove_road" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RemoveShoppingCartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "remove_shopping_cart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ReorderIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "reorder" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RepartitionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "repartition" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RepeatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "repeat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RepeatOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "repeat_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RepeatOneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "repeat_one" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RepeatOneOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "repeat_one_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ReplayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "replay" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Replay10Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "replay_10" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Replay30Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "replay_30" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Replay5Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "replay_5" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ReplayCircleFilledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "replay_circle_filled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ReplyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "reply" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ReplyAllIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "reply_all" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ReportIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "report" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ReportGmailerrorredIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "report_gmailerrorred" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ReportOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "report_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ReportProblemIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "report_problem" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RequestPageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "request_page" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RequestQuoteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "request_quote" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ResetTvIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "reset_tv" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RestartAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "restart_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RestaurantIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "restaurant" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RestaurantMenuIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "restaurant_menu" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RestoreIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "restore" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RestoreFromTrashIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "restore_from_trash" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RestorePageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "restore_page" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ReviewsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "reviews" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RiceBowlIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rice_bowl" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RingVolumeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "ring_volume" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RocketIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rocket" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RocketLaunchIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rocket_launch" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RollerShadesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "roller_shades" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RollerShadesClosedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "roller_shades_closed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RollerSkatingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "roller_skating" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RoofingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "roofing" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RoomIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "room" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RoomPreferencesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "room_preferences" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RoomServiceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "room_service" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Rotate90DegreesCcwIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rotate_90_degrees_ccw" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Rotate90DegreesCwIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rotate_90_degrees_cw" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RotateLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rotate_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RotateRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rotate_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RoundaboutLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "roundabout_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RoundaboutRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "roundabout_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RoundedCornerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rounded_corner" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RouteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "route" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RouterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "router" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RowingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rowing" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RssFeedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rss_feed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RsvpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rsvp" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RttIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rtt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RuleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rule" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RuleFolderIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rule_folder" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RunCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "run_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RunningWithErrorsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "running_with_errors" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function RvHookupIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "rv_hookup" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SafetyCheckIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "safety_check" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SafetyDividerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "safety_divider" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SailingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sailing" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SanitizerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sanitizer" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SatelliteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "satellite" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SatelliteAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "satellite_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SaveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "save" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SaveAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "save_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SaveAsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "save_as" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SavedSearchIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "saved_search" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SavingsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "savings" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScaleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "scale" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScannerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "scanner" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScatterPlotIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "scatter_plot" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScheduleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "schedule" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScheduleSendIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "schedule_send" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SchemaIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "schema" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SchoolIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "school" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScienceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "science" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScoreIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "score" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScoreboardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "scoreboard" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScreenLockLandscapeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "screen_lock_landscape" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScreenLockPortraitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "screen_lock_portrait" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScreenLockRotationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "screen_lock_rotation" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScreenRotationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "screen_rotation" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScreenRotationAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "screen_rotation_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScreenSearchDesktopIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "screen_search_desktop" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScreenShareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "screen_share" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScreenshotIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "screenshot" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScreenshotMonitorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "screenshot_monitor" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ScubaDivingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "scuba_diving" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SdIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sd" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SdCardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sd_card" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SdCardAlertIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sd_card_alert" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SdStorageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sd_storage" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SearchIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "search" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SearchOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "search_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SecurityIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "security" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SecurityUpdateIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "security_update" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SecurityUpdateGoodIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "security_update_good" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SecurityUpdateWarningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "security_update_warning" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SegmentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "segment" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SelectAllIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "select_all" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SelfImprovementIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "self_improvement" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SellIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sell" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SendIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "send" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SendAndArchiveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "send_and_archive" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SendTimeExtensionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "send_time_extension" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SendToMobileIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "send_to_mobile" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SensorDoorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sensor_door" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SensorOccupiedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sensor_occupied" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SensorWindowIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sensor_window" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SensorsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sensors" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SensorsOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sensors_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SentimentDissatisfiedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sentiment_dissatisfied" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SentimentNeutralIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sentiment_neutral" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SentimentSatisfiedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sentiment_satisfied" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SentimentSatisfiedAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sentiment_satisfied_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SentimentVeryDissatisfiedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sentiment_very_dissatisfied" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SentimentVerySatisfiedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sentiment_very_satisfied" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SetMealIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "set_meal" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsAccessibilityIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_accessibility" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsApplicationsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_applications" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsBackupRestoreIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_backup_restore" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsBluetoothIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_bluetooth" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsBrightnessIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_brightness" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsCellIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_cell" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsDisplayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_display" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsEthernetIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_ethernet" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsInputAntennaIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_input_antenna" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsInputComponentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_input_component" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsInputCompositeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_input_composite" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsInputHdmiIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_input_hdmi" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsInputSvideoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_input_svideo" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsOverscanIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_overscan" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsPhoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_phone" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsPowerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_power" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsRemoteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_remote" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsSuggestIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_suggest" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsSystemDaydreamIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_system_daydream" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SettingsVoiceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "settings_voice" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SevereColdIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "severe_cold" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShapeLineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shape_line" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "share" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShareArrivalTimeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "share_arrival_time" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShareLocationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "share_location" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShieldIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shield" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShieldMoonIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shield_moon" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShopIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shop" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Shop2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shop_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShopTwoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shop_two" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShopifyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shopify" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShoppingBagIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shopping_bag" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShoppingBasketIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shopping_basket" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShoppingCartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shopping_cart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShoppingCartCheckoutIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shopping_cart_checkout" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShortTextIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "short_text" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShortcutIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shortcut" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShowChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "show_chart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShowerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shower" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShuffleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shuffle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShuffleOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shuffle_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ShutterSpeedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "shutter_speed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SickIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sick" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignLanguageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sign_language" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalCellular0BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_cellular_0_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalCellular4BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_cellular_4_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalCellularAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_cellular_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalCellularAlt1BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_cellular_alt_1_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalCellularAlt2BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_cellular_alt_2_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalCellularConnectedNoInternet0BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_cellular_connected_no_internet_0_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalCellularConnectedNoInternet4BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_cellular_connected_no_internet_4_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalCellularNoSimIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_cellular_no_sim" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalCellularNodataIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_cellular_nodata" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalCellularNullIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_cellular_null" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalCellularOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_cellular_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalWifi0BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_wifi_0_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalWifi4BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_wifi_4_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalWifi4BarLockIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_wifi_4_bar_lock" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalWifiBadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_wifi_bad" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalWifiConnectedNoInternet4Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_wifi_connected_no_internet_4" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalWifiOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_wifi_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalWifiStatusbar4BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_wifi_statusbar_4_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalWifiStatusbarConnectedNoInternet4Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_wifi_statusbar_connected_no_internet_4" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignalWifiStatusbarNullIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signal_wifi_statusbar_null" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SignpostIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "signpost" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SimCardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sim_card" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SimCardAlertIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sim_card_alert" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SimCardDownloadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sim_card_download" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SingleBedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "single_bed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SipIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sip" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SkateboardingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "skateboarding" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SkipNextIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "skip_next" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SkipPreviousIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "skip_previous" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SleddingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sledding" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SlideshowIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "slideshow" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SlowMotionVideoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "slow_motion_video" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SmartButtonIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "smart_button" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SmartDisplayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "smart_display" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SmartScreenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "smart_screen" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SmartToyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "smart_toy" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SmartphoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "smartphone" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SmokeFreeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "smoke_free" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SmokingRoomsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "smoking_rooms" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SmsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sms" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SmsFailedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sms_failed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SnapchatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "snapchat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SnippetFolderIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "snippet_folder" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SnoozeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "snooze" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SnowboardingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "snowboarding" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SnowmobileIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "snowmobile" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SnowshoeingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "snowshoeing" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SoapIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "soap" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SocialDistanceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "social_distance" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SolarPowerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "solar_power" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SortIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sort" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SortByAlphaIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sort_by_alpha" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SosIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sos" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SoupKitchenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "soup_kitchen" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SourceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "source" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SouthIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "south" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SouthAmericaIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "south_america" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SouthEastIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "south_east" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SouthWestIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "south_west" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SpaIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "spa" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SpaceBarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "space_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SpaceDashboardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "space_dashboard" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SpatialAudioIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "spatial_audio" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SpatialAudioOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "spatial_audio_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SpatialTrackingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "spatial_tracking" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SpeakerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "speaker" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SpeakerGroupIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "speaker_group" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SpeakerNotesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "speaker_notes" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SpeakerNotesOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "speaker_notes_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SpeakerPhoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "speaker_phone" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SpeedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "speed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SpellcheckIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "spellcheck" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SplitscreenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "splitscreen" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SpokeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "spoke" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsBarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsBaseballIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_baseball" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsBasketballIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_basketball" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsCricketIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_cricket" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsEsportsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_esports" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsFootballIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_football" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsGolfIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_golf" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsGymnasticsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_gymnastics" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsHandballIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_handball" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsHockeyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_hockey" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsKabaddiIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_kabaddi" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsMartialArtsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_martial_arts" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsMmaIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_mma" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsMotorsportsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_motorsports" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsRugbyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_rugby" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsScoreIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_score" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsSoccerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_soccer" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsTennisIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_tennis" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SportsVolleyballIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sports_volleyball" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SquareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "square" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SquareFootIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "square_foot" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SsidChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "ssid_chart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StackedBarChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "stacked_bar_chart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StackedLineChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "stacked_line_chart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StadiumIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "stadium" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StairsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "stairs" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "star" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StarBorderIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "star_border" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StarBorderPurple500Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "star_border_purple500" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StarHalfIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "star_half" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StarOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "star_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StarPurple500Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "star_purple500" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StarRateIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "star_rate" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StarsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "stars" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "start" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StayCurrentLandscapeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "stay_current_landscape" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StayCurrentPortraitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "stay_current_portrait" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StayPrimaryLandscapeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "stay_primary_landscape" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StayPrimaryPortraitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "stay_primary_portrait" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StickyNote2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sticky_note_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StopIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "stop" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StopCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "stop_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StopScreenShareIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "stop_screen_share" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StorageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "storage" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StoreIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "store" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StoreMallDirectoryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "store_mall_directory" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StorefrontIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "storefront" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StormIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "storm" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StraightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "straight" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StraightenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "straighten" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StreamIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "stream" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StreetviewIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "streetview" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StrikethroughSIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "strikethrough_s" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StrollerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "stroller" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function StyleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "style" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SubdirectoryArrowLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "subdirectory_arrow_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SubdirectoryArrowRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "subdirectory_arrow_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SubjectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "subject" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SubscriptIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "subscript" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SubscriptionsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "subscriptions" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SubtitlesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "subtitles" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SubtitlesOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "subtitles_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SubwayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "subway" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SummarizeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "summarize" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SuperscriptIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "superscript" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SupervisedUserCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "supervised_user_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SupervisorAccountIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "supervisor_account" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SupportIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "support" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SupportAgentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "support_agent" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SurfingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "surfing" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SurroundSoundIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "surround_sound" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwapCallsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swap_calls" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwapHorizIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swap_horiz" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwapHorizontalCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swap_horizontal_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwapVertIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swap_vert" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwapVertCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swap_vert_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwapVerticalCircleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swap_vertical_circle" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwipeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swipe" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwipeDownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swipe_down" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwipeDownAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swipe_down_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwipeLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swipe_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwipeLeftAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swipe_left_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwipeRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swipe_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwipeRightAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swipe_right_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwipeUpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swipe_up" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwipeUpAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swipe_up_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwipeVerticalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "swipe_vertical" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwitchAccessShortcutIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "switch_access_shortcut" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwitchAccessShortcutAddIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "switch_access_shortcut_add" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwitchAccountIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "switch_account" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwitchCameraIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "switch_camera" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwitchLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "switch_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwitchRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "switch_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SwitchVideoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "switch_video" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SynagogueIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "synagogue" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SyncIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sync" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SyncAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sync_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SyncDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sync_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SyncLockIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sync_lock" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SyncProblemIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "sync_problem" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SystemSecurityUpdateIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "system_security_update" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SystemSecurityUpdateGoodIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "system_security_update_good" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SystemSecurityUpdateWarningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "system_security_update_warning" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SystemUpdateIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "system_update" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SystemUpdateAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "system_update_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function SystemUpdateTvIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "system_update_tv" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TabIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tab" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TabUnselectedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tab_unselected" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TableBarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "table_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TableChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "table_chart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TableRestaurantIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "table_restaurant" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TableRowsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "table_rows" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TableViewIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "table_view" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TabletIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tablet" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TabletAndroidIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tablet_android" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TabletMacIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tablet_mac" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TagIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tag" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TagFacesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tag_faces" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TakeoutDiningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "takeout_dining" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TapAndPlayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tap_and_play" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TapasIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tapas" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TaskIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "task" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TaskAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "task_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TaxiAlertIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "taxi_alert" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TelegramIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "telegram" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TempleBuddhistIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "temple_buddhist" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TempleHinduIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "temple_hindu" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TerminalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "terminal" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TerrainIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "terrain" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TextDecreaseIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "text_decrease" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TextFieldsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "text_fields" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TextFormatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "text_format" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TextIncreaseIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "text_increase" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TextRotateUpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "text_rotate_up" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TextRotateVerticalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "text_rotate_vertical" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TextRotationAngledownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "text_rotation_angledown" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TextRotationAngleupIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "text_rotation_angleup" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TextRotationDownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "text_rotation_down" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TextRotationNoneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "text_rotation_none" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TextSnippetIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "text_snippet" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TextsmsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "textsms" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TextureIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "texture" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TheaterComedyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "theater_comedy" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TheatersIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "theaters" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ThermostatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "thermostat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ThermostatAutoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "thermostat_auto" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ThumbDownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "thumb_down" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ThumbDownAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "thumb_down_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ThumbDownOffAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "thumb_down_off_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ThumbUpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "thumb_up" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ThumbUpAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "thumb_up_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ThumbUpOffAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "thumb_up_off_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ThumbsUpDownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "thumbs_up_down" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ThunderstormIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "thunderstorm" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TiktokIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tiktok" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TimeToLeaveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "time_to_leave" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TimelapseIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "timelapse" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TimelineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "timeline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TimerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "timer" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Timer10Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "timer_10" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Timer10SelectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "timer_10_select" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Timer3Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "timer_3" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Timer3SelectIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "timer_3_select" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TimerOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "timer_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TipsAndUpdatesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tips_and_updates" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TireRepairIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tire_repair" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TitleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "title" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TocIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "toc" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TodayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "today" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ToggleOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "toggle_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ToggleOnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "toggle_on" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TokenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "token" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TollIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "toll" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TonalityIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tonality" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TopicIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "topic" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TornadoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tornado" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TouchAppIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "touch_app" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TourIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tour" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ToysIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "toys" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TrackChangesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "track_changes" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TrafficIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "traffic" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TrainIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "train" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TramIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tram" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TranscribeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "transcribe" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TransferWithinAStationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "transfer_within_a_station" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TransformIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "transform" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TransgenderIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "transgender" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TransitEnterexitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "transit_enterexit" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TranslateIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "translate" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TravelExploreIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "travel_explore" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TrendingDownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "trending_down" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TrendingFlatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "trending_flat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TrendingNeutralIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "trending_neutral" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TrendingUpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "trending_up" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TripOriginIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "trip_origin" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TroubleshootIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "troubleshoot" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "try" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TsunamiIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tsunami" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TtyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tty" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TuneIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tune" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TungstenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tungsten" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TurnLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "turn_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TurnRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "turn_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TurnSharpLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "turn_sharp_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TurnSharpRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "turn_sharp_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TurnSlightLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "turn_slight_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TurnSlightRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "turn_slight_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TurnedInIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "turned_in" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TurnedInNotIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "turned_in_not" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TvIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tv" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TvOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "tv_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TwoWheelerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "two_wheeler" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function TypeSpecimenIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "type_specimen" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UTurnLeftIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "u_turn_left" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UTurnRightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "u_turn_right" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UmbrellaIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "umbrella" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UnarchiveIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "unarchive" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UndoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "undo" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UnfoldLessIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "unfold_less" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UnfoldLessDoubleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "unfold_less_double" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UnfoldMoreIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "unfold_more" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UnfoldMoreDoubleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "unfold_more_double" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UnpublishedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "unpublished" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UnsubscribeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "unsubscribe" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UpcomingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "upcoming" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UpdateIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "update" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UpdateDisabledIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "update_disabled" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UpgradeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "upgrade" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UploadIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "upload" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UploadFileIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "upload_file" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UsbIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "usb" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function UsbOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "usb_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VaccinesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vaccines" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VapeFreeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vape_free" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VapingRoomsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vaping_rooms" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VerifiedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "verified" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VerifiedUserIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "verified_user" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VerticalAlignBottomIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vertical_align_bottom" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VerticalAlignCenterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vertical_align_center" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VerticalAlignTopIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vertical_align_top" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VerticalDistributeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vertical_distribute" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VerticalShadesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vertical_shades" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VerticalShadesClosedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vertical_shades_closed" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VerticalSplitIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vertical_split" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VibrationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vibration" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VideoCallIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "video_call" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VideoCameraBackIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "video_camera_back" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VideoCameraFrontIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "video_camera_front" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VideoChatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "video_chat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VideoCollectionIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "video_collection" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VideoFileIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "video_file" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VideoLabelIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "video_label" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VideoLibraryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "video_library" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VideoSettingsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "video_settings" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VideoStableIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "video_stable" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VideocamIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "videocam" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VideocamOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "videocam_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VideogameAssetIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "videogame_asset" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VideogameAssetOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "videogame_asset_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewAgendaIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_agenda" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewArrayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_array" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewCarouselIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_carousel" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewColumnIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_column" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewComfortableIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_comfortable" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewComfyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_comfy" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewComfyAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_comfy_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewCompactIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_compact" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewCompactAltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_compact_alt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewCozyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_cozy" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewDayIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_day" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewHeadlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_headline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewInArIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_in_ar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewKanbanIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_kanban" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewListIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_list" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewModuleIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_module" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewQuiltIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_quilt" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewSidebarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_sidebar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewStreamIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_stream" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewTimelineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_timeline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ViewWeekIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "view_week" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VignetteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vignette" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VillaIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "villa" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VisibilityIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "visibility" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VisibilityOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "visibility_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VoiceChatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "voice_chat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VoiceOverOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "voice_over_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VoicemailIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "voicemail" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VolcanoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "volcano" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VolumeDownIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "volume_down" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VolumeMuteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "volume_mute" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VolumeOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "volume_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VolumeUpIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "volume_up" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VolunteerActivismIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "volunteer_activism" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VpnKeyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vpn_key" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VpnKeyOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vpn_key_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VpnLockIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vpn_lock" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function VrpanoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "vrpano" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WalletIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wallet" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WalletGiftcardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wallet_giftcard" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WalletMembershipIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wallet_membership" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WalletTravelIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wallet_travel" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WallpaperIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wallpaper" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WarehouseIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "warehouse" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WarningIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "warning" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WarningAmberIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "warning_amber" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WashIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wash" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WatchIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "watch" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WatchLaterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "watch_later" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WatchOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "watch_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WaterIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "water" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WaterDamageIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "water_damage" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WaterDropIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "water_drop" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WaterfallChartIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "waterfall_chart" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WavesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "waves" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WavingHandIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "waving_hand" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WbAutoIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wb_auto" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WbCloudyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wb_cloudy" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WbIncandescentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wb_incandescent" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WbIridescentIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wb_iridescent" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WbShadeIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wb_shade" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WbSunnyIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wb_sunny" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WbTwilightIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wb_twilight" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WcIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wc" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WebIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "web" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WebAssetIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "web_asset" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WebAssetOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "web_asset_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WebStoriesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "web_stories" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WebhookIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "webhook" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WechatIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wechat" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WeekendIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "weekend" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WestIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "west" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WhatshotIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "whatshot" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WheelchairPickupIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wheelchair_pickup" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WhereToVoteIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "where_to_vote" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WidgetsIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "widgets" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WidthFullIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "width_full" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WidthNormalIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "width_normal" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WidthWideIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "width_wide" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WifiIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Wifi1BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi_1_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Wifi2BarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi_2_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WifiCallingIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi_calling" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WifiCalling3Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi_calling_3" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WifiChannelIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi_channel" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WifiFindIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi_find" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WifiLockIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi_lock" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WifiOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WifiPasswordIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi_password" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WifiProtectedSetupIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi_protected_setup" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WifiTetheringIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi_tethering" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WifiTetheringErrorIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi_tethering_error" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WifiTetheringErrorRoundedIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi_tethering_error_rounded" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WifiTetheringOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wifi_tethering_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WindPowerIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wind_power" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WindowIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "window" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WineBarIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wine_bar" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WomanIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "woman" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function Woman2Icon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "woman_2" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WooCommerceIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "woo_commerce" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WordpressIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wordpress" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WorkIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "work" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WorkHistoryIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "work_history" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WorkOffIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "work_off" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WorkOutlineIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "work_outline" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WorkspacePremiumIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "workspace_premium" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WorkspacesIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "workspaces" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WrapTextIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wrap_text" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WrongLocationIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wrong_location" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function WysiwygIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "wysiwyg" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function YardIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "yard" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function YoutubeSearchedForIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "youtube_searched_for" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ZoomInIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "zoom_in" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ZoomInMapIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "zoom_in_map" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ZoomOutIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "zoom_out" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
function ZoomOutMapIcon(props) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($[0] !== props) {
    t0 = (0, import_jsx_runtime29.jsx)(Icon2, { ...props, iconKey: "zoom_out_map" });
    $[0] = props;
    $[1] = t0;
  } else {
    t0 = $[1];
  }
  return t0;
}
var sizeClasses$1 = {
  large: "w-6 h-6 rounded flex items-center justify-center",
  medium: "w-5 h-5 rounded flex items-center justify-center",
  small: "w-4 h-4 rounded flex items-center justify-center",
  smallest: "w-4 h-4 rounded flex items-center justify-center"
};
var outerSizeClasses = {
  medium: "w-10 h-10",
  small: "w-8 h-8",
  large: "w-12 h-12 ",
  smallest: "w-6 h-6"
};
var paddingClasses = {
  medium: "p-2",
  small: "p-2",
  large: "p-2",
  smallest: ""
};
var colorClasses$2 = {
  primary: "bg-primary",
  secondary: "bg-secondary"
};
var Checkbox2 = (t0) => {
  const $ = (0, import_react_compiler_runtime.c)(25);
  const {
    id,
    checked,
    indeterminate: t1,
    padding: t2,
    disabled,
    size: t3,
    onCheckedChange,
    color: t4
  } = t0;
  const indeterminate = t1 === void 0 ? false : t1;
  const padding = t2 === void 0 ? true : t2;
  const size4 = t3 === void 0 ? "medium" : t3;
  const color = t4 === void 0 ? "primary" : t4;
  const isChecked = indeterminate ? false : checked;
  const iconSize = size4 === "medium" ? 20 : size4 === "small" ? 16 : size4 === "smallest" ? 14 : 24;
  const t5 = indeterminate || isChecked;
  const t6 = disabled ? void 0 : onCheckedChange;
  const t7 = padding ? paddingClasses[size4] : "";
  const t8 = outerSizeClasses[size4];
  const t9 = onCheckedChange ? "rounded-full hover:bg-surface-accent-200 hover:bg-opacity-75 dark:hover:bg-surface-accent-700 dark:hover:bg-opacity-75" : "";
  const t10 = onCheckedChange ? "cursor-pointer" : "cursor-default";
  let t11;
  if ($[0] !== t10 || $[1] !== t7 || $[2] !== t8 || $[3] !== t9) {
    t11 = cls(t7, t8, "inline-flex items-center justify-center text-sm font-medium focus:outline-none transition-colors ease-in-out duration-150", t9, t10);
    $[0] = t10;
    $[1] = t7;
    $[2] = t8;
    $[3] = t9;
    $[4] = t11;
  } else {
    t11 = $[4];
  }
  const t12 = sizeClasses$1[size4];
  const t13 = disabled ? indeterminate || isChecked ? "bg-surface-accent-400 dark:bg-surface-accent-600" : "bg-surface-accent-400 dark:bg-surface-accent-600" : indeterminate || isChecked ? colorClasses$2[color] : "bg-white dark:bg-surface-900";
  const t14 = indeterminate || isChecked ? "text-surface-accent-100 dark:text-surface-accent-900" : "";
  const t15 = disabled ? "border-transparent" : indeterminate || isChecked ? "border-transparent" : "border-surface-accent-800 dark:border-surface-accent-200";
  let t16;
  if ($[5] !== t12 || $[6] !== t13 || $[7] !== t14 || $[8] !== t15) {
    t16 = cls("border-2 relative transition-colors ease-in-out duration-150", t12, t13, t14, t15);
    $[5] = t12;
    $[6] = t13;
    $[7] = t14;
    $[8] = t15;
    $[9] = t16;
  } else {
    t16 = $[9];
  }
  let t17;
  if ($[10] !== iconSize || $[11] !== indeterminate) {
    t17 = (0, import_jsx_runtime29.jsx)(CheckboxIndicator, { asChild: true, children: indeterminate ? (0, import_jsx_runtime29.jsx)(RemoveIcon, { size: iconSize, className: "absolute" }) : (0, import_jsx_runtime29.jsx)(CheckIcon, { size: iconSize, className: "absolute" }) });
    $[10] = iconSize;
    $[11] = indeterminate;
    $[12] = t17;
  } else {
    t17 = $[12];
  }
  let t18;
  if ($[13] !== t16 || $[14] !== t17) {
    t18 = (0, import_jsx_runtime29.jsx)("div", { className: t16, children: t17 });
    $[13] = t16;
    $[14] = t17;
    $[15] = t18;
  } else {
    t18 = $[15];
  }
  let t19;
  if ($[16] !== t11 || $[17] !== t18) {
    t19 = (0, import_jsx_runtime29.jsx)("div", { className: t11, children: t18 });
    $[16] = t11;
    $[17] = t18;
    $[18] = t19;
  } else {
    t19 = $[18];
  }
  let t20;
  if ($[19] !== disabled || $[20] !== id || $[21] !== t19 || $[22] !== t5 || $[23] !== t6) {
    t20 = (0, import_jsx_runtime29.jsx)(Checkbox, { id, checked: t5, disabled, onCheckedChange: t6, children: t19 });
    $[19] = disabled;
    $[20] = id;
    $[21] = t19;
    $[22] = t5;
    $[23] = t6;
    $[24] = t20;
  } else {
    t20 = $[24];
  }
  return t20;
};
var sizeClassNames = {
  small: "px-2 py-0.5 text-sm",
  medium: "px-3 py-1 text-sm",
  large: "px-4 py-1.5 text-sm"
};
function Chip(t0) {
  const $ = (0, import_react_compiler_runtime.c)(18);
  const {
    children,
    colorScheme,
    error: error2,
    onClick,
    icon,
    size: t1,
    className,
    style
  } = t0;
  const size4 = t1 === void 0 ? "large" : t1;
  let t2;
  if ($[0] !== colorScheme) {
    t2 = typeof colorScheme === "string" ? getColorSchemeForKey(colorScheme) : colorScheme;
    $[0] = colorScheme;
    $[1] = t2;
  } else {
    t2 = $[1];
  }
  const usedColorScheme = t2;
  const t3 = onClick ? "cursor-pointer hover:bg-surface-accent-300 hover:dark:bg-surface-accent-700" : "";
  const t4 = sizeClassNames[size4];
  const t5 = error2 || !usedColorScheme ? "bg-surface-accent-200 dark:bg-surface-accent-800 text-surface-accent-800 dark:text-white" : "";
  const t6 = error2 ? "text-red-500 dark:text-red-400" : "";
  let t7;
  if ($[2] !== className || $[3] !== t3 || $[4] !== t4 || $[5] !== t5 || $[6] !== t6) {
    t7 = cls("rounded-lg max-w-full w-max h-fit font-regular inline-flex gap-1", "text-ellipsis", "items-center", t3, t4, t5, t6, className);
    $[2] = className;
    $[3] = t3;
    $[4] = t4;
    $[5] = t5;
    $[6] = t6;
    $[7] = t7;
  } else {
    t7 = $[7];
  }
  const t8 = error2 || !usedColorScheme ? void 0 : usedColorScheme.color;
  const t9 = error2 || !usedColorScheme ? void 0 : usedColorScheme.text;
  let t10;
  if ($[8] !== style || $[9] !== t8 || $[10] !== t9) {
    t10 = {
      backgroundColor: t8,
      color: t9,
      overflow: "hidden",
      ...style
    };
    $[8] = style;
    $[9] = t8;
    $[10] = t9;
    $[11] = t10;
  } else {
    t10 = $[11];
  }
  let t11;
  if ($[12] !== children || $[13] !== icon || $[14] !== onClick || $[15] !== t10 || $[16] !== t7) {
    t11 = (0, import_jsx_runtime29.jsxs)("div", { className: t7, onClick, style: t10, children: [
      children,
      icon
    ] });
    $[12] = children;
    $[13] = icon;
    $[14] = onClick;
    $[15] = t10;
    $[16] = t7;
    $[17] = t11;
  } else {
    t11 = $[17];
  }
  return t11;
}
var buttonClasses = "hover:bg-surface-accent-200 hover:bg-opacity-75 dark:hover:bg-surface-accent-800 hover:scale-105 transition-transform";
var baseClasses = "inline-flex items-center justify-center p-2 text-sm font-medium focus:outline-none transition-colors ease-in-out duration-150";
var colorClasses$1 = "text-surface-accent-600 visited:text-surface-accent-600 dark:text-surface-accent-300 dark:visited:text-surface-300";
var sizeClasses = {
  medium: "w-10 !h-10 min-w-10 min-h-10",
  small: "w-8 !h-8 min-w-8 min-h-8",
  smallest: "w-6 !h-6 min-w-6 min-h-6",
  large: "w-12 !h-12 min-w-12 min-h-12"
};
var shapeClasses = {
  circular: "rounded-full",
  square: "rounded-md"
};
var IconButtonInner = (t0, ref) => {
  const $ = (0, import_react_compiler_runtime.c)(23);
  let children;
  let className;
  let component;
  let disabled;
  let props;
  let t1;
  let t2;
  let t3;
  let toggled;
  if ($[0] !== t0) {
    ({
      children,
      className,
      size: t1,
      variant: t2,
      shape: t3,
      disabled,
      toggled,
      component,
      ...props
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = component;
    $[4] = disabled;
    $[5] = props;
    $[6] = t1;
    $[7] = t2;
    $[8] = t3;
    $[9] = toggled;
  } else {
    children = $[1];
    className = $[2];
    component = $[3];
    disabled = $[4];
    props = $[5];
    t1 = $[6];
    t2 = $[7];
    t3 = $[8];
    toggled = $[9];
  }
  const size4 = t1 === void 0 ? "medium" : t1;
  const variant = t2 === void 0 ? "ghost" : t2;
  const shape = t3 === void 0 ? "circular" : t3;
  const bgClasses = variant === "ghost" ? "bg-transparent" : "bg-surface-accent-200 bg-opacity-50 dark:bg-surface-950 dark:bg-opacity-50";
  const Component = component || "button";
  const t4 = disabled ? "opacity-50 pointer-events-none" : "cursor-pointer";
  const t5 = toggled ? "outline outline-2 outline-primary" : "";
  const t6 = shapeClasses[shape];
  const t7 = sizeClasses[size4];
  let t8;
  if ($[10] !== bgClasses || $[11] !== className || $[12] !== t4 || $[13] !== t5 || $[14] !== t6 || $[15] !== t7) {
    t8 = cls(t4, t5, colorClasses$1, bgClasses, baseClasses, buttonClasses, t6, t7, className);
    $[10] = bgClasses;
    $[11] = className;
    $[12] = t4;
    $[13] = t5;
    $[14] = t6;
    $[15] = t7;
    $[16] = t8;
  } else {
    t8 = $[16];
  }
  let t9;
  if ($[17] !== Component || $[18] !== children || $[19] !== props || $[20] !== ref || $[21] !== t8) {
    t9 = (0, import_jsx_runtime29.jsx)(Component, { type: "button", ref, ...props, className: t8, children });
    $[17] = Component;
    $[18] = children;
    $[19] = props;
    $[20] = ref;
    $[21] = t8;
    $[22] = t9;
  } else {
    t9 = $[22];
  }
  return t9;
};
var IconButton = import_react22.default.forwardRef(IconButtonInner);
var defaultClasses = {
  root: "origin-left transition-transform block whitespace-nowrap overflow-hidden text-overflow-ellipsis max-w-full",
  shrink: "transform translate-y-[2px] scale-75 translate-x-[12px]",
  expanded: "translate-x-[16px] top-0 transform translate-y-[16px] scale-100"
};
var InputLabel = React54.forwardRef(function InputLabel2(inProps, ref) {
  const $ = (0, import_react_compiler_runtime.c)(13);
  let className;
  let other;
  let shrink;
  if ($[0] !== inProps) {
    ({
      shrink,
      className,
      ...other
    } = inProps);
    $[0] = inProps;
    $[1] = className;
    $[2] = other;
    $[3] = shrink;
  } else {
    className = $[1];
    other = $[2];
    shrink = $[3];
  }
  const t0 = !shrink;
  let t1;
  if ($[4] !== className || $[5] !== shrink || $[6] !== t0) {
    const computedClassName = cls(defaultClasses.root, {
      [defaultClasses.shrink]: shrink,
      [defaultClasses.expanded]: t0
    }, className);
    t1 = cls("text-sm font-medium peer-disabled:cursor-not-allowed peer-disabled:opacity-70", defaultBorderMixin, computedClassName);
    $[4] = className;
    $[5] = shrink;
    $[6] = t0;
    $[7] = t1;
  } else {
    t1 = $[7];
  }
  let t2;
  if ($[8] !== other || $[9] !== ref || $[10] !== shrink || $[11] !== t1) {
    t2 = (0, import_jsx_runtime29.jsx)("label", { className: t1, "data-shrink": shrink, ref, ...other });
    $[8] = other;
    $[9] = ref;
    $[10] = shrink;
    $[11] = t1;
    $[12] = t2;
  } else {
    t2 = $[12];
  }
  return t2;
});
var typographyVariants = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  label: "label",
  body1: "p",
  body2: "p",
  inherit: "p",
  caption: "p",
  button: "span"
};
var colorToClasses = {
  inherit: "text-inherit",
  initial: "text-current",
  primary: "text-text-primary dark:text-text-primary-dark",
  secondary: "text-text-secondary dark:text-text-secondary-dark",
  disabled: "text-text-disabled dark:text-text-disabled-dark",
  error: "text-red-600 dark:text-red-500"
};
var gutterBottomClasses = {
  h1: "mb-5",
  h2: "mb-4",
  h3: "mb-4",
  h4: "mb-4",
  h5: "mb-3",
  h6: "mb-3",
  subtitle1: "mb-3",
  subtitle2: "mb-3",
  body1: "mb-3",
  body2: "mb-3",
  inherit: "mb-3",
  caption: "mb-2",
  button: "mb-2",
  label: "mb-2"
};
var variantToClasses = {
  h1: "typography-h1",
  h2: "typography-h2",
  h3: "typography-h3",
  h4: "typography-h4",
  h5: "typography-h5",
  h6: "typography-h6",
  subtitle1: "typography-subtitle1",
  subtitle2: "typography-subtitle2",
  body1: "typography-body1",
  body2: "typography-body2",
  label: "typography-label",
  inherit: "typography-inherit",
  caption: "typography-caption",
  button: "typography-button"
};
function Typography(t0) {
  const $ = (0, import_react_compiler_runtime.c)(29);
  let children;
  let className;
  let component;
  let onClick;
  let other;
  let style;
  let t1;
  let t2;
  let t3;
  let t4;
  let t5;
  let t6;
  let t7;
  if ($[0] !== t0) {
    ({
      align: t1,
      color: t2,
      children,
      className,
      component,
      gutterBottom: t3,
      noWrap: t4,
      paragraph: t5,
      variant: t6,
      variantMapping: t7,
      style,
      onClick,
      ...other
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = component;
    $[4] = onClick;
    $[5] = other;
    $[6] = style;
    $[7] = t1;
    $[8] = t2;
    $[9] = t3;
    $[10] = t4;
    $[11] = t5;
    $[12] = t6;
    $[13] = t7;
  } else {
    children = $[1];
    className = $[2];
    component = $[3];
    onClick = $[4];
    other = $[5];
    style = $[6];
    t1 = $[7];
    t2 = $[8];
    t3 = $[9];
    t4 = $[10];
    t5 = $[11];
    t6 = $[12];
    t7 = $[13];
  }
  const align = t1 === void 0 ? "inherit" : t1;
  const color = t2 === void 0 ? "primary" : t2;
  const gutterBottom = t3 === void 0 ? false : t3;
  const noWrap = t4 === void 0 ? false : t4;
  const paragraph2 = t5 === void 0 ? false : t5;
  const variant = t6 === void 0 ? "body1" : t6;
  const variantMapping = t7 === void 0 ? typographyVariants : t7;
  const Component = component || (paragraph2 ? "p" : variantMapping[variant] || typographyVariants[variant]) || "span";
  const t8 = variantToClasses[variant];
  const t9 = color ? colorToClasses[color] : "";
  const t10 = align !== "inherit" && `text-${align}`;
  const t11 = gutterBottom && gutterBottomClasses[variant];
  const t12 = noWrap && "truncate";
  const t13 = paragraph2 && "mb-3";
  let t14;
  if ($[14] !== className || $[15] !== t10 || $[16] !== t11 || $[17] !== t12 || $[18] !== t13 || $[19] !== t8 || $[20] !== t9) {
    t14 = cls(t8, t9, t10, t11, t12, t13, className);
    $[14] = className;
    $[15] = t10;
    $[16] = t11;
    $[17] = t12;
    $[18] = t13;
    $[19] = t8;
    $[20] = t9;
    $[21] = t14;
  } else {
    t14 = $[21];
  }
  const classes = t14;
  let t15;
  if ($[22] !== Component || $[23] !== children || $[24] !== classes || $[25] !== onClick || $[26] !== other || $[27] !== style) {
    t15 = (0, import_jsx_runtime29.jsx)(Component, { className: classes, onClick, style, ...other, children });
    $[22] = Component;
    $[23] = children;
    $[24] = classes;
    $[25] = onClick;
    $[26] = other;
    $[27] = style;
    $[28] = t15;
  } else {
    t15 = $[28];
  }
  return t15;
}
var DateTimeField = (t0) => {
  const $ = (0, import_react_compiler_runtime.c)(57);
  const {
    value,
    label,
    onChange,
    disabled,
    clearable,
    mode: t1,
    error: error2,
    size: t2,
    className,
    style,
    inputClassName,
    invisible
  } = t0;
  const mode = t1 === void 0 ? "date" : t1;
  const size4 = t2 === void 0 ? "large" : t2;
  const inputRef = (0, import_react22.useRef)(null);
  const [focused, setFocused] = (0, import_react22.useState)(false);
  const invalidValue = value !== void 0 && value !== null && !(value instanceof Date);
  useInjectStyles("DateTimeField", inputStyles);
  let t3;
  if ($[0] !== onChange) {
    t3 = (e) => {
      e.preventDefault();
      onChange == null ? void 0 : onChange(null);
    };
    $[0] = onChange;
    $[1] = t3;
  } else {
    t3 = $[1];
  }
  const handleClear = t3;
  const valueAsInputValue = _temp2$1;
  let t4;
  if ($[2] !== mode || $[3] !== onChange) {
    t4 = (e_0) => {
      const inputValue = e_0.target.value;
      if (!inputValue) {
        onChange == null ? void 0 : onChange(null);
        return;
      }
      let newDate;
      try {
        if (mode === "date_time") {
          const [datePart, timePart] = inputValue.split("T");
          const [year_0, month_0, day_0] = datePart.split("-").map(Number);
          const [hours_0, minutes_0] = timePart.split(":").map(Number);
          newDate = new Date(year_0, month_0 - 1, day_0, hours_0, minutes_0);
        } else {
          const [year_1, month_1, day_1] = inputValue.split("-").map(Number);
          newDate = new Date(year_1, month_1 - 1, day_1);
        }
      } catch (t52) {
        newDate = null;
      }
      onChange == null ? void 0 : onChange(newDate);
    };
    $[2] = mode;
    $[3] = onChange;
    $[4] = t4;
  } else {
    t4 = $[4];
  }
  const handleInputChange = t4;
  let t5;
  if ($[5] === Symbol.for("react.memo_cache_sentinel")) {
    t5 = (0, import_jsx_runtime29.jsx)("style", { children: inputStyles });
    $[5] = t5;
  } else {
    t5 = $[5];
  }
  const t6 = !invisible && fieldBackgroundMixin;
  const t7 = disabled ? fieldBackgroundDisabledMixin : fieldBackgroundHoverMixin;
  const t8 = size4 === "smallest";
  const t9 = size4 === "small";
  const t10 = size4 === "medium";
  const t11 = size4 === "large";
  let t12;
  if ($[6] !== className || $[7] !== t10 || $[8] !== t11 || $[9] !== t6 || $[10] !== t7 || $[11] !== t8 || $[12] !== t9) {
    t12 = cls("rounded-md relative max-w-full", t6, t7, {
      "min-h-[28px]": t8,
      "min-h-[32px]": t9,
      "min-h-[42px]": t10,
      "min-h-[64px]": t11
    }, className);
    $[6] = className;
    $[7] = t10;
    $[8] = t11;
    $[9] = t6;
    $[10] = t7;
    $[11] = t8;
    $[12] = t9;
    $[13] = t12;
  } else {
    t12 = $[13];
  }
  let t13;
  if ($[14] !== disabled) {
    t13 = () => {
      var _a2;
      if (!disabled) {
        (_a2 = inputRef.current) == null ? void 0 : _a2.focus();
      }
    };
    $[14] = disabled;
    $[15] = t13;
  } else {
    t13 = $[15];
  }
  let t14;
  if ($[16] !== disabled || $[17] !== error2 || $[18] !== focused || $[19] !== label) {
    t14 = label && (0, import_jsx_runtime29.jsx)(InputLabel, { className: cls("absolute top-1 pointer-events-none", !error2 ? focused ? "text-primary" : "text-text-secondary dark:text-text-secondary-dark" : "text-red-500 dark:text-red-500", disabled ? "opacity-50" : ""), shrink: true, children: label });
    $[16] = disabled;
    $[17] = error2;
    $[18] = focused;
    $[19] = label;
    $[20] = t14;
  } else {
    t14 = $[20];
  }
  const t15 = mode === "date_time" ? "datetime-local" : "date";
  const t16 = valueAsInputValue(value ?? null, mode);
  let t17;
  let t18;
  if ($[21] === Symbol.for("react.memo_cache_sentinel")) {
    t17 = () => setFocused(true);
    t18 = () => setFocused(false);
    $[21] = t17;
    $[22] = t18;
  } else {
    t17 = $[21];
    t18 = $[22];
  }
  const t19 = clearable ? "pr-14" : "pr-12";
  const t20 = size4 === "smallest";
  const t21 = size4 === "small";
  const t22 = size4 === "medium";
  const t23 = size4 === "large";
  let t24;
  if ($[23] !== disabled || $[24] !== inputClassName || $[25] !== label || $[26] !== t19 || $[27] !== t20 || $[28] !== t21 || $[29] !== t22 || $[30] !== t23) {
    t24 = cls("w-full outline-none bg-transparent leading-normal text-base px-3", t19, "rounded-md", {
      "min-h-[28px]": t20,
      "min-h-[32px]": t21,
      "min-h-[42px]": t22,
      "min-h-[64px]": t23
    }, label ? "pt-8 pb-2" : "py-2", inputClassName, disabled && "border border-transparent outline-none opacity-50 dark:opacity-50 text-surface-accent-600 dark:text-surface-accent-500");
    $[23] = disabled;
    $[24] = inputClassName;
    $[25] = label;
    $[26] = t19;
    $[27] = t20;
    $[28] = t21;
    $[29] = t22;
    $[30] = t23;
    $[31] = t24;
  } else {
    t24 = $[31];
  }
  let t25;
  if ($[32] !== disabled || $[33] !== handleInputChange || $[34] !== t15 || $[35] !== t16 || $[36] !== t24) {
    t25 = (0, import_jsx_runtime29.jsx)("input", { ref: inputRef, type: t15, value: t16, onChange: handleInputChange, onFocus: t17, onBlur: t18, disabled, className: t24 });
    $[32] = disabled;
    $[33] = handleInputChange;
    $[34] = t15;
    $[35] = t16;
    $[36] = t24;
    $[37] = t25;
  } else {
    t25 = $[37];
  }
  let t26;
  if ($[38] === Symbol.for("react.memo_cache_sentinel")) {
    t26 = (e_2) => {
      var _a2;
      e_2.stopPropagation();
      (_a2 = inputRef.current) == null ? void 0 : _a2.showPicker();
    };
    $[38] = t26;
  } else {
    t26 = $[38];
  }
  let t27;
  if ($[39] === Symbol.for("react.memo_cache_sentinel")) {
    t27 = (0, import_jsx_runtime29.jsx)(IconButton, { onClick: t26, className: "absolute right-3 top-1/2 transform -translate-y-1/2 !text-surface-accent-500", children: (0, import_jsx_runtime29.jsx)(CalendarMonthIcon, { color: "disabled" }) });
    $[39] = t27;
  } else {
    t27 = $[39];
  }
  let t28;
  if ($[40] !== clearable || $[41] !== handleClear || $[42] !== value) {
    t28 = clearable && value && (0, import_jsx_runtime29.jsx)(IconButton, { onClick: handleClear, className: "absolute right-14 top-1/2 transform -translate-y-1/2 text-surface-accent-400 ", children: (0, import_jsx_runtime29.jsx)(CloseIcon, {}) });
    $[40] = clearable;
    $[41] = handleClear;
    $[42] = value;
    $[43] = t28;
  } else {
    t28 = $[43];
  }
  let t29;
  if ($[44] !== style || $[45] !== t12 || $[46] !== t13 || $[47] !== t14 || $[48] !== t25 || $[49] !== t28) {
    t29 = (0, import_jsx_runtime29.jsxs)("div", { className: t12, style, onClick: t13, children: [
      t14,
      t25,
      t27,
      t28
    ] });
    $[44] = style;
    $[45] = t12;
    $[46] = t13;
    $[47] = t14;
    $[48] = t25;
    $[49] = t28;
    $[50] = t29;
  } else {
    t29 = $[50];
  }
  let t30;
  if ($[51] !== invalidValue || $[52] !== value) {
    t30 = invalidValue && (0, import_jsx_runtime29.jsxs)("div", { className: "flex items-center m-2", children: [
      (0, import_jsx_runtime29.jsx)(ErrorIcon, { size: "small", color: "error" }),
      (0, import_jsx_runtime29.jsxs)("div", { className: "pl-2", children: [
        (0, import_jsx_runtime29.jsx)(Typography, { variant: "body2", children: "Invalid date value for this field" }),
        (0, import_jsx_runtime29.jsx)(Typography, { variant: "body2", children: `The provided value is: ${JSON.stringify(value)}` })
      ] })
    ] });
    $[51] = invalidValue;
    $[52] = value;
    $[53] = t30;
  } else {
    t30 = $[53];
  }
  let t31;
  if ($[54] !== t29 || $[55] !== t30) {
    t31 = (0, import_jsx_runtime29.jsxs)(import_jsx_runtime29.Fragment, { children: [
      t5,
      t29,
      t30
    ] });
    $[54] = t29;
    $[55] = t30;
    $[56] = t31;
  } else {
    t31 = $[56];
  }
  return t31;
};
var inputStyles = `
    /* Hide the default calendar icon in Chrome, Safari, Edge, Opera */
    input[type="date"]::-webkit-calendar-picker-indicator,
    input[type="datetime-local"]::-webkit-calendar-picker-indicator {
        display: none;
        -webkit-appearance: none;
    }
    /* Hide default calendar icon in Firefox */
    input[type="date"],
    input[type="datetime-local"] {
        -moz-appearance:textfield;
    }
  `;
function _temp$3(n) {
  return n.toString().padStart(2, "0");
}
function _temp2$1(dateValue, mode_0) {
  if (!dateValue) {
    return "";
  }
  const pad = _temp$3;
  const year = dateValue.getFullYear();
  const month = pad(dateValue.getMonth() + 1);
  const day = pad(dateValue.getDate());
  if (mode_0 === "date") {
    return `${year}-${month}-${day}`;
  } else {
    const hours = pad(dateValue.getHours());
    const minutes = pad(dateValue.getMinutes());
    return `${year}-${month}-${day}T${hours}:${minutes}`;
  }
}
var widthClasses = {
  xs: "max-w-xs min-w-xs w-xs",
  sm: "max-w-sm min-w-sm w-sm",
  md: "max-w-md min-w-md w-md",
  lg: "max-w-lg min-w-lg w-lg",
  xl: "max-w-xl min-w-xl w-xl",
  "2xl": "max-w-2xl min-w-2xl w-2xl",
  "3xl": "max-w-3xl min-w-3xl w-3xl",
  "4xl": "max-w-4xl min-w-4xl w-4xl",
  "5xl": "max-w-5xl min-w-5xl w-5xl",
  "6xl": "max-w-6xl min-w-6xl w-6xl",
  "7xl": "max-w-7xl min-w-7xl w-7xl",
  full: "max-w-full min-w-full w-full"
};
var Dialog2 = (t0) => {
  const $ = (0, import_react_compiler_runtime.c)(39);
  const {
    open,
    onOpenChange,
    children,
    className,
    containerClassName,
    fullWidth: t1,
    fullHeight,
    fullScreen,
    scrollable: t2,
    maxWidth: t3,
    modal: t4,
    onOpenAutoFocus,
    onEscapeKeyDown,
    onPointerDownOutside,
    onInteractOutside
  } = t0;
  const fullWidth = t1 === void 0 ? true : t1;
  const scrollable = t2 === void 0 ? true : t2;
  const maxWidth = t3 === void 0 ? "lg" : t3;
  const modal = t4 === void 0 ? true : t4;
  const [displayed, setDisplayed] = (0, import_react22.useState)(false);
  let t5;
  let t6;
  if ($[0] !== open) {
    t5 = () => {
      if (!open) {
        const timeout = setTimeout(() => {
          setDisplayed(false);
        }, 150);
        return () => clearTimeout(timeout);
      } else {
        setDisplayed(true);
        return _temp$2;
      }
    };
    t6 = [open];
    $[0] = open;
    $[1] = t5;
    $[2] = t6;
  } else {
    t5 = $[1];
    t6 = $[2];
  }
  (0, import_react22.useEffect)(t5, t6);
  const t7 = displayed || open;
  let t8;
  if ($[3] !== containerClassName) {
    t8 = cls("fixed inset-0 z-30", containerClassName);
    $[3] = containerClassName;
    $[4] = t8;
  } else {
    t8 = $[4];
  }
  const t9 = displayed && open ? "opacity-100" : "opacity-0";
  let t10;
  if ($[5] !== t9) {
    t10 = cls("fixed inset-0 transition-opacity z-20 ease-in-out duration-200 bg-black bg-opacity-50 dark:bg-opacity-60 backdrop-blur-sm ", t9, "z-20 fixed top-0 left-0 w-full h-full flex justify-center items-center");
    $[5] = t9;
    $[6] = t10;
  } else {
    t10 = $[6];
  }
  const t11 = displayed ? "auto" : "none";
  let t12;
  if ($[7] !== t11) {
    t12 = {
      pointerEvents: t11
    };
    $[7] = t11;
    $[8] = t12;
  } else {
    t12 = $[8];
  }
  let t13;
  if ($[9] !== t10 || $[10] !== t12) {
    t13 = (0, import_jsx_runtime29.jsx)(Overlay, { className: t10, style: t12 });
    $[9] = t10;
    $[10] = t12;
    $[11] = t13;
  } else {
    t13 = $[11];
  }
  let t14;
  if ($[12] === Symbol.for("react.memo_cache_sentinel")) {
    t14 = cls("h-full outline-none flex justify-center items-center z-40 opacity-100 transition-all duration-200 ease-in-out");
    $[12] = t14;
  } else {
    t14 = $[12];
  }
  const t15 = fullWidth && !fullScreen ? "w-11/12" : void 0;
  const t16 = fullHeight && !fullScreen ? "h-full" : void 0;
  const t17 = fullScreen ? "h-screen w-screen" : "max-h-[90vh] shadow-xl";
  const t18 = scrollable && "overflow-y-auto";
  const t19 = displayed && open ? "opacity-100" : "opacity-0";
  const t20 = maxWidth && !fullScreen ? widthClasses[maxWidth] : void 0;
  let t21;
  if ($[13] !== className || $[14] !== t15 || $[15] !== t16 || $[16] !== t17 || $[17] !== t18 || $[18] !== t19 || $[19] !== t20) {
    t21 = cls(paperMixin, "z-30", "relative", "outline-none focus:outline-none", t15, t16, "text-surface-accent-900 dark:text-white", "justify-center items-center", t17, "ease-in-out duration-200", t18, t19, t20, className);
    $[13] = className;
    $[14] = t15;
    $[15] = t16;
    $[16] = t17;
    $[17] = t18;
    $[18] = t19;
    $[19] = t20;
    $[20] = t21;
  } else {
    t21 = $[20];
  }
  let t22;
  if ($[21] !== children || $[22] !== t21) {
    t22 = (0, import_jsx_runtime29.jsx)("div", { className: t21, children });
    $[21] = children;
    $[22] = t21;
    $[23] = t22;
  } else {
    t22 = $[23];
  }
  let t23;
  if ($[24] !== onEscapeKeyDown || $[25] !== onInteractOutside || $[26] !== onOpenAutoFocus || $[27] !== onPointerDownOutside || $[28] !== t22) {
    t23 = (0, import_jsx_runtime29.jsx)(Content2, { onEscapeKeyDown, onOpenAutoFocus, onPointerDownOutside, onInteractOutside, className: t14, children: t22 });
    $[24] = onEscapeKeyDown;
    $[25] = onInteractOutside;
    $[26] = onOpenAutoFocus;
    $[27] = onPointerDownOutside;
    $[28] = t22;
    $[29] = t23;
  } else {
    t23 = $[29];
  }
  let t24;
  if ($[30] !== t13 || $[31] !== t23 || $[32] !== t8) {
    t24 = (0, import_jsx_runtime29.jsx)(Portal2, { children: (0, import_jsx_runtime29.jsxs)("div", { className: t8, children: [
      t13,
      t23
    ] }) });
    $[30] = t13;
    $[31] = t23;
    $[32] = t8;
    $[33] = t24;
  } else {
    t24 = $[33];
  }
  let t25;
  if ($[34] !== modal || $[35] !== onOpenChange || $[36] !== t24 || $[37] !== t7) {
    t25 = (0, import_jsx_runtime29.jsx)(Root3, { open: t7, modal, onOpenChange, children: t24 });
    $[34] = modal;
    $[35] = onOpenChange;
    $[36] = t24;
    $[37] = t7;
    $[38] = t25;
  } else {
    t25 = $[38];
  }
  return t25;
};
function _temp$2() {
}
function DialogActions(t0) {
  const $ = (0, import_react_compiler_runtime.c)(7);
  const {
    children,
    position: t1,
    translucent: t2,
    className
  } = t0;
  const position = t1 === void 0 ? "sticky" : t1;
  const translucent = t2 === void 0 ? true : t2;
  const t3 = translucent ? "backdrop-blur-sm" : "";
  let t4;
  if ($[0] !== className || $[1] !== position || $[2] !== t3) {
    t4 = cls(defaultBorderMixin, "py-3 px-4 border-t flex flex-row items-center justify-end bottom-0 right-0 left-0 text-right z-2 gap-2", position, "bg-white bg-opacity-60 dark:bg-surface-900 dark:bg-opacity-60", t3, className);
    $[0] = className;
    $[1] = position;
    $[2] = t3;
    $[3] = t4;
  } else {
    t4 = $[3];
  }
  let t5;
  if ($[4] !== children || $[5] !== t4) {
    t5 = (0, import_jsx_runtime29.jsx)("div", { className: t4, children });
    $[4] = children;
    $[5] = t4;
    $[6] = t5;
  } else {
    t5 = $[6];
  }
  return t5;
}
function DialogContent2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(8);
  const {
    children,
    className,
    fullHeight,
    includeMargin: t1
  } = t0;
  const includeMargin = t1 === void 0 ? true : t1;
  if (fullHeight) {
    let t22;
    if ($[0] !== children) {
      t22 = (0, import_jsx_runtime29.jsx)("div", { className: "flex-grow flex flex-col h-full relative", children });
      $[0] = children;
      $[1] = t22;
    } else {
      t22 = $[1];
    }
    return t22;
  }
  let t2;
  if ($[2] !== className || $[3] !== includeMargin) {
    t2 = cls("flex-grow", {
      "my-6 mx-6": includeMargin
    }, className);
    $[2] = className;
    $[3] = includeMargin;
    $[4] = t2;
  } else {
    t2 = $[4];
  }
  let t3;
  if ($[5] !== children || $[6] !== t2) {
    t3 = (0, import_jsx_runtime29.jsx)("div", { className: t2, children });
    $[5] = children;
    $[6] = t2;
    $[7] = t3;
  } else {
    t3 = $[7];
  }
  return t3;
}
function DialogTitle2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(19);
  let children;
  let className;
  let hidden;
  let props;
  let t1;
  let t2;
  let t3;
  if ($[0] !== t0) {
    ({
      children,
      hidden,
      className,
      variant: t1,
      gutterBottom: t2,
      includeMargin: t3,
      ...props
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = hidden;
    $[4] = props;
    $[5] = t1;
    $[6] = t2;
    $[7] = t3;
  } else {
    children = $[1];
    className = $[2];
    hidden = $[3];
    props = $[4];
    t1 = $[5];
    t2 = $[6];
    t3 = $[7];
  }
  const variant = t1 === void 0 ? "subtitle2" : t1;
  const gutterBottom = t2 === void 0 ? true : t2;
  const includeMargin = t3 === void 0 ? true : t3;
  let t4;
  if ($[8] !== className || $[9] !== includeMargin) {
    t4 = cls({
      "mt-8 mx-6": includeMargin
    }, className);
    $[8] = className;
    $[9] = includeMargin;
    $[10] = t4;
  } else {
    t4 = $[10];
  }
  let t5;
  if ($[11] !== children || $[12] !== gutterBottom || $[13] !== props || $[14] !== t4 || $[15] !== variant) {
    t5 = (0, import_jsx_runtime29.jsx)(Title, { asChild: true, children: (0, import_jsx_runtime29.jsx)(Typography, { variant, className: t4, gutterBottom, ...props, children }) });
    $[11] = children;
    $[12] = gutterBottom;
    $[13] = props;
    $[14] = t4;
    $[15] = variant;
    $[16] = t5;
  } else {
    t5 = $[16];
  }
  const title = t5;
  if (hidden) {
    let t6;
    if ($[17] !== title) {
      t6 = (0, import_jsx_runtime29.jsx)(Root4, { children: title });
      $[17] = title;
      $[18] = t6;
    } else {
      t6 = $[18];
    }
    return t6;
  }
  return title;
}
function ExpandablePanel(t0) {
  const $ = (0, import_react_compiler_runtime.c)(40);
  const {
    title,
    children,
    invisible: t1,
    expanded,
    onExpandedChange,
    initiallyExpanded: t2,
    titleClassName,
    asField,
    className,
    innerClassName
  } = t0;
  const invisible = t1 === void 0 ? false : t1;
  const initiallyExpanded = t2 === void 0 ? true : t2;
  useInjectStyles("ExpandablePanel", `
.CollapsibleContent {
  overflow: hidden;
}
.CollapsibleContent[data-state='open'] {
  animation: slideDown 220ms ease-out
}
.CollapsibleContent[data-state='closed'] {
  animation: slideUp 220ms ease-out;
}

@keyframes slideDown {
  from {
    height: 0;
  }
  to {
    height: var(--radix-collapsible-content-height);
  }
}

@keyframes slideUp {
  from {
    height: var(--radix-collapsible-content-height);
  }
  to {
    height: 0;
  }
}`);
  const [open, setOpen] = (0, import_react22.useState)(expanded !== void 0 ? expanded : initiallyExpanded);
  const [allowOverflow, setAllowOverflow] = (0, import_react22.useState)(open);
  let t3;
  let t4;
  if ($[0] !== open) {
    t3 = () => {
      if (open) {
        setTimeout(() => {
          setAllowOverflow(true);
        }, 220);
      } else {
        setAllowOverflow(false);
      }
    };
    t4 = [open];
    $[0] = open;
    $[1] = t3;
    $[2] = t4;
  } else {
    t3 = $[1];
    t4 = $[2];
  }
  (0, import_react22.useEffect)(t3, t4);
  let t5;
  let t6;
  if ($[3] !== expanded) {
    t5 = () => {
      if (expanded !== void 0) {
        setOpen(expanded);
      }
    };
    t6 = [expanded];
    $[3] = expanded;
    $[4] = t5;
    $[5] = t6;
  } else {
    t5 = $[4];
    t6 = $[5];
  }
  (0, import_react22.useEffect)(t5, t6);
  const t7 = !invisible && defaultBorderMixin + " border";
  let t8;
  if ($[6] !== className || $[7] !== t7) {
    t8 = cls(t7, "rounded-md", "w-full", className);
    $[6] = className;
    $[7] = t7;
    $[8] = t8;
  } else {
    t8 = $[8];
  }
  let t9;
  if ($[9] !== onExpandedChange) {
    t9 = (updatedOpen) => {
      onExpandedChange == null ? void 0 : onExpandedChange(updatedOpen);
      setOpen(updatedOpen);
    };
    $[9] = onExpandedChange;
    $[10] = t9;
  } else {
    t9 = $[10];
  }
  const t10 = invisible ? "border-b px-2" : "p-4";
  const t11 = open ? "py-6" : "py-4";
  const t12 = invisible && defaultBorderMixin;
  const t13 = asField && fieldBackgroundMixin;
  let t14;
  if ($[11] !== t10 || $[12] !== t11 || $[13] !== t12 || $[14] !== t13 || $[15] !== titleClassName) {
    t14 = cls("rounded-t flex items-center justify-between w-full min-h-[52px]", "hover:bg-surface-accent-200 hover:bg-opacity-20 dark:hover:bg-surface-800 dark:hover:bg-opacity-20", t10, t11, "transition-all duration-200", t12, t13, titleClassName);
    $[11] = t10;
    $[12] = t11;
    $[13] = t12;
    $[14] = t13;
    $[15] = titleClassName;
    $[16] = t14;
  } else {
    t14 = $[16];
  }
  const t15 = open ? "rotate-180" : "";
  let t16;
  if ($[17] !== t15) {
    t16 = cls("transition", t15);
    $[17] = t15;
    $[18] = t16;
  } else {
    t16 = $[18];
  }
  let t17;
  if ($[19] !== t16) {
    t17 = (0, import_jsx_runtime29.jsx)(KeyboardArrowDownIcon, { className: t16 });
    $[19] = t16;
    $[20] = t17;
  } else {
    t17 = $[20];
  }
  let t18;
  if ($[21] !== t14 || $[22] !== t17 || $[23] !== title) {
    t18 = (0, import_jsx_runtime29.jsxs)(Trigger, { className: t14, children: [
      title,
      t17
    ] });
    $[21] = t14;
    $[22] = t17;
    $[23] = title;
    $[24] = t18;
  } else {
    t18 = $[24];
  }
  let t19;
  if ($[25] === Symbol.for("react.memo_cache_sentinel")) {
    t19 = cls("CollapsibleContent");
    $[25] = t19;
  } else {
    t19 = $[25];
  }
  const t20 = allowOverflow ? "visible" : "hidden";
  let t21;
  if ($[26] !== t20) {
    t21 = {
      overflow: t20
    };
    $[26] = t20;
    $[27] = t21;
  } else {
    t21 = $[27];
  }
  let t22;
  if ($[28] !== children || $[29] !== innerClassName) {
    t22 = (0, import_jsx_runtime29.jsx)("div", { className: innerClassName, children });
    $[28] = children;
    $[29] = innerClassName;
    $[30] = t22;
  } else {
    t22 = $[30];
  }
  let t23;
  if ($[31] !== t21 || $[32] !== t22) {
    t23 = (0, import_jsx_runtime29.jsx)(Content, { className: t19, style: t21, children: t22 });
    $[31] = t21;
    $[32] = t22;
    $[33] = t23;
  } else {
    t23 = $[33];
  }
  let t24;
  if ($[34] !== open || $[35] !== t18 || $[36] !== t23 || $[37] !== t8 || $[38] !== t9) {
    t24 = (0, import_jsx_runtime29.jsx)(import_jsx_runtime29.Fragment, { children: (0, import_jsx_runtime29.jsxs)(Root, { className: t8, open, onOpenChange: t9, children: [
      t18,
      t23
    ] }) });
    $[34] = open;
    $[35] = t18;
    $[36] = t23;
    $[37] = t8;
    $[38] = t9;
    $[39] = t24;
  } else {
    t24 = $[39];
  }
  return t24;
}
function FileUpload(t0) {
  const $ = (0, import_react_compiler_runtime.c)(32);
  const {
    accept,
    onFilesAdded,
    onFilesRejected,
    maxSize,
    disabled,
    maxFiles,
    title,
    uploadDescription,
    children,
    preventDropOnDocument: t1,
    size: size4
  } = t0;
  const preventDropOnDocument = t1 === void 0 ? true : t1;
  let t2;
  if ($[0] !== accept || $[1] !== disabled || $[2] !== maxFiles || $[3] !== maxSize || $[4] !== onFilesAdded || $[5] !== onFilesRejected || $[6] !== preventDropOnDocument) {
    t2 = {
      accept,
      noDragEventsBubbling: true,
      maxSize,
      onDrop: onFilesAdded,
      onDropRejected: onFilesRejected,
      disabled,
      maxFiles,
      preventDropOnDocument
    };
    $[0] = accept;
    $[1] = disabled;
    $[2] = maxFiles;
    $[3] = maxSize;
    $[4] = onFilesAdded;
    $[5] = onFilesRejected;
    $[6] = preventDropOnDocument;
    $[7] = t2;
  } else {
    t2 = $[7];
  }
  const {
    getRootProps,
    getInputProps,
    isDragActive,
    isDragAccept,
    isDragReject
  } = useDropzone(t2);
  let t3;
  if ($[8] !== getRootProps) {
    t3 = getRootProps();
    $[8] = getRootProps;
    $[9] = t3;
  } else {
    t3 = $[9];
  }
  const t4 = size4 === "large";
  const t5 = size4 === "medium";
  const t6 = !disabled;
  const t7 = !isDragActive;
  let t8;
  if ($[10] !== isDragAccept || $[11] !== isDragReject || $[12] !== t4 || $[13] !== t5 || $[14] !== t6 || $[15] !== t7) {
    t8 = cls(fieldBackgroundMixin, "flex gap-2", "p-4 box-border relative items-center border-2 border-solid border-transparent outline-none rounded-md duration-200 ease-[cubic-bezier(0.4,0,0.2,1)] focus:border-primary-solid", {
      "h-44": t4,
      "h-28": t5,
      "cursor-pointer": t6,
      [fieldBackgroundHoverMixin]: t7,
      "transition-colors duration-200 ease-[cubic-bezier(0,0,0.2,1)] border-red-500": isDragReject,
      "transition-colors duration-200 ease-[cubic-bezier(0,0,0.2,1)] border-green-500": isDragAccept
    });
    $[10] = isDragAccept;
    $[11] = isDragReject;
    $[12] = t4;
    $[13] = t5;
    $[14] = t6;
    $[15] = t7;
    $[16] = t8;
  } else {
    t8 = $[16];
  }
  let t9;
  if ($[17] !== title) {
    t9 = (0, import_jsx_runtime29.jsx)(Typography, { variant: "caption", color: "secondary", className: "absolute top-2 left-3.5 cursor-inherit", children: title });
    $[17] = title;
    $[18] = t9;
  } else {
    t9 = $[18];
  }
  let t10;
  if ($[19] !== getInputProps) {
    t10 = getInputProps();
    $[19] = getInputProps;
    $[20] = t10;
  } else {
    t10 = $[20];
  }
  let t11;
  if ($[21] !== t10) {
    t11 = (0, import_jsx_runtime29.jsx)("input", { ...t10 });
    $[21] = t10;
    $[22] = t11;
  } else {
    t11 = $[22];
  }
  let t12;
  if ($[23] !== uploadDescription) {
    t12 = (0, import_jsx_runtime29.jsx)("div", { className: "flex-grow h-28 box-border flex flex-col items-center justify-center text-center", children: (0, import_jsx_runtime29.jsx)(Typography, { align: "center", variant: "label", className: "flex flex-row gap-2 justify-center", children: uploadDescription }) });
    $[23] = uploadDescription;
    $[24] = t12;
  } else {
    t12 = $[24];
  }
  let t13;
  if ($[25] !== children || $[26] !== t11 || $[27] !== t12 || $[28] !== t3 || $[29] !== t8 || $[30] !== t9) {
    t13 = (0, import_jsx_runtime29.jsxs)("div", { ...t3, className: t8, children: [
      t9,
      t11,
      children,
      t12
    ] });
    $[25] = children;
    $[26] = t11;
    $[27] = t12;
    $[28] = t3;
    $[29] = t8;
    $[30] = t9;
    $[31] = t13;
  } else {
    t13 = $[31];
  }
  return t13;
}
var colorClasses = {
  info: "bg-sky-200 dark:bg-teal-900",
  warn: "bg-orange-200 dark:bg-yellow-950"
};
function InfoLabel(t0) {
  const $ = (0, import_react_compiler_runtime.c)(5);
  const {
    children,
    mode: t1
  } = t0;
  const mode = t1 === void 0 ? "info" : t1;
  const t2 = colorClasses[mode];
  let t3;
  if ($[0] !== t2) {
    t3 = cls("my-3 py-2 px-4 rounded", t2);
    $[0] = t2;
    $[1] = t3;
  } else {
    t3 = $[1];
  }
  let t4;
  if ($[2] !== children || $[3] !== t3) {
    t4 = (0, import_jsx_runtime29.jsx)("div", { className: t3, children });
    $[2] = children;
    $[3] = t3;
    $[4] = t4;
  } else {
    t4 = $[4];
  }
  return t4;
}
var Label3 = React54.forwardRef((t0, ref) => {
  const $ = (0, import_react_compiler_runtime.c)(14);
  let border;
  let className;
  let onClick;
  let props;
  if ($[0] !== t0) {
    ({
      className,
      border,
      onClick,
      ...props
    } = t0);
    $[0] = t0;
    $[1] = border;
    $[2] = className;
    $[3] = onClick;
    $[4] = props;
  } else {
    border = $[1];
    className = $[2];
    onClick = $[3];
    props = $[4];
  }
  const t1 = border && "border border-surface-300 dark:border-surface-700 rounded-md px-3 py-1.5";
  const t2 = onClick && "hover:cursor-pointer hover:bg-surface-200 dark:hover:bg-surface-800";
  let t3;
  if ($[5] !== className || $[6] !== t1 || $[7] !== t2) {
    t3 = cls("text-sm font-medium peer-disabled:cursor-not-allowed peer-disabled:opacity-70", t1, t2, defaultBorderMixin, className);
    $[5] = className;
    $[6] = t1;
    $[7] = t2;
    $[8] = t3;
  } else {
    t3 = $[8];
  }
  let t4;
  if ($[9] !== onClick || $[10] !== props || $[11] !== ref || $[12] !== t3) {
    t4 = (0, import_jsx_runtime29.jsx)(Root5, { ref, onClick, className: t3, ...props });
    $[9] = onClick;
    $[10] = props;
    $[11] = ref;
    $[12] = t3;
    $[13] = t4;
  } else {
    t4 = $[13];
  }
  return t4;
});
Label3.displayName = Root5.displayName;
function LoadingButton(t0) {
  const $ = (0, import_react_compiler_runtime.c)(17);
  let children;
  let disabled;
  let loading;
  let onClick;
  let props;
  let startIcon;
  if ($[0] !== t0) {
    ({
      children,
      loading,
      disabled,
      onClick,
      startIcon,
      ...props
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = disabled;
    $[3] = loading;
    $[4] = onClick;
    $[5] = props;
    $[6] = startIcon;
  } else {
    children = $[1];
    disabled = $[2];
    loading = $[3];
    onClick = $[4];
    props = $[5];
    startIcon = $[6];
  }
  const t1 = loading || disabled;
  const t2 = props.component;
  let t3;
  if ($[7] !== loading) {
    t3 = loading && (0, import_jsx_runtime29.jsx)(CircularProgress, { size: "small" });
    $[7] = loading;
    $[8] = t3;
  } else {
    t3 = $[8];
  }
  const t4 = !loading && startIcon;
  let t5;
  if ($[9] !== children || $[10] !== onClick || $[11] !== props || $[12] !== t1 || $[13] !== t2 || $[14] !== t3 || $[15] !== t4) {
    t5 = (0, import_jsx_runtime29.jsxs)(Button, { disabled: t1, onClick, component: t2, ...props, children: [
      t3,
      t4,
      children
    ] });
    $[9] = children;
    $[10] = onClick;
    $[11] = props;
    $[12] = t1;
    $[13] = t2;
    $[14] = t3;
    $[15] = t4;
    $[16] = t5;
  } else {
    t5 = $[16];
  }
  return t5;
}
var proseClasses = {
  small: "prose-sm typography-body2",
  medium: "prose typography-body1",
  large: "prose-lg",
  xl: "prose-xl",
  "2xl": "prose-2xl"
};
var md = new lib_default({
  html: true
});
var Markdown = import_react22.default.memo(function Markdown2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(10);
  const {
    source,
    className,
    size: t1
  } = t0;
  const size4 = t1 === void 0 ? "medium" : t1;
  let t2;
  let t3;
  if ($[0] !== source) {
    t3 = md.render(typeof source === "string" ? source : "");
    $[0] = source;
    $[1] = t3;
  } else {
    t3 = $[1];
  }
  t2 = t3;
  const html = t2;
  const t4 = proseClasses[size4];
  let t5;
  if ($[2] !== className || $[3] !== t4) {
    t5 = cls(t4, "dark:prose-invert prose-headings:font-title", className);
    $[2] = className;
    $[3] = t4;
    $[4] = t5;
  } else {
    t5 = $[4];
  }
  let t6;
  if ($[5] !== html) {
    t6 = {
      __html: html
    };
    $[5] = html;
    $[6] = t6;
  } else {
    t6 = $[6];
  }
  let t7;
  if ($[7] !== t5 || $[8] !== t6) {
    t7 = (0, import_jsx_runtime29.jsx)("div", { className: t5, dangerouslySetInnerHTML: t6 });
    $[7] = t5;
    $[8] = t6;
    $[9] = t7;
  } else {
    t7 = $[9];
  }
  return t7;
}, import_react_fast_compare.default);
var Menu3 = import_react22.default.forwardRef((t0, ref) => {
  const $ = (0, import_react_compiler_runtime.c)(20);
  const {
    children,
    trigger,
    open,
    defaultOpen,
    side,
    align,
    onOpenChange,
    portalContainer,
    sideOffset: t1,
    className
  } = t0;
  const sideOffset = t1 === void 0 ? 4 : t1;
  let t2;
  if ($[0] !== ref || $[1] !== trigger) {
    t2 = (0, import_jsx_runtime29.jsx)(Trigger2, { ref, asChild: true, children: trigger });
    $[0] = ref;
    $[1] = trigger;
    $[2] = t2;
  } else {
    t2 = $[2];
  }
  let t3;
  if ($[3] !== className) {
    t3 = cls(paperMixin, focusedDisabled, "shadow py-2 z-30", className);
    $[3] = className;
    $[4] = t3;
  } else {
    t3 = $[4];
  }
  let t4;
  if ($[5] !== align || $[6] !== children || $[7] !== side || $[8] !== sideOffset || $[9] !== t3) {
    t4 = (0, import_jsx_runtime29.jsx)(Content23, { side, sideOffset, align, className: t3, children });
    $[5] = align;
    $[6] = children;
    $[7] = side;
    $[8] = sideOffset;
    $[9] = t3;
    $[10] = t4;
  } else {
    t4 = $[10];
  }
  let t5;
  if ($[11] !== portalContainer || $[12] !== t4) {
    t5 = (0, import_jsx_runtime29.jsx)(Portal22, { container: portalContainer, children: t4 });
    $[11] = portalContainer;
    $[12] = t4;
    $[13] = t5;
  } else {
    t5 = $[13];
  }
  let t6;
  if ($[14] !== defaultOpen || $[15] !== onOpenChange || $[16] !== open || $[17] !== t2 || $[18] !== t5) {
    t6 = (0, import_jsx_runtime29.jsxs)(Root23, { open, defaultOpen, onOpenChange, children: [
      t2,
      t5
    ] });
    $[14] = defaultOpen;
    $[15] = onOpenChange;
    $[16] = open;
    $[17] = t2;
    $[18] = t5;
    $[19] = t6;
  } else {
    t6 = $[19];
  }
  return t6;
});
Menu3.displayName = "Menu";
function MenuItem2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(8);
  const {
    children,
    dense: t1,
    onClick,
    className
  } = t0;
  const dense = t1 === void 0 ? false : t1;
  const t2 = onClick && "cursor-pointer";
  const t3 = dense ? "px-3 py-1.5" : "px-4 py-2";
  let t4;
  if ($[0] !== className || $[1] !== t2 || $[2] !== t3) {
    t4 = cls(t2, "rounded-md text-sm font-medium text-surface-accent-700 dark:text-surface-accent-300 hover:bg-surface-accent-100 dark:hover:bg-surface-accent-900 flex items-center gap-4", t3, className);
    $[0] = className;
    $[1] = t2;
    $[2] = t3;
    $[3] = t4;
  } else {
    t4 = $[3];
  }
  const classNames = t4;
  let t5;
  if ($[4] !== children || $[5] !== classNames || $[6] !== onClick) {
    t5 = (0, import_jsx_runtime29.jsx)(Item22, { className: classNames, onClick, children });
    $[4] = children;
    $[5] = classNames;
    $[6] = onClick;
    $[7] = t5;
  } else {
    t5 = $[7];
  }
  return t5;
}
function Menubar2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(6);
  const {
    children,
    onSelect,
    className
  } = t0;
  let t1;
  if ($[0] !== className) {
    t1 = cls("z-10 flex bg-white dark:bg-surface-950 p-[3px] rounded-sm shadow-sm", className);
    $[0] = className;
    $[1] = t1;
  } else {
    t1 = $[1];
  }
  let t2;
  if ($[2] !== children || $[3] !== onSelect || $[4] !== t1) {
    t2 = (0, import_jsx_runtime29.jsx)(Root33, { onSelect, className: t1, children });
    $[2] = children;
    $[3] = onSelect;
    $[4] = t1;
    $[5] = t2;
  } else {
    t2 = $[5];
  }
  return t2;
}
function MenubarMenu2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  const {
    children
  } = t0;
  let t1;
  if ($[0] !== children) {
    t1 = (0, import_jsx_runtime29.jsx)(Menu2, { children });
    $[0] = children;
    $[1] = t1;
  } else {
    t1 = $[1];
  }
  return t1;
}
function MenubarTrigger2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(6);
  const {
    children,
    onSelect,
    className
  } = t0;
  let t1;
  if ($[0] !== className) {
    t1 = cls("py-2 px-3 outline-none select-none font-medium leading-none rounded text-text-primary dark:text-text-primary-dark text-[13px] flex items-center justify-between gap-[2px] data-[highlighted]:bg-surface-accent-100 data-[highlighted]:dark:bg-surface-800 data-[state=open]:bg-surface-accent-100 data-[state=open]:dark:bg-surface-800 hover:bg-surface-accent-200 hover:bg-opacity-75 dark:hover:bg-surface-accent-800", className);
    $[0] = className;
    $[1] = t1;
  } else {
    t1 = $[1];
  }
  let t2;
  if ($[2] !== children || $[3] !== onSelect || $[4] !== t1) {
    t2 = (0, import_jsx_runtime29.jsx)(Trigger3, { onSelect, className: t1, children });
    $[2] = children;
    $[3] = onSelect;
    $[4] = t1;
    $[5] = t2;
  } else {
    t2 = $[5];
  }
  return t2;
}
function MenubarPortal2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(2);
  const {
    children
  } = t0;
  let t1;
  if ($[0] !== children) {
    t1 = (0, import_jsx_runtime29.jsx)(Portal23, { children });
    $[0] = children;
    $[1] = t1;
  } else {
    t1 = $[1];
  }
  return t1;
}
function MenubarContent2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(18);
  let align;
  let alignOffset;
  let children;
  let className;
  let onSelect;
  let rest;
  let sideOffset;
  if ($[0] !== t0) {
    ({
      children,
      className,
      align,
      sideOffset,
      alignOffset,
      onSelect,
      ...rest
    } = t0);
    $[0] = t0;
    $[1] = align;
    $[2] = alignOffset;
    $[3] = children;
    $[4] = className;
    $[5] = onSelect;
    $[6] = rest;
    $[7] = sideOffset;
  } else {
    align = $[1];
    alignOffset = $[2];
    children = $[3];
    className = $[4];
    onSelect = $[5];
    rest = $[6];
    sideOffset = $[7];
  }
  let t1;
  if ($[8] !== className) {
    t1 = cls("min-w-[220px] bg-white dark:bg-surface-950 rounded-md p-[6px] shadow-[0px_10px_38px_-10px_rgba(22,_23,_24,_0.35),_0px_10px_20px_-15px_rgba(22,_23,_24,_0.2)] [animation-duration:_400ms] [animation-timing-function:_cubic-bezier(0.16,_1,_0.3,_1)] will-change-[transform,opacity]", className);
    $[8] = className;
    $[9] = t1;
  } else {
    t1 = $[9];
  }
  const t2 = align ?? "start";
  const t3 = sideOffset ?? 5;
  const t4 = alignOffset ?? -3;
  let t5;
  if ($[10] !== children || $[11] !== onSelect || $[12] !== rest || $[13] !== t1 || $[14] !== t2 || $[15] !== t3 || $[16] !== t4) {
    t5 = (0, import_jsx_runtime29.jsx)(Content24, { onSelect, className: t1, align: t2, sideOffset: t3, alignOffset: t4, ...rest, children });
    $[10] = children;
    $[11] = onSelect;
    $[12] = rest;
    $[13] = t1;
    $[14] = t2;
    $[15] = t3;
    $[16] = t4;
    $[17] = t5;
  } else {
    t5 = $[17];
  }
  return t5;
}
function MenubarItem2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(17);
  let children;
  let className;
  let disabled;
  let leftPadding;
  let onSelect;
  let rest;
  if ($[0] !== t0) {
    ({
      children,
      leftPadding,
      className,
      disabled,
      onSelect,
      ...rest
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = disabled;
    $[4] = leftPadding;
    $[5] = onSelect;
    $[6] = rest;
  } else {
    children = $[1];
    className = $[2];
    disabled = $[3];
    leftPadding = $[4];
    onSelect = $[5];
    rest = $[6];
  }
  const t1 = leftPadding ? "pl-5" : "";
  const t2 = disabled ? "pointer-events-none text-text-secondary dark:text-text-secondary-dark" : "text-text-primary dark:text-text-primary-dark";
  let t3;
  if ($[7] !== className || $[8] !== t1 || $[9] !== t2) {
    t3 = cls("group text-[13px] leading-none rounded flex items-center h-[32px] px-[10px] py-[2px] relative select-none outline-none data-[state=open]:bg-surface-accent-100 data-[state=open]:dark:bg-surface-800 data-[state=open]:text-text-primary data-[state=open]:dark:text-text-primary-dark data-[highlighted]:bg-surface-accent-100 data-[highlighted]:dark:bg-surface-800  data-[disabled]:text-text-disabled data-[disabled]:dark:text-text-disabled-dark data-[disabled]:pointer-events-none", t1, t2, className);
    $[7] = className;
    $[8] = t1;
    $[9] = t2;
    $[10] = t3;
  } else {
    t3 = $[10];
  }
  let t4;
  if ($[11] !== children || $[12] !== disabled || $[13] !== onSelect || $[14] !== rest || $[15] !== t3) {
    t4 = (0, import_jsx_runtime29.jsx)(Item3, { onSelect, className: t3, disabled, ...rest, children });
    $[11] = children;
    $[12] = disabled;
    $[13] = onSelect;
    $[14] = rest;
    $[15] = t3;
    $[16] = t4;
  } else {
    t4 = $[16];
  }
  return t4;
}
function MenubarSeparator2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(10);
  let children;
  let className;
  let rest;
  if ($[0] !== t0) {
    ({
      children,
      className,
      ...rest
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = rest;
  } else {
    children = $[1];
    className = $[2];
    rest = $[3];
  }
  let t1;
  if ($[4] !== className) {
    t1 = cls("h-[1px] bg-surface-accent-100 dark:bg-surface-800 m-[5px]", className);
    $[4] = className;
    $[5] = t1;
  } else {
    t1 = $[5];
  }
  let t2;
  if ($[6] !== children || $[7] !== rest || $[8] !== t1) {
    t2 = (0, import_jsx_runtime29.jsx)(Separator2, { className: t1, ...rest, children });
    $[6] = children;
    $[7] = rest;
    $[8] = t1;
    $[9] = t2;
  } else {
    t2 = $[9];
  }
  return t2;
}
function MenubarSub2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(6);
  let children;
  let rest;
  if ($[0] !== t0) {
    ({
      children,
      ...rest
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = rest;
  } else {
    children = $[1];
    rest = $[2];
  }
  let t1;
  if ($[3] !== children || $[4] !== rest) {
    t1 = (0, import_jsx_runtime29.jsx)(Sub2, { ...rest, children });
    $[3] = children;
    $[4] = rest;
    $[5] = t1;
  } else {
    t1 = $[5];
  }
  return t1;
}
function MenubarSubTrigger2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(12);
  let children;
  let className;
  let onSelect;
  let rest;
  if ($[0] !== t0) {
    ({
      children,
      className,
      onSelect,
      ...rest
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = onSelect;
    $[4] = rest;
  } else {
    children = $[1];
    className = $[2];
    onSelect = $[3];
    rest = $[4];
  }
  let t1;
  if ($[5] !== className) {
    t1 = cls("group text-[13px] leading-none text-text-primary dark:text-text-primary-dark rounded flex items-center h-[32px] px-[10px] py-[2px] relative select-none outline-none data-[state=open]:bg-surface-accent-100 data-[state=open]:dark:bg-surface-800 data-[state=open]:text-text-primary data-[state=open]:dark:text-text-primary-dark data-[highlighted]:bg-surface-accent-100 data-[highlighted]:dark:bg-surface-800  data-[disabled]:text-text-disabled data-[disabled]:dark:text-text-disabled-dark data-[disabled]:pointer-events-none", className);
    $[5] = className;
    $[6] = t1;
  } else {
    t1 = $[6];
  }
  let t2;
  if ($[7] !== children || $[8] !== onSelect || $[9] !== rest || $[10] !== t1) {
    t2 = (0, import_jsx_runtime29.jsx)(SubTrigger2, { onSelect, className: t1, ...rest, children });
    $[7] = children;
    $[8] = onSelect;
    $[9] = rest;
    $[10] = t1;
    $[11] = t2;
  } else {
    t2 = $[11];
  }
  return t2;
}
function MenubarSubContent2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(14);
  let alignOffset;
  let children;
  let className;
  let onSelect;
  let rest;
  if ($[0] !== t0) {
    ({
      children,
      alignOffset,
      className,
      onSelect,
      ...rest
    } = t0);
    $[0] = t0;
    $[1] = alignOffset;
    $[2] = children;
    $[3] = className;
    $[4] = onSelect;
    $[5] = rest;
  } else {
    alignOffset = $[1];
    children = $[2];
    className = $[3];
    onSelect = $[4];
    rest = $[5];
  }
  const t1 = alignOffset ?? -5;
  let t2;
  if ($[6] !== className) {
    t2 = cls("min-w-[220px] bg-white dark:bg-surface-950 rounded-md p-[6px] shadow-[0px_10px_38px_-10px_rgba(22,_23,_24,_0.35),_0px_10px_20px_-15px_rgba(22,_23,_24,_0.2)] [animation-duration:_400ms] [animation-timing-function:_cubic-bezier(0.16,_1,_0.3,_1)] will-change-[transform,opacity]", className);
    $[6] = className;
    $[7] = t2;
  } else {
    t2 = $[7];
  }
  let t3;
  if ($[8] !== children || $[9] !== onSelect || $[10] !== rest || $[11] !== t1 || $[12] !== t2) {
    t3 = (0, import_jsx_runtime29.jsx)(SubContent2, { onSelect, alignOffset: t1, className: t2, ...rest, children });
    $[8] = children;
    $[9] = onSelect;
    $[10] = rest;
    $[11] = t1;
    $[12] = t2;
    $[13] = t3;
  } else {
    t3 = $[13];
  }
  return t3;
}
function MenubarCheckboxItem2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(16);
  let checked;
  let children;
  let className;
  let onCheckedChange;
  let onSelect;
  let rest;
  if ($[0] !== t0) {
    ({
      children,
      checked,
      onCheckedChange,
      className,
      onSelect,
      ...rest
    } = t0);
    $[0] = t0;
    $[1] = checked;
    $[2] = children;
    $[3] = className;
    $[4] = onCheckedChange;
    $[5] = onSelect;
    $[6] = rest;
  } else {
    checked = $[1];
    children = $[2];
    className = $[3];
    onCheckedChange = $[4];
    onSelect = $[5];
    rest = $[6];
  }
  let t1;
  if ($[7] !== className) {
    t1 = cls("text-[13px] leading-none text-text-primary dark:text-text-primary-dark rounded flex items-center h-[32px] px-[10px] py-[2px] relative select-none pl-5 outline-none data-[highlighted]:bg-surface-accent-100 data-[highlighted]:dark:bg-surface-800 data-[disabled]:text-text-disabled data-[disabled]:dark:text-text-disabled-dark data-[disabled]:pointer-events-none", className);
    $[7] = className;
    $[8] = t1;
  } else {
    t1 = $[8];
  }
  let t2;
  if ($[9] !== checked || $[10] !== children || $[11] !== onCheckedChange || $[12] !== onSelect || $[13] !== rest || $[14] !== t1) {
    t2 = (0, import_jsx_runtime29.jsx)(CheckboxItem2, { onSelect, className: t1, checked, onCheckedChange, ...rest, children });
    $[9] = checked;
    $[10] = children;
    $[11] = onCheckedChange;
    $[12] = onSelect;
    $[13] = rest;
    $[14] = t1;
    $[15] = t2;
  } else {
    t2 = $[15];
  }
  return t2;
}
function MenubarItemIndicator2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(12);
  let children;
  let className;
  let rest;
  if ($[0] !== t0) {
    ({
      children,
      className,
      ...rest
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = rest;
  } else {
    children = $[1];
    className = $[2];
    rest = $[3];
  }
  let t1;
  if ($[4] !== className) {
    t1 = cls("absolute left-0 w-4 inline-flex items-center justify-center", className);
    $[4] = className;
    $[5] = t1;
  } else {
    t1 = $[5];
  }
  let t2;
  if ($[6] !== children) {
    t2 = children ?? (0, import_jsx_runtime29.jsx)(CheckIcon, { size: "smallest" });
    $[6] = children;
    $[7] = t2;
  } else {
    t2 = $[7];
  }
  let t3;
  if ($[8] !== rest || $[9] !== t1 || $[10] !== t2) {
    t3 = (0, import_jsx_runtime29.jsx)(ItemIndicator2, { className: t1, ...rest, children: t2 });
    $[8] = rest;
    $[9] = t1;
    $[10] = t2;
    $[11] = t3;
  } else {
    t3 = $[11];
  }
  return t3;
}
function MenubarRadioGroup2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(18);
  let children;
  let className;
  let onSelect;
  let onValueChange;
  let rest;
  let value;
  if ($[0] !== t0) {
    ({
      children,
      className,
      value,
      onValueChange,
      onSelect,
      ...rest
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = onSelect;
    $[4] = onValueChange;
    $[5] = rest;
    $[6] = value;
  } else {
    children = $[1];
    className = $[2];
    onSelect = $[3];
    onValueChange = $[4];
    rest = $[5];
    value = $[6];
  }
  let t1;
  if ($[7] !== className) {
    t1 = cls(className);
    $[7] = className;
    $[8] = t1;
  } else {
    t1 = $[8];
  }
  let t2;
  if ($[9] !== children) {
    t2 = children ?? (0, import_jsx_runtime29.jsx)(CheckIcon, { size: "small" });
    $[9] = children;
    $[10] = t2;
  } else {
    t2 = $[10];
  }
  let t3;
  if ($[11] !== onSelect || $[12] !== onValueChange || $[13] !== rest || $[14] !== t1 || $[15] !== t2 || $[16] !== value) {
    t3 = (0, import_jsx_runtime29.jsx)(RadioGroup2, { className: t1, value, onValueChange, onSelect, ...rest, children: t2 });
    $[11] = onSelect;
    $[12] = onValueChange;
    $[13] = rest;
    $[14] = t1;
    $[15] = t2;
    $[16] = value;
    $[17] = t3;
  } else {
    t3 = $[17];
  }
  return t3;
}
function MenubarRadioItem2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(16);
  let children;
  let className;
  let onSelect;
  let rest;
  let value;
  if ($[0] !== t0) {
    ({
      children,
      className,
      value,
      onSelect,
      ...rest
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = onSelect;
    $[4] = rest;
    $[5] = value;
  } else {
    children = $[1];
    className = $[2];
    onSelect = $[3];
    rest = $[4];
    value = $[5];
  }
  let t1;
  if ($[6] !== className) {
    t1 = cls("text-[13px] leading-none text-text-primary dark:text-text-primary-dark rounded flex items-center h-[32px] px-[10px] py-[2px] relative select-none pl-5 outline-none data-[highlighted]:bg-surface-accent-100 data-[highlighted]:dark:bg-surface-800 data-[disabled]:text-text-disabled data-[disabled]:dark:text-text-disabled-dark data-[disabled]:pointer-events-none", className);
    $[6] = className;
    $[7] = t1;
  } else {
    t1 = $[7];
  }
  let t2;
  if ($[8] !== children) {
    t2 = children ?? (0, import_jsx_runtime29.jsx)(CheckIcon, { size: "small" });
    $[8] = children;
    $[9] = t2;
  } else {
    t2 = $[9];
  }
  let t3;
  if ($[10] !== onSelect || $[11] !== rest || $[12] !== t1 || $[13] !== t2 || $[14] !== value) {
    t3 = (0, import_jsx_runtime29.jsx)(RadioItem2, { onSelect, className: t1, value, ...rest, children: t2 });
    $[10] = onSelect;
    $[11] = rest;
    $[12] = t1;
    $[13] = t2;
    $[14] = value;
    $[15] = t3;
  } else {
    t3 = $[15];
  }
  return t3;
}
function MenubarShortcut(t0) {
  const $ = (0, import_react_compiler_runtime.c)(10);
  let children;
  let className;
  let rest;
  if ($[0] !== t0) {
    ({
      children,
      className,
      ...rest
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = rest;
  } else {
    children = $[1];
    className = $[2];
    rest = $[3];
  }
  let t1;
  if ($[4] !== className) {
    t1 = cls("ml-auto pl-5 group-data-[disabled]:text-text-disabled data-[disabled]:dark:text-text-disabled-dark", className);
    $[4] = className;
    $[5] = t1;
  } else {
    t1 = $[5];
  }
  let t2;
  if ($[6] !== children || $[7] !== rest || $[8] !== t1) {
    t2 = (0, import_jsx_runtime29.jsx)("div", { className: t1, ...rest, children });
    $[6] = children;
    $[7] = rest;
    $[8] = t1;
    $[9] = t2;
  } else {
    t2 = $[9];
  }
  return t2;
}
function MenubarSubTriggerIndicator() {
  const $ = (0, import_react_compiler_runtime.c)(1);
  let t0;
  if ($[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = (0, import_jsx_runtime29.jsx)("div", { className: "ml-auto pl-5 ", children: (0, import_jsx_runtime29.jsx)(ChevronRightIcon, { size: "small" }) });
    $[0] = t0;
  } else {
    t0 = $[0];
  }
  return t0;
}
function Separator4(t0) {
  const $ = (0, import_react_compiler_runtime.c)(10);
  const {
    orientation,
    decorative,
    className
  } = t0;
  if (orientation === "horizontal") {
    let t1;
    if ($[0] !== className) {
      t1 = cls("dark:bg-opacity-80 dark:bg-surface-800 bg-surface-100 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px my-4", className);
      $[0] = className;
      $[1] = t1;
    } else {
      t1 = $[1];
    }
    let t2;
    if ($[2] !== decorative || $[3] !== t1) {
      t2 = (0, import_jsx_runtime29.jsx)(Root8, { decorative, orientation: "horizontal", className: t1 });
      $[2] = decorative;
      $[3] = t1;
      $[4] = t2;
    } else {
      t2 = $[4];
    }
    return t2;
  } else {
    let t1;
    if ($[5] !== className) {
      t1 = cls("dark:bg-opacity-80 dark:bg-surface-800 bg-surface-100 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px mx-4", className);
      $[5] = className;
      $[6] = t1;
    } else {
      t1 = $[6];
    }
    let t2;
    if ($[7] !== decorative || $[8] !== t1) {
      t2 = (0, import_jsx_runtime29.jsx)(Root8, { className: t1, decorative, orientation: "vertical" });
      $[7] = decorative;
      $[8] = t1;
      $[9] = t2;
    } else {
      t2 = $[9];
    }
    return t2;
  }
}
function SelectInputLabel(t0) {
  const $ = (0, import_react_compiler_runtime.c)(5);
  const {
    children,
    error: error2
  } = t0;
  const t1 = error2 ? "text-red-500 dark:text-red-600" : "text-surface-accent-500 dark:text-surface-accent-300";
  let t2;
  if ($[0] !== t1) {
    t2 = cls("text-sm  font-medium ml-3.5 mb-1", t1);
    $[0] = t1;
    $[1] = t2;
  } else {
    t2 = $[1];
  }
  let t3;
  if ($[2] !== children || $[3] !== t2) {
    t3 = (0, import_jsx_runtime29.jsx)("div", { className: t2, children });
    $[2] = children;
    $[3] = t2;
    $[4] = t3;
  } else {
    t3 = $[4];
  }
  return t3;
}
var MultiSelectContext = React54.createContext({});
var MultiSelect = React54.forwardRef((t0, ref) => {
  const $ = (0, import_react_compiler_runtime.c)(102);
  const {
    value,
    size: t1,
    label,
    error: error2,
    onValueChange,
    invisible,
    disabled,
    placeholder,
    modalPopover: t2,
    includeClear: t3,
    includeSelectAll: t4,
    useChips: t5,
    className,
    children,
    renderValues,
    open,
    onOpenChange
  } = t0;
  const size4 = t1 === void 0 ? "large" : t1;
  const modalPopover = t2 === void 0 ? true : t2;
  const includeClear = t3 === void 0 ? true : t3;
  const includeSelectAll = t4 === void 0 ? true : t4;
  const useChips = t5 === void 0 ? true : t5;
  const [isPopoverOpen, setIsPopoverOpen] = React54.useState(open ?? false);
  let t6;
  if ($[0] !== value) {
    t6 = value ?? [];
    $[0] = value;
    $[1] = t6;
  } else {
    t6 = $[1];
  }
  const [selectedValues, setSelectedValues] = React54.useState(t6);
  let t7;
  if ($[2] !== onOpenChange) {
    t7 = (open_0) => {
      setIsPopoverOpen(open_0);
      onOpenChange == null ? void 0 : onOpenChange(open_0);
    };
    $[2] = onOpenChange;
    $[3] = t7;
  } else {
    t7 = $[3];
  }
  const onPopoverOpenChange = t7;
  let t8;
  let t9;
  if ($[4] !== open) {
    t8 = () => {
      setIsPopoverOpen(open ?? false);
    };
    t9 = [open];
    $[4] = open;
    $[5] = t8;
    $[6] = t9;
  } else {
    t8 = $[5];
    t9 = $[6];
  }
  (0, import_react22.useEffect)(t8, t9);
  let t10;
  if ($[7] !== children) {
    t10 = children ? import_react22.Children.map(children, _temp$1).filter(Boolean) : [];
    $[7] = children;
    $[8] = t10;
  } else {
    t10 = $[8];
  }
  const allValues = t10;
  let t11;
  let t12;
  if ($[9] !== value) {
    t11 = () => {
      setSelectedValues(value ?? []);
    };
    t12 = [value];
    $[9] = value;
    $[10] = t11;
    $[11] = t12;
  } else {
    t11 = $[10];
    t12 = $[11];
  }
  React54.useEffect(t11, t12);
  let onItemClick;
  let updateValues;
  if ($[12] !== onValueChange || $[13] !== selectedValues) {
    onItemClick = function onItemClick2(newValue) {
      let newSelectedValues;
      if (selectedValues.some((v_0) => String(v_0) === String(newValue))) {
        newSelectedValues = selectedValues.filter((v) => String(v) !== String(newValue));
      } else {
        newSelectedValues = [...selectedValues, newValue];
      }
      updateValues(newSelectedValues);
    };
    updateValues = function updateValues2(values) {
      setSelectedValues(values);
      onValueChange == null ? void 0 : onValueChange(values);
    };
    $[12] = onValueChange;
    $[13] = selectedValues;
    $[14] = onItemClick;
    $[15] = updateValues;
  } else {
    onItemClick = $[14];
    updateValues = $[15];
  }
  let t13;
  if ($[16] !== onPopoverOpenChange || $[17] !== selectedValues || $[18] !== updateValues) {
    t13 = (event) => {
      if (event.key === "Enter") {
        onPopoverOpenChange(true);
      } else {
        if (event.key === "Backspace" && !event.currentTarget.value) {
          const newSelectedValues_0 = [...selectedValues];
          newSelectedValues_0.pop();
          updateValues(newSelectedValues_0);
        }
      }
    };
    $[16] = onPopoverOpenChange;
    $[17] = selectedValues;
    $[18] = updateValues;
    $[19] = t13;
  } else {
    t13 = $[19];
  }
  const handleInputKeyDown = t13;
  let t14;
  if ($[20] !== selectedValues || $[21] !== updateValues) {
    t14 = (value_0) => {
      const newSelectedValues_1 = selectedValues.some((v_2) => String(v_2) === String(value_0)) ? selectedValues.filter((v_1) => String(v_1) !== String(value_0)) : [...selectedValues, value_0];
      updateValues(newSelectedValues_1);
    };
    $[20] = selectedValues;
    $[21] = updateValues;
    $[22] = t14;
  } else {
    t14 = $[22];
  }
  const toggleOption = t14;
  let t15;
  if ($[23] !== updateValues) {
    t15 = () => {
      updateValues([]);
    };
    $[23] = updateValues;
    $[24] = t15;
  } else {
    t15 = $[24];
  }
  const handleClear = t15;
  let t16;
  if ($[25] !== isPopoverOpen || $[26] !== onPopoverOpenChange) {
    t16 = () => {
      onPopoverOpenChange(!isPopoverOpen);
    };
    $[25] = isPopoverOpen;
    $[26] = onPopoverOpenChange;
    $[27] = t16;
  } else {
    t16 = $[27];
  }
  const handleTogglePopover = t16;
  let t17;
  if ($[28] !== allValues || $[29] !== handleClear || $[30] !== onPopoverOpenChange || $[31] !== selectedValues.length || $[32] !== updateValues) {
    t17 = () => {
      if (selectedValues.length === allValues.length) {
        handleClear();
      } else {
        updateValues(allValues);
      }
      onPopoverOpenChange(false);
    };
    $[28] = allValues;
    $[29] = handleClear;
    $[30] = onPopoverOpenChange;
    $[31] = selectedValues.length;
    $[32] = updateValues;
    $[33] = t17;
  } else {
    t17 = $[33];
  }
  const toggleAll = t17;
  useInjectStyles("MultiSelect", `
[cmdk-group] {
  max-height: 45vh;
  overflow-y: auto;
  // width: 400px;
} `);
  let t18;
  if ($[34] !== onItemClick || $[35] !== selectedValues) {
    t18 = {
      fieldValue: selectedValues,
      onItemClick
    };
    $[34] = onItemClick;
    $[35] = selectedValues;
    $[36] = t18;
  } else {
    t18 = $[36];
  }
  let t19;
  if ($[37] !== error2 || $[38] !== label) {
    t19 = typeof label === "string" ? (0, import_jsx_runtime29.jsx)(SelectInputLabel, { error: error2, children: label }) : label;
    $[37] = error2;
    $[38] = label;
    $[39] = t19;
  } else {
    t19 = $[39];
  }
  const t20 = size4 === "smallest";
  const t21 = size4 === "small";
  const t22 = size4 === "medium";
  const t23 = size4 === "large";
  let t24;
  if ($[40] !== className || $[41] !== disabled || $[42] !== invisible || $[43] !== size4 || $[44] !== t20 || $[45] !== t21 || $[46] !== t22 || $[47] !== t23) {
    t24 = cls({
      "min-h-[28px]": t20,
      "min-h-[32px]": t21,
      "min-h-[42px]": t22,
      "min-h-[64px]": t23
    }, {
      "py-1": size4 === "small" || size4 === "smallest",
      "py-2": size4 === "medium" || size4 === "large"
    }, {
      "px-2": size4 === "small" || size4 === "smallest",
      "px-4": size4 === "medium" || size4 === "large"
    }, "select-none rounded-md text-sm", invisible ? fieldBackgroundInvisibleMixin : fieldBackgroundMixin, disabled ? fieldBackgroundDisabledMixin : fieldBackgroundHoverMixin, "relative flex items-center", className);
    $[40] = className;
    $[41] = disabled;
    $[42] = invisible;
    $[43] = size4;
    $[44] = t20;
    $[45] = t21;
    $[46] = t22;
    $[47] = t23;
    $[48] = t24;
  } else {
    t24 = $[48];
  }
  let t25;
  if ($[49] !== children || $[50] !== handleClear || $[51] !== includeClear || $[52] !== isPopoverOpen || $[53] !== placeholder || $[54] !== renderValues || $[55] !== selectedValues || $[56] !== toggleOption || $[57] !== useChips) {
    t25 = selectedValues.length > 0 ? (0, import_jsx_runtime29.jsxs)("div", { className: "flex justify-between items-center w-full", children: [
      (0, import_jsx_runtime29.jsxs)("div", { className: "flex flex-wrap items-center gap-1.5 text-start", children: [
        renderValues && renderValues(selectedValues),
        !renderValues && selectedValues.map((value_1) => {
          const childrenProps = import_react22.Children.map(children, _temp2).filter(Boolean);
          const option = childrenProps.find((o) => String(o.value) === String(value_1));
          if (!useChips) {
            return option == null ? void 0 : option.children;
          }
          return (0, import_jsx_runtime29.jsxs)(Chip, { size: "medium", className: cls("flex flex-row items-center p-1"), children: [
            option == null ? void 0 : option.children,
            (0, import_jsx_runtime29.jsx)(CloseIcon, { size: "smallest", onClick: (event_0) => {
              event_0.stopPropagation();
              toggleOption(value_1);
            } })
          ] }, String(value_1));
        })
      ] }),
      (0, import_jsx_runtime29.jsxs)("div", { className: "flex items-center justify-between", children: [
        includeClear && (0, import_jsx_runtime29.jsx)(CloseIcon, { className: "ml-4", size: "small", onClick: (event_1) => {
          event_1.stopPropagation();
          handleClear();
        } }),
        (0, import_jsx_runtime29.jsx)("div", { className: cls("px-2 h-full flex items-center"), children: (0, import_jsx_runtime29.jsx)(KeyboardArrowDownIcon, { size: "small", className: cls("transition", isPopoverOpen ? "rotate-180" : "") }) })
      ] })
    ] }) : (0, import_jsx_runtime29.jsxs)("div", { className: "flex items-center justify-between w-full mx-auto", children: [
      (0, import_jsx_runtime29.jsx)("span", { className: "text-sm", children: placeholder }),
      (0, import_jsx_runtime29.jsx)("div", { className: cls("px-2 h-full flex items-center"), children: (0, import_jsx_runtime29.jsx)(KeyboardArrowDownIcon, { size: "small", className: cls("transition", isPopoverOpen ? "rotate-180" : "") }) })
    ] });
    $[49] = children;
    $[50] = handleClear;
    $[51] = includeClear;
    $[52] = isPopoverOpen;
    $[53] = placeholder;
    $[54] = renderValues;
    $[55] = selectedValues;
    $[56] = toggleOption;
    $[57] = useChips;
    $[58] = t25;
  } else {
    t25 = $[58];
  }
  let t26;
  if ($[59] !== handleTogglePopover || $[60] !== ref || $[61] !== t24 || $[62] !== t25) {
    t26 = (0, import_jsx_runtime29.jsx)(Trigger4, { asChild: true, children: (0, import_jsx_runtime29.jsx)("button", { ref, onClick: handleTogglePopover, className: t24, children: t25 }) });
    $[59] = handleTogglePopover;
    $[60] = ref;
    $[61] = t24;
    $[62] = t25;
    $[63] = t26;
  } else {
    t26 = $[63];
  }
  let t27;
  if ($[64] === Symbol.for("react.memo_cache_sentinel")) {
    t27 = cls("z-50 relative overflow-hidden border bg-white dark:bg-surface-900 rounded-lg w-[400px]", defaultBorderMixin);
    $[64] = t27;
  } else {
    t27 = $[64];
  }
  let t28;
  if ($[65] !== onPopoverOpenChange) {
    t28 = () => onPopoverOpenChange(false);
    $[65] = onPopoverOpenChange;
    $[66] = t28;
  } else {
    t28 = $[66];
  }
  let t29;
  if ($[67] === Symbol.for("react.memo_cache_sentinel")) {
    t29 = cls(focusedDisabled, "bg-transparent outline-none flex-1 h-full w-full m-4 flex-grow ");
    $[67] = t29;
  } else {
    t29 = $[67];
  }
  let t30;
  if ($[68] !== handleInputKeyDown) {
    t30 = (0, import_jsx_runtime29.jsx)(we.Input, { className: t29, placeholder: "Search...", onKeyDown: handleInputKeyDown });
    $[68] = handleInputKeyDown;
    $[69] = t30;
  } else {
    t30 = $[69];
  }
  let t31;
  if ($[70] !== handleClear || $[71] !== selectedValues.length) {
    t31 = selectedValues.length > 0 && (0, import_jsx_runtime29.jsx)("div", { onClick: handleClear, className: "text-sm justify-center cursor-pointer py-3 px-4 text-text-secondary dark:text-text-secondary-dark", children: "Clear" });
    $[70] = handleClear;
    $[71] = selectedValues.length;
    $[72] = t31;
  } else {
    t31 = $[72];
  }
  let t32;
  if ($[73] !== t30 || $[74] !== t31) {
    t32 = (0, import_jsx_runtime29.jsxs)("div", { className: "flex flex-row items-center", children: [
      t30,
      t31
    ] });
    $[73] = t30;
    $[74] = t31;
    $[75] = t32;
  } else {
    t32 = $[75];
  }
  let t33;
  if ($[76] === Symbol.for("react.memo_cache_sentinel")) {
    t33 = (0, import_jsx_runtime29.jsx)(Separator4, { orientation: "horizontal", className: "my-0" });
    $[76] = t33;
  } else {
    t33 = $[76];
  }
  let t34;
  if ($[77] === Symbol.for("react.memo_cache_sentinel")) {
    t34 = (0, import_jsx_runtime29.jsx)(we.Empty, { className: "px-4 py-2", children: "No results found." });
    $[77] = t34;
  } else {
    t34 = $[77];
  }
  let t35;
  if ($[78] !== allValues.length || $[79] !== includeSelectAll || $[80] !== selectedValues.length || $[81] !== toggleAll) {
    t35 = includeSelectAll && (0, import_jsx_runtime29.jsxs)(we.Item, { onSelect: toggleAll, className: cls("flex flex-row items-center gap-1.5", "cursor-pointer", "m-1", "ring-offset-transparent", "p-1 rounded aria-[selected=true]:outline-none aria-[selected=true]:ring-2 aria-[selected=true]:ring-primary aria-[selected=true]:ring-opacity-75 aria-[selected=true]:ring-offset-2", "aria-[selected=true]:bg-surface-accent-100 aria-[selected=true]:dark:bg-surface-accent-900", "cursor-pointer p-2 rounded aria-[selected=true]:bg-surface-accent-100 aria-[selected=true]:dark:bg-surface-accent-900"), children: [
      (0, import_jsx_runtime29.jsx)(InnerCheckBox, { checked: selectedValues.length === allValues.length }),
      (0, import_jsx_runtime29.jsx)("span", { className: "text-sm text-text-secondary dark:text-text-secondary-dark", children: "(Select All)" })
    ] }, "all");
    $[78] = allValues.length;
    $[79] = includeSelectAll;
    $[80] = selectedValues.length;
    $[81] = toggleAll;
    $[82] = t35;
  } else {
    t35 = $[82];
  }
  let t36;
  if ($[83] !== children || $[84] !== t35) {
    t36 = (0, import_jsx_runtime29.jsxs)(we.List, { children: [
      t34,
      (0, import_jsx_runtime29.jsxs)(we.Group, { children: [
        t35,
        children
      ] })
    ] });
    $[83] = children;
    $[84] = t35;
    $[85] = t36;
  } else {
    t36 = $[85];
  }
  let t37;
  if ($[86] !== t32 || $[87] !== t36) {
    t37 = (0, import_jsx_runtime29.jsxs)(we, { children: [
      t32,
      t33,
      t36
    ] });
    $[86] = t32;
    $[87] = t36;
    $[88] = t37;
  } else {
    t37 = $[88];
  }
  let t38;
  if ($[89] !== t28 || $[90] !== t37) {
    t38 = (0, import_jsx_runtime29.jsx)(Content25, { className: t27, align: "start", sideOffset: 8, onEscapeKeyDown: t28, children: t37 });
    $[89] = t28;
    $[90] = t37;
    $[91] = t38;
  } else {
    t38 = $[91];
  }
  let t39;
  if ($[92] !== isPopoverOpen || $[93] !== modalPopover || $[94] !== onPopoverOpenChange || $[95] !== t26 || $[96] !== t38) {
    t39 = (0, import_jsx_runtime29.jsxs)(Root24, { open: isPopoverOpen, onOpenChange: onPopoverOpenChange, modal: modalPopover, children: [
      t26,
      t38
    ] });
    $[92] = isPopoverOpen;
    $[93] = modalPopover;
    $[94] = onPopoverOpenChange;
    $[95] = t26;
    $[96] = t38;
    $[97] = t39;
  } else {
    t39 = $[97];
  }
  let t40;
  if ($[98] !== t18 || $[99] !== t19 || $[100] !== t39) {
    t40 = (0, import_jsx_runtime29.jsxs)(MultiSelectContext.Provider, { value: t18, children: [
      t19,
      t39
    ] });
    $[98] = t18;
    $[99] = t19;
    $[100] = t39;
    $[101] = t40;
  } else {
    t40 = $[101];
  }
  return t40;
});
MultiSelect.displayName = "MultiSelect";
function MultiSelectItem(t0) {
  const $ = (0, import_react_compiler_runtime.c)(20);
  const {
    children,
    value,
    className
  } = t0;
  const context = React54.useContext(MultiSelectContext);
  if (!context) {
    throw new Error("MultiSelectItem must be used inside a MultiSelect");
  }
  const {
    fieldValue,
    onItemClick
  } = context;
  let t1;
  if ($[0] !== fieldValue) {
    t1 = fieldValue ?? [];
    $[0] = fieldValue;
    $[1] = t1;
  } else {
    t1 = $[1];
  }
  let t2;
  if ($[2] !== t1 || $[3] !== value) {
    let t32;
    if ($[5] !== value) {
      t32 = (v) => String(v) === String(value);
      $[5] = value;
      $[6] = t32;
    } else {
      t32 = $[6];
    }
    t2 = t1.some(t32);
    $[2] = t1;
    $[3] = value;
    $[4] = t2;
  } else {
    t2 = $[4];
  }
  const isSelected = t2;
  let t3;
  if ($[7] !== onItemClick || $[8] !== value) {
    t3 = (_2) => {
      onItemClick(value);
    };
    $[7] = onItemClick;
    $[8] = value;
    $[9] = t3;
  } else {
    t3 = $[9];
  }
  const t4 = isSelected ? "bg-surface-accent-200 dark:bg-surface-accent-950" : "";
  let t5;
  if ($[10] !== className || $[11] !== t4) {
    t5 = cls("flex flex-row items-center gap-1.5", t4, "cursor-pointer", "m-1", "ring-offset-transparent", "p-1 rounded aria-[selected=true]:outline-none aria-[selected=true]:ring-2 aria-[selected=true]:ring-primary aria-[selected=true]:ring-opacity-75 aria-[selected=true]:ring-offset-2", "aria-[selected=true]:bg-surface-accent-100 aria-[selected=true]:dark:bg-surface-accent-900", "cursor-pointer p-2 rounded aria-[selected=true]:bg-surface-accent-100 aria-[selected=true]:dark:bg-surface-accent-900", className);
    $[10] = className;
    $[11] = t4;
    $[12] = t5;
  } else {
    t5 = $[12];
  }
  let t6;
  if ($[13] !== isSelected) {
    t6 = (0, import_jsx_runtime29.jsx)(InnerCheckBox, { checked: isSelected });
    $[13] = isSelected;
    $[14] = t6;
  } else {
    t6 = $[14];
  }
  let t7;
  if ($[15] !== children || $[16] !== t3 || $[17] !== t5 || $[18] !== t6) {
    t7 = (0, import_jsx_runtime29.jsxs)(we.Item, { onMouseDown: _temp3, onSelect: t3, className: t5, children: [
      t6,
      children
    ] });
    $[15] = children;
    $[16] = t3;
    $[17] = t5;
    $[18] = t6;
    $[19] = t7;
  } else {
    t7 = $[19];
  }
  return t7;
}
function _temp3(e) {
  e.preventDefault();
  e.stopPropagation();
}
function InnerCheckBox(t0) {
  const $ = (0, import_react_compiler_runtime.c)(10);
  const {
    checked
  } = t0;
  let t1;
  if ($[0] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = cls("p-2", "w-8 h-8", "inline-flex items-center justify-center text-sm font-medium focus:outline-none transition-colors ease-in-out duration-150");
    $[0] = t1;
  } else {
    t1 = $[0];
  }
  const t2 = checked ? "bg-primary" : "bg-white dark:bg-surface-accent-900";
  const t3 = checked ? "text-surface-accent-100 dark:text-surface-accent-900" : "";
  const t4 = checked ? "border-transparent" : "border-surface-accent-800 dark:border-surface-accent-200";
  let t5;
  if ($[1] !== t2 || $[2] !== t3 || $[3] !== t4) {
    t5 = cls("border-2 relative transition-colors ease-in-out duration-150", "w-4 h-4 rounded flex items-center justify-center", t2, t3, t4);
    $[1] = t2;
    $[2] = t3;
    $[3] = t4;
    $[4] = t5;
  } else {
    t5 = $[4];
  }
  let t6;
  if ($[5] !== checked) {
    t6 = checked && (0, import_jsx_runtime29.jsx)(CheckIcon, { size: 16, className: "absolute" });
    $[5] = checked;
    $[6] = t6;
  } else {
    t6 = $[6];
  }
  let t7;
  if ($[7] !== t5 || $[8] !== t6) {
    t7 = (0, import_jsx_runtime29.jsx)("div", { className: t1, children: (0, import_jsx_runtime29.jsx)("div", { className: t5, children: t6 }) });
    $[7] = t5;
    $[8] = t6;
    $[9] = t7;
  } else {
    t7 = $[9];
  }
  return t7;
}
function _temp$1(child) {
  if (React54.isValidElement(child)) {
    return child.props.value;
  }
  return null;
}
function _temp2(child_0) {
  if (React54.isValidElement(child_0)) {
    return child_0.props;
  }
}
function Paper(t0) {
  const $ = (0, import_react_compiler_runtime.c)(6);
  const {
    children,
    style,
    className
  } = t0;
  let t1;
  if ($[0] !== className) {
    t1 = cls(paperMixin, className);
    $[0] = className;
    $[1] = t1;
  } else {
    t1 = $[1];
  }
  let t2;
  if ($[2] !== children || $[3] !== style || $[4] !== t1) {
    t2 = (0, import_jsx_runtime29.jsx)("div", { className: t1, style, children });
    $[2] = children;
    $[3] = style;
    $[4] = t1;
    $[5] = t2;
  } else {
    t2 = $[5];
  }
  return t2;
}
var RadioGroup4 = React54.forwardRef((t0, ref) => {
  const $ = (0, import_react_compiler_runtime.c)(9);
  let className;
  let props;
  if ($[0] !== t0) {
    ({
      className,
      ...props
    } = t0);
    $[0] = t0;
    $[1] = className;
    $[2] = props;
  } else {
    className = $[1];
    props = $[2];
  }
  let t1;
  if ($[3] !== className) {
    t1 = cls("grid gap-2", className);
    $[3] = className;
    $[4] = t1;
  } else {
    t1 = $[4];
  }
  let t2;
  if ($[5] !== props || $[6] !== ref || $[7] !== t1) {
    t2 = (0, import_jsx_runtime29.jsx)(Root25, { className: t1, ...props, ref });
    $[5] = props;
    $[6] = ref;
    $[7] = t1;
    $[8] = t2;
  } else {
    t2 = $[8];
  }
  return t2;
});
RadioGroup4.displayName = Root25.displayName;
var RadioGroupItem2 = React54.forwardRef((t0, ref) => {
  const $ = (0, import_react_compiler_runtime.c)(10);
  let className;
  let props;
  if ($[0] !== t0) {
    ({
      className,
      ...props
    } = t0);
    $[0] = t0;
    $[1] = className;
    $[2] = props;
  } else {
    className = $[1];
    props = $[2];
  }
  let t1;
  if ($[3] !== className) {
    t1 = cls("aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50", className);
    $[3] = className;
    $[4] = t1;
  } else {
    t1 = $[4];
  }
  let t2;
  if ($[5] === Symbol.for("react.memo_cache_sentinel")) {
    t2 = (0, import_jsx_runtime29.jsx)(Indicator, { className: "flex items-center justify-center", children: (0, import_jsx_runtime29.jsx)("div", { className: "h-2.5 w-2.5 fill-current text-current bg-primary rounded-lg" }) });
    $[5] = t2;
  } else {
    t2 = $[5];
  }
  let t3;
  if ($[6] !== props || $[7] !== ref || $[8] !== t1) {
    t3 = (0, import_jsx_runtime29.jsx)(Item23, { ref, className: t1, ...props, children: t2 });
    $[6] = props;
    $[7] = ref;
    $[8] = t1;
    $[9] = t3;
  } else {
    t3 = $[9];
  }
  return t3;
});
RadioGroupItem2.displayName = Item23.displayName;
function SearchBar(t0) {
  const $ = (0, import_react_compiler_runtime.c)(39);
  const {
    onClick,
    onTextSearch,
    placeholder: t1,
    expandable: t2,
    large: t3,
    innerClassName,
    className,
    autoFocus,
    disabled,
    loading,
    inputRef
  } = t0;
  const placeholder = t1 === void 0 ? "Search" : t1;
  const expandable = t2 === void 0 ? false : t2;
  const large = t3 === void 0 ? false : t3;
  const [searchText, setSearchText] = (0, import_react22.useState)("");
  const [active, setActive] = (0, import_react22.useState)(false);
  const deferredValues = useDebounceValue(searchText, 200);
  let t4;
  if ($[0] !== deferredValues || $[1] !== onTextSearch) {
    t4 = () => {
      if (!onTextSearch) {
        return;
      }
      if (deferredValues) {
        onTextSearch(deferredValues);
      } else {
        onTextSearch(void 0);
      }
    };
    $[0] = deferredValues;
    $[1] = onTextSearch;
    $[2] = t4;
  } else {
    t4 = $[2];
  }
  let t5;
  if ($[3] !== deferredValues) {
    t5 = [deferredValues];
    $[3] = deferredValues;
    $[4] = t5;
  } else {
    t5 = $[4];
  }
  import_react22.default.useEffect(t4, t5);
  let t6;
  if ($[5] !== onTextSearch) {
    t6 = () => {
      if (!onTextSearch) {
        return;
      }
      setSearchText("");
      onTextSearch(void 0);
    };
    $[5] = onTextSearch;
    $[6] = t6;
  } else {
    t6 = $[6];
  }
  const clearText = t6;
  const t7 = large ? "h-14" : "h-[42px]";
  let t8;
  if ($[7] !== className || $[8] !== t7) {
    t8 = cls("relative", t7, "bg-surface-accent-50 dark:bg-surface-800 border", defaultBorderMixin, "rounded-lg", className);
    $[7] = className;
    $[8] = t7;
    $[9] = t8;
  } else {
    t8 = $[9];
  }
  let t9;
  if ($[10] !== loading) {
    t9 = (0, import_jsx_runtime29.jsx)("div", { className: "absolute p-0 px-4 h-full pointer-events-none flex items-center justify-center top-0", children: loading ? (0, import_jsx_runtime29.jsx)(CircularProgress, { size: "smallest" }) : (0, import_jsx_runtime29.jsx)(SearchIcon, { className: "text-text-disabled dark:text-text-disabled-dark" }) });
    $[10] = loading;
    $[11] = t9;
  } else {
    t9 = $[11];
  }
  const t10 = searchText ?? "";
  const t11 = !onTextSearch;
  let t12;
  if ($[12] !== onTextSearch) {
    t12 = onTextSearch ? (event) => {
      setSearchText(event.target.value);
    } : void 0;
    $[12] = onTextSearch;
    $[13] = t12;
  } else {
    t12 = $[13];
  }
  let t13;
  let t14;
  if ($[14] === Symbol.for("react.memo_cache_sentinel")) {
    t13 = () => setActive(true);
    t14 = () => setActive(false);
    $[14] = t13;
    $[15] = t14;
  } else {
    t13 = $[14];
    t14 = $[15];
  }
  const t15 = (disabled || loading) && "pointer-events-none";
  const t16 = expandable ? active ? "w-[220px]" : "w-[180px]" : "";
  let t17;
  if ($[16] !== innerClassName || $[17] !== t15 || $[18] !== t16) {
    t17 = cls(t15, "placeholder-text-disabled dark:placeholder-text-disabled-dark", "relative flex items-center rounded-lg transition-all bg-transparent outline-none appearance-none border-none", "pl-12 h-full text-current ", t16, innerClassName);
    $[16] = innerClassName;
    $[17] = t15;
    $[18] = t16;
    $[19] = t17;
  } else {
    t17 = $[19];
  }
  let t18;
  if ($[20] !== autoFocus || $[21] !== inputRef || $[22] !== onClick || $[23] !== placeholder || $[24] !== t10 || $[25] !== t11 || $[26] !== t12 || $[27] !== t17) {
    t18 = (0, import_jsx_runtime29.jsx)("input", { value: t10, ref: inputRef, onClick, placeholder, readOnly: t11, onChange: t12, autoFocus, onFocus: t13, onBlur: t14, className: t17 });
    $[20] = autoFocus;
    $[21] = inputRef;
    $[22] = onClick;
    $[23] = placeholder;
    $[24] = t10;
    $[25] = t11;
    $[26] = t12;
    $[27] = t17;
    $[28] = t18;
  } else {
    t18 = $[28];
  }
  let t19;
  if ($[29] !== clearText || $[30] !== large || $[31] !== searchText) {
    t19 = searchText ? (0, import_jsx_runtime29.jsx)(IconButton, { className: `${large ? "mr-2 top-1" : "mr-1 top-0"} absolute right-0 z-10`, onClick: clearText, children: (0, import_jsx_runtime29.jsx)(CloseIcon, { size: "small" }) }) : (0, import_jsx_runtime29.jsx)("div", { style: {
      width: 26
    } });
    $[29] = clearText;
    $[30] = large;
    $[31] = searchText;
    $[32] = t19;
  } else {
    t19 = $[32];
  }
  let t20;
  if ($[33] !== onClick || $[34] !== t18 || $[35] !== t19 || $[36] !== t8 || $[37] !== t9) {
    t20 = (0, import_jsx_runtime29.jsxs)("div", { onClick, className: t8, children: [
      t9,
      t18,
      t19
    ] });
    $[33] = onClick;
    $[34] = t18;
    $[35] = t19;
    $[36] = t8;
    $[37] = t9;
    $[38] = t20;
  } else {
    t20 = $[38];
  }
  return t20;
}
var Select2 = (0, import_react22.forwardRef)(({
  inputRef,
  open,
  name,
  fullWidth = false,
  id,
  onOpenChange,
  value,
  onChange,
  onValueChange,
  className,
  inputClassName,
  placeholder,
  renderValue,
  label,
  size: size4 = "large",
  error: error2,
  disabled,
  padding = true,
  position = "item-aligned",
  endAdornment,
  invisible,
  children,
  ...props
}, ref) => {
  const [openInternal, setOpenInternal] = (0, import_react22.useState)(open ?? false);
  (0, import_react22.useEffect)(() => {
    setOpenInternal(open ?? false);
  }, [open]);
  const onValueChangeInternal = (0, import_react22.useCallback)((newValue) => {
    let typedValue = newValue;
    if (newValue === "true") typedValue = true;
    else if (newValue === "false") typedValue = false;
    else if (!isNaN(Number(newValue)) && newValue.trim() !== "") typedValue = Number(newValue);
    onValueChange == null ? void 0 : onValueChange(typedValue);
    if (onChange) {
      const event = {
        target: {
          name,
          value: typedValue
        }
      };
      onChange(event);
    }
  }, [onChange, onValueChange, name]);
  const hasValue = Array.isArray(value) ? value.length > 0 : value != null && value !== "" && value !== void 0;
  const stringValue = value !== void 0 ? String(value) : void 0;
  return (0, import_jsx_runtime29.jsxs)(Root26, { name, value: stringValue, open: openInternal, disabled, onValueChange: onValueChangeInternal, onOpenChange: (open_0) => {
    onOpenChange == null ? void 0 : onOpenChange(open_0);
    setOpenInternal(open_0);
  }, ...props, children: [
    typeof label === "string" ? (0, import_jsx_runtime29.jsx)(SelectInputLabel, { error: error2, children: label }) : label,
    (0, import_jsx_runtime29.jsx)("div", { className: cls("select-none rounded-md text-sm", invisible ? fieldBackgroundInvisibleMixin : fieldBackgroundMixin, disabled ? fieldBackgroundDisabledMixin : fieldBackgroundHoverMixin, "relative flex items-center", className, {
      "min-h-[28px]": size4 === "smallest",
      "min-h-[32px]": size4 === "small",
      "min-h-[42px]": size4 === "medium",
      "min-h-[64px]": size4 === "large",
      "w-fit": !fullWidth,
      "w-full": fullWidth
    }), children: (0, import_jsx_runtime29.jsx)(Trigger5, { ref: inputRef, id, asChild: true, children: (0, import_jsx_runtime29.jsxs)("div", { className: cls("h-full", padding ? {
      "px-4": size4 === "large",
      "px-3": size4 === "medium",
      "px-2": size4 === "small" || size4 === "smallest"
    } : "", "outline-none focus:outline-none", "select-none rounded-md text-sm", error2 ? "text-red-500 dark:text-red-600" : "focus:text-text-primary dark:focus:text-text-primary-dark", error2 ? "border border-red-500 dark:border-red-600" : "", disabled ? "text-surface-accent-600 dark:text-surface-accent-400" : "text-surface-accent-800 dark:text-white", "relative flex flex-row items-center", {
      "min-h-[28px]": size4 === "smallest",
      "min-h-[32px]": size4 === "small",
      "min-h-[42px]": size4 === "medium",
      "min-h-[64px]": size4 === "large",
      "w-full": fullWidth,
      "w-fit": !fullWidth
    }, inputClassName), children: [
      (0, import_jsx_runtime29.jsx)("div", { ref, className: cls("flex-grow max-w-full flex flex-row gap-2 items-center", "overflow-visible", {
        "min-h-[28px]": size4 === "smallest",
        "min-h-[32px]": size4 === "small",
        "min-h-[42px]": size4 === "medium",
        "min-h-[64px]": size4 === "large"
      }), children: (0, import_jsx_runtime29.jsxs)(Value, { onClick: (e) => {
        e.preventDefault();
        e.stopPropagation();
      }, placeholder, className: "w-full", children: [
        hasValue && value !== void 0 && renderValue ? renderValue(value) : placeholder,
        hasValue && !renderValue && (() => {
          const childrenProps = import_react22.Children.map(children, (child) => {
            if (import_react22.default.isValidElement(child)) {
              return child.props;
            }
          }).filter(Boolean);
          const option = childrenProps.find((o) => String(o.value) === String(value));
          return option == null ? void 0 : option.children;
        })()
      ] }) }),
      endAdornment && (0, import_jsx_runtime29.jsx)("div", { className: cls("h-full flex items-center"), onClick: (e_0) => {
        e_0.preventDefault();
        e_0.stopPropagation();
      }, children: endAdornment }),
      (0, import_jsx_runtime29.jsx)(Icon, { asChild: true, children: (0, import_jsx_runtime29.jsx)(KeyboardArrowDownIcon, { size: "medium", className: cls("transition", open ? "rotate-180" : "", {
        "px-2": size4 === "large",
        "px-1": size4 === "medium" || size4 === "small"
      }) }) })
    ] }) }) }),
    (0, import_jsx_runtime29.jsx)(Portal5, { children: (0, import_jsx_runtime29.jsx)(Content26, { position, className: cls(focusedDisabled, "z-50 relative overflow-hidden border bg-white dark:bg-surface-900 p-2 rounded-lg", defaultBorderMixin), children: (0, import_jsx_runtime29.jsx)(Viewport, { className: "p-1", style: {
      maxHeight: "var(--radix-select-content-available-height)"
    }, children }) }) })
  ] });
});
Select2.displayName = "Select";
function SelectItem2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(11);
  const {
    value,
    children,
    disabled,
    className
  } = t0;
  const stringValue = String(value);
  const t1 = disabled ? "opacity-50 cursor-not-allowed" : "cursor-pointer";
  let t2;
  if ($[0] !== className || $[1] !== t1) {
    t2 = cls("w-full", "relative flex items-center p-2 rounded-md text-sm text-surface-accent-700 dark:text-surface-accent-300", "focus:z-10", "data-[state=checked]:bg-surface-accent-100 data-[state=checked]:dark:bg-surface-accent-800 focus:bg-surface-accent-100 dark:focus:bg-surface-950", "data-[state=checked]:focus:bg-surface-accent-200 data-[state=checked]:dark:focus:bg-surface-950", t1, "[&>*]:w-full", "overflow-visible", className);
    $[0] = className;
    $[1] = t1;
    $[2] = t2;
  } else {
    t2 = $[2];
  }
  let t3;
  if ($[3] !== children) {
    t3 = (0, import_jsx_runtime29.jsx)(ItemText, { children });
    $[3] = children;
    $[4] = t3;
  } else {
    t3 = $[4];
  }
  let t4;
  if ($[5] === Symbol.for("react.memo_cache_sentinel")) {
    t4 = (0, import_jsx_runtime29.jsx)("div", { className: "absolute left-1 data-[state=checked]:block hidden", children: (0, import_jsx_runtime29.jsx)(CheckIcon, { size: 16 }) });
    $[5] = t4;
  } else {
    t4 = $[5];
  }
  let t5;
  if ($[6] !== disabled || $[7] !== stringValue || $[8] !== t2 || $[9] !== t3) {
    t5 = (0, import_jsx_runtime29.jsxs)(Item4, { value: stringValue, disabled, className: t2, children: [
      t3,
      t4
    ] }, stringValue);
    $[6] = disabled;
    $[7] = stringValue;
    $[8] = t2;
    $[9] = t3;
    $[10] = t5;
  } else {
    t5 = $[10];
  }
  return t5;
}
function SelectGroup2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(8);
  const {
    label,
    children,
    className
  } = t0;
  let t1;
  if ($[0] !== className) {
    t1 = cls("text-xs text-surface-accent-900 dark:text-white uppercase tracking-wider font-bold mt-6 first:mt-2", "px-2 py-2", className);
    $[0] = className;
    $[1] = t1;
  } else {
    t1 = $[1];
  }
  let t2;
  if ($[2] !== label || $[3] !== t1) {
    t2 = (0, import_jsx_runtime29.jsx)(Group2, { className: t1, children: label });
    $[2] = label;
    $[3] = t1;
    $[4] = t2;
  } else {
    t2 = $[4];
  }
  let t3;
  if ($[5] !== children || $[6] !== t2) {
    t3 = (0, import_jsx_runtime29.jsxs)(import_jsx_runtime29.Fragment, { children: [
      t2,
      children
    ] });
    $[5] = children;
    $[6] = t2;
    $[7] = t3;
  } else {
    t3 = $[7];
  }
  return t3;
}
function SliderThumb2(props) {
  var _a2;
  const $ = (0, import_react_compiler_runtime.c)(13);
  const t0 = props.hovered;
  const t1 = !props.props.disabled;
  let t2;
  if ($[0] !== props.classes || $[1] !== props.props.disabled || $[2] !== t1) {
    t2 = cls({
      "border-primary bg-primary outline-none": t1,
      "border-surface-accent-300 bg-surface-accent-300 dark:border-surface-700 dark:bg-surface-700": props.props.disabled
    }, props.classes, "focus-visible:ring-4 focus-visible:ring-primary focus-visible:ring-opacity-50", "hover:ring-4 hover:ring-primary hover:ring-opacity-25", "block rounded-full transition-colors focus-visible:outline-none disabled:pointer-events-none disabled:opacity-50");
    $[0] = props.classes;
    $[1] = props.props.disabled;
    $[2] = t1;
    $[3] = t2;
  } else {
    t2 = $[3];
  }
  let t3;
  if ($[4] !== t2) {
    t3 = (0, import_jsx_runtime29.jsx)(Trigger6, { asChild: true, children: (0, import_jsx_runtime29.jsx)(Thumb, { className: t2 }) });
    $[4] = t2;
    $[5] = t3;
  } else {
    t3 = $[5];
  }
  let t4;
  if ($[6] === Symbol.for("react.memo_cache_sentinel")) {
    t4 = cls("TooltipContent", "max-w-lg leading-relaxed", "z-50 rounded px-3 py-2 text-xs leading-none bg-surface-accent-700 dark:bg-surface-accent-800 bg-opacity-90 font-medium text-surface-accent-50 shadow-2xl select-none duration-400 ease-in transform opacity-100");
    $[6] = t4;
  } else {
    t4 = $[6];
  }
  const t5 = (_a2 = props.props.value) == null ? void 0 : _a2[props.index];
  let t6;
  if ($[7] !== t5) {
    t6 = (0, import_jsx_runtime29.jsx)(Content27, { side: "top", sideOffset: 5, className: t4, children: t5 });
    $[7] = t5;
    $[8] = t6;
  } else {
    t6 = $[8];
  }
  let t7;
  if ($[9] !== props.hovered || $[10] !== t3 || $[11] !== t6) {
    t7 = (0, import_jsx_runtime29.jsxs)(Root34, { open: t0, children: [
      t3,
      t6
    ] });
    $[9] = props.hovered;
    $[10] = t3;
    $[11] = t6;
    $[12] = t7;
  } else {
    t7 = $[12];
  }
  return t7;
}
var Slider2 = React54.forwardRef((t0, ref) => {
  const $ = (0, import_react_compiler_runtime.c)(35);
  let className;
  let props;
  let t1;
  if ($[0] !== t0) {
    ({
      className,
      size: t1,
      ...props
    } = t0);
    $[0] = t0;
    $[1] = className;
    $[2] = props;
    $[3] = t1;
  } else {
    className = $[1];
    props = $[2];
    t1 = $[3];
  }
  const size4 = t1 === void 0 ? "regular" : t1;
  const [hovered, setHovered] = React54.useState(false);
  const thumbSizeClasses = size4 === "small" ? "h-4 w-4" : "h-6 w-6";
  let t2;
  let t3;
  if ($[4] === Symbol.for("react.memo_cache_sentinel")) {
    t2 = () => setHovered(true);
    t3 = () => setHovered(false);
    $[4] = t2;
    $[5] = t3;
  } else {
    t2 = $[4];
    t3 = $[5];
  }
  let t4;
  if ($[6] !== className) {
    t4 = cls("relative flex w-full touch-none select-none items-center", className);
    $[6] = className;
    $[7] = t4;
  } else {
    t4 = $[7];
  }
  const t5 = size4 === "small" ? 4 : 8;
  let t6;
  if ($[8] !== t5) {
    t6 = {
      height: t5
    };
    $[8] = t5;
    $[9] = t6;
  } else {
    t6 = $[9];
  }
  const t7 = !props.disabled;
  let t8;
  if ($[10] !== props.disabled || $[11] !== t7) {
    t8 = cls("absolute h-full", {
      "bg-primary": t7,
      "bg-surface-accent-300 dark:bg-surface-700": props.disabled
    });
    $[10] = props.disabled;
    $[11] = t7;
    $[12] = t8;
  } else {
    t8 = $[12];
  }
  let t9;
  if ($[13] !== t8) {
    t9 = (0, import_jsx_runtime29.jsx)(Range, { className: t8 });
    $[13] = t8;
    $[14] = t9;
  } else {
    t9 = $[14];
  }
  let t10;
  if ($[15] !== t6 || $[16] !== t9) {
    t10 = (0, import_jsx_runtime29.jsx)(Track, { style: t6, className: "relative w-full grow overflow-hidden rounded-full bg-surface-accent-300 bg-opacity-40 dark:bg-surface-700 dark:bg-opacity-40", children: t9 });
    $[15] = t6;
    $[16] = t9;
    $[17] = t10;
  } else {
    t10 = $[17];
  }
  let t11;
  if ($[18] !== props.value) {
    t11 = props.value ?? [0];
    $[18] = props.value;
    $[19] = t11;
  } else {
    t11 = $[19];
  }
  let t12;
  if ($[20] !== hovered || $[21] !== props || $[22] !== t11 || $[23] !== thumbSizeClasses) {
    let t132;
    if ($[25] !== hovered || $[26] !== props || $[27] !== thumbSizeClasses) {
      t132 = (_2, index2) => (0, import_jsx_runtime29.jsx)(SliderThumb2, { index: index2, props, hovered, classes: thumbSizeClasses }, index2);
      $[25] = hovered;
      $[26] = props;
      $[27] = thumbSizeClasses;
      $[28] = t132;
    } else {
      t132 = $[28];
    }
    t12 = t11.map(t132);
    $[20] = hovered;
    $[21] = props;
    $[22] = t11;
    $[23] = thumbSizeClasses;
    $[24] = t12;
  } else {
    t12 = $[24];
  }
  let t13;
  if ($[29] !== props || $[30] !== ref || $[31] !== t10 || $[32] !== t12 || $[33] !== t4) {
    t13 = (0, import_jsx_runtime29.jsx)(Provider, { delayDuration: 200, children: (0, import_jsx_runtime29.jsxs)(Root9, { ref, onMouseEnter: t2, onMouseLeave: t3, className: t4, ...props, children: [
      t10,
      t12
    ] }) });
    $[29] = props;
    $[30] = ref;
    $[31] = t10;
    $[32] = t12;
    $[33] = t4;
    $[34] = t13;
  } else {
    t13 = $[34];
  }
  return t13;
});
Slider2.displayName = "Slider";
var Sheet = (t0) => {
  const $ = (0, import_react_compiler_runtime.c)(66);
  let children;
  let className;
  let onOpenChange;
  let open;
  let overlayClassName;
  let overlayStyle;
  let props;
  let style;
  let t1;
  let t2;
  let t3;
  let title;
  let transparent;
  if ($[0] !== t0) {
    ({
      children,
      side: t1,
      title,
      modal: t2,
      includeBackgroundOverlay: t3,
      open,
      onOpenChange,
      transparent,
      className,
      style,
      overlayClassName,
      overlayStyle,
      ...props
    } = t0);
    $[0] = t0;
    $[1] = children;
    $[2] = className;
    $[3] = onOpenChange;
    $[4] = open;
    $[5] = overlayClassName;
    $[6] = overlayStyle;
    $[7] = props;
    $[8] = style;
    $[9] = t1;
    $[10] = t2;
    $[11] = t3;
    $[12] = title;
    $[13] = transparent;
  } else {
    children = $[1];
    className = $[2];
    onOpenChange = $[3];
    open = $[4];
    overlayClassName = $[5];
    overlayStyle = $[6];
    props = $[7];
    style = $[8];
    t1 = $[9];
    t2 = $[10];
    t3 = $[11];
    title = $[12];
    transparent = $[13];
  }
  const side = t1 === void 0 ? "right" : t1;
  const modal = t2 === void 0 ? true : t2;
  const includeBackgroundOverlay = t3 === void 0 ? true : t3;
  const [displayed, setDisplayed] = (0, import_react22.useState)(false);
  let t4;
  let t5;
  if ($[14] !== open) {
    t4 = () => {
      const timeout = setTimeout(() => {
        setDisplayed(open);
      }, 1);
      return () => clearTimeout(timeout);
    };
    t5 = [open];
    $[14] = open;
    $[15] = t4;
    $[16] = t5;
  } else {
    t4 = $[15];
    t5 = $[16];
  }
  (0, import_react22.useEffect)(t4, t5);
  let T0;
  let T1;
  let T2;
  let t10;
  let t11;
  let t12;
  let t13;
  let t6;
  let t7;
  let t8;
  let t9;
  if ($[17] !== className || $[18] !== displayed || $[19] !== includeBackgroundOverlay || $[20] !== modal || $[21] !== onOpenChange || $[22] !== open || $[23] !== overlayClassName || $[24] !== overlayStyle || $[25] !== props || $[26] !== side || $[27] !== title || $[28] !== transparent) {
    const transformValue = {
      top: "-translate-y-full",
      bottom: "translate-y-full",
      left: "-translate-x-full",
      right: "translate-x-full"
    };
    const borderClass = {
      top: "border-b",
      bottom: "border-t",
      left: "border-r",
      right: "border-l"
    };
    T2 = Root3;
    t11 = displayed || open;
    t12 = modal;
    t13 = onOpenChange;
    T1 = Portal2;
    const t142 = title ?? "Sheet";
    if ($[40] !== t142) {
      t9 = (0, import_jsx_runtime29.jsx)(Title, { autoFocus: true, tabIndex: 0, children: t142 });
      $[40] = t142;
      $[41] = t9;
    } else {
      t9 = $[41];
    }
    if ($[42] !== displayed || $[43] !== includeBackgroundOverlay || $[44] !== open || $[45] !== overlayClassName || $[46] !== overlayStyle) {
      t10 = includeBackgroundOverlay && (0, import_jsx_runtime29.jsx)(Overlay, { className: cls("outline-none", "fixed inset-0 transition-opacity z-20 ease-in-out duration-100 backdrop-blur-sm", "bg-black bg-opacity-50", "dark:bg-surface-900 dark:bg-opacity-60", displayed && open ? "opacity-100" : "opacity-0", overlayClassName), style: {
        pointerEvents: displayed ? "auto" : "none",
        ...overlayStyle
      } });
      $[42] = displayed;
      $[43] = includeBackgroundOverlay;
      $[44] = open;
      $[45] = overlayClassName;
      $[46] = overlayStyle;
      $[47] = t10;
    } else {
      t10 = $[47];
    }
    T0 = Content2;
    t6 = props;
    t7 = _temp;
    t8 = cls("outline-none", borderClass[side], defaultBorderMixin, "transform-gpu", "will-change-transform", "text-surface-accent-900 dark:text-white", "fixed transform z-20 transition-all ease-in-out", !displayed ? "duration-150" : "duration-100", "outline-none focus:outline-none", transparent ? "" : "shadow-md bg-white dark:bg-surface-950", side === "top" || side === "bottom" ? "w-full" : "h-full", side === "left" || side === "top" ? "left-0 top-0" : "right-0 bottom-0", displayed && open ? "opacity-100" : "opacity-50", !displayed || !open ? transformValue[side] : "", className);
    $[17] = className;
    $[18] = displayed;
    $[19] = includeBackgroundOverlay;
    $[20] = modal;
    $[21] = onOpenChange;
    $[22] = open;
    $[23] = overlayClassName;
    $[24] = overlayStyle;
    $[25] = props;
    $[26] = side;
    $[27] = title;
    $[28] = transparent;
    $[29] = T0;
    $[30] = T1;
    $[31] = T2;
    $[32] = t10;
    $[33] = t11;
    $[34] = t12;
    $[35] = t13;
    $[36] = t6;
    $[37] = t7;
    $[38] = t8;
    $[39] = t9;
  } else {
    T0 = $[29];
    T1 = $[30];
    T2 = $[31];
    t10 = $[32];
    t11 = $[33];
    t12 = $[34];
    t13 = $[35];
    t6 = $[36];
    t7 = $[37];
    t8 = $[38];
    t9 = $[39];
  }
  let t14;
  if ($[48] !== T0 || $[49] !== children || $[50] !== style || $[51] !== t6 || $[52] !== t7 || $[53] !== t8) {
    t14 = (0, import_jsx_runtime29.jsx)(T0, { ...t6, onFocusCapture: t7, className: t8, style, children });
    $[48] = T0;
    $[49] = children;
    $[50] = style;
    $[51] = t6;
    $[52] = t7;
    $[53] = t8;
    $[54] = t14;
  } else {
    t14 = $[54];
  }
  let t15;
  if ($[55] !== T1 || $[56] !== t10 || $[57] !== t14 || $[58] !== t9) {
    t15 = (0, import_jsx_runtime29.jsxs)(T1, { children: [
      t9,
      t10,
      t14
    ] });
    $[55] = T1;
    $[56] = t10;
    $[57] = t14;
    $[58] = t9;
    $[59] = t15;
  } else {
    t15 = $[59];
  }
  let t16;
  if ($[60] !== T2 || $[61] !== t11 || $[62] !== t12 || $[63] !== t13 || $[64] !== t15) {
    t16 = (0, import_jsx_runtime29.jsx)(T2, { open: t11, modal: t12, onOpenChange: t13, children: t15 });
    $[60] = T2;
    $[61] = t11;
    $[62] = t12;
    $[63] = t13;
    $[64] = t15;
    $[65] = t16;
  } else {
    t16 = $[65];
  }
  return t16;
};
function _temp(event) {
  return event.preventDefault();
}
function getStyleValue(value) {
  return parseInt(value, 10) || 0;
}
var styles$1 = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function isEmpty2(obj) {
  return obj === void 0 || obj === null || Object.keys(obj).length === 0 || obj.outerHeightStyle === 0 && !obj.overflow;
}
var TextareaAutosize = React54.forwardRef(function TextareaAutosize2(props, ref) {
  const {
    onChange,
    onScroll,
    onResize,
    maxRows,
    minRows = 1,
    style,
    value,
    onFocus,
    onBlur,
    sizeRef,
    ignoreBoxSizing,
    ...other
  } = props;
  const {
    current: isControlled
  } = React54.useRef(value != null);
  const inputRef = React54.useRef(null);
  const handleRef = useForkRef(ref, inputRef);
  const shadowRef = React54.useRef(null);
  const renders = React54.useRef(0);
  const [state, setState] = React54.useState({
    outerHeightStyle: 0
  });
  const getUpdatedState = React54.useCallback(() => {
    const input = inputRef.current;
    if (typeof window === "undefined") {
      return {
        outerHeightStyle: 0
      };
    }
    const containerWindow = window;
    const computedStyle = containerWindow.getComputedStyle(input);
    if (computedStyle.width === "0px") {
      return {
        outerHeightStyle: 0
      };
    }
    const sizeReferenceElement = (sizeRef == null ? void 0 : sizeRef.current) ?? shadowRef.current;
    const inputShallow = shadowRef.current;
    sizeReferenceElement.style.width = computedStyle.width;
    inputShallow.value = input.value || props.placeholder || "x";
    if (inputShallow.value.slice(-1) === "\n") {
      inputShallow.value += " ";
    }
    const boxSizing = computedStyle.boxSizing;
    const padding = getStyleValue(computedStyle.paddingBottom) + getStyleValue(computedStyle.paddingTop);
    const border = getStyleValue(computedStyle.borderBottomWidth) + getStyleValue(computedStyle.borderTopWidth);
    const minHeight = getStyleValue(computedStyle.minHeight);
    const innerHeight = sizeReferenceElement.scrollHeight;
    inputShallow.value = "x";
    const singleRowHeight = sizeReferenceElement.scrollHeight;
    let outerHeight = innerHeight;
    if (minRows) {
      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);
    }
    if (maxRows) {
      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);
    }
    outerHeight = Math.max(outerHeight, singleRowHeight, minHeight);
    const outerHeightStyle = outerHeight + (!ignoreBoxSizing && boxSizing === "border-box" ? padding + border : 0);
    const overflow = Math.abs(outerHeight - innerHeight) <= 1;
    return {
      outerHeightStyle,
      overflow
    };
  }, [maxRows, minRows, props.placeholder]);
  const updateState = (prevState, newState) => {
    const {
      outerHeightStyle: outerHeightStyle_0,
      overflow: overflow_0
    } = newState;
    if (renders.current < 20 && (outerHeightStyle_0 > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle_0) > 1 || prevState.overflow !== overflow_0)) {
      renders.current += 1;
      return {
        overflow: overflow_0,
        outerHeightStyle: outerHeightStyle_0
      };
    }
    if (true) {
      if (renders.current === 20) {
        console.error(["MUI: Too many re-renders. The layout is unstable.", "TextareaAutosize limits the number of renders to prevent an infinite loop."].join("\n"));
      }
    }
    return prevState;
  };
  const syncHeight = React54.useCallback(() => {
    const newState_0 = getUpdatedState();
    if (isEmpty2(newState_0)) {
      return;
    }
    if (onResize) {
      onResize(newState_0);
    }
    setState((prevState_0) => {
      return updateState(prevState_0, newState_0);
    });
  }, [getUpdatedState, onResize]);
  const syncHeightWithFlushSync = () => {
    const newState_1 = getUpdatedState();
    if (isEmpty2(newState_1)) {
      return;
    }
    ReactDOM5.flushSync(() => {
      setState((prevState_1) => {
        return updateState(prevState_1, newState_1);
      });
    });
  };
  React54.useEffect(() => {
    const handleResize = debounce(() => {
      renders.current = 0;
      if (inputRef.current) {
        syncHeightWithFlushSync();
      }
    });
    let resizeObserver;
    const input_0 = inputRef.current;
    const containerWindow_0 = window;
    if (typeof window === "undefined") {
      return;
    }
    containerWindow_0.addEventListener("resize", handleResize);
    if (typeof ResizeObserver !== "undefined") {
      resizeObserver = new ResizeObserver(handleResize);
      resizeObserver.observe(input_0);
    }
    return () => {
      handleResize.clear();
      containerWindow_0.removeEventListener("resize", handleResize);
      if (resizeObserver) {
        resizeObserver.disconnect();
      }
    };
  });
  (0, import_react22.useLayoutEffect)(() => {
    syncHeight();
  });
  React54.useEffect(() => {
    renders.current = 0;
  }, [value]);
  const handleChange = (event) => {
    renders.current = 0;
    if (!isControlled) {
      syncHeight();
    }
    if (onChange) {
      onChange(event);
    }
  };
  return (0, import_jsx_runtime29.jsxs)(React54.Fragment, { children: [
    (0, import_jsx_runtime29.jsx)(
      "textarea",
      {
        value,
        onChange: handleChange,
        className: props.className,
        ref: handleRef,
        onFocus,
        onBlur,
        rows: minRows,
        style: {
          height: state.outerHeightStyle,
          // Need a large enough difference to allow scrolling.
          // This prevents infinite rendering loop.
          overflow: state.overflow ? "hidden" : void 0,
          ...style
        },
        onScroll,
        ...other
      }
    ),
    (0, import_jsx_runtime29.jsx)("textarea", { "aria-hidden": true, className: cls(props.className, props.shadowClassName), readOnly: true, ref: shadowRef, tabIndex: -1, style: {
      padding: 0,
      ...styles$1.shadow,
      ...style
    } })
  ] });
});
function useForkRef(...refs) {
  return React54.useMemo(() => {
    if (refs.every((ref) => ref == null)) {
      return null;
    }
    return (instance) => {
      refs.forEach((ref) => {
        setRef2(ref, instance);
      });
    };
  }, refs);
}
function setRef2(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
}
var TextField = (0, import_react22.forwardRef)(({
  value,
  onChange,
  label,
  type = "text",
  multiline = false,
  invisible,
  maxRows,
  minRows,
  disabled,
  error: error2,
  endAdornment,
  autoFocus,
  placeholder,
  size: size4 = "large",
  className,
  style,
  inputClassName,
  inputStyle,
  inputRef: inputRefProp,
  ...inputProps
}, ref) => {
  const inputRef = inputRefProp ?? (0, import_react22.useRef)(null);
  const [focused, setFocused] = import_react22.default.useState(document.activeElement === inputRef.current);
  const hasValue = value !== void 0 && value !== null && value !== "";
  (0, import_react22.useEffect)(() => {
    if (type !== "number") return;
    const handleWheel = (event) => {
      if (event.target instanceof HTMLElement) event.target.blur();
    };
    const element = "current" in inputRef ? inputRef.current : inputRef;
    element == null ? void 0 : element.addEventListener("wheel", handleWheel);
    return () => {
      element == null ? void 0 : element.removeEventListener("wheel", handleWheel);
    };
  }, [inputRef, type]);
  const input = multiline ? (0, import_jsx_runtime29.jsx)(TextareaAutosize, { ...inputProps, ref: inputRef, placeholder: focused || hasValue || !label ? placeholder : void 0, autoFocus, minRows, maxRows, value: value ?? "", onChange, style: inputStyle, className: cls(invisible ? focusedInvisibleMixin : "", "rounded-md resize-none w-full outline-none p-[32px] text-base bg-transparent min-h-[64px] px-3 pt-8", disabled && "outline-none opacity-50 text-surface-accent-600 dark:text-surface-accent-500", inputClassName) }) : (0, import_jsx_runtime29.jsx)("input", { ...inputProps, ref: inputRef, disabled, style: inputStyle, className: cls("w-full outline-none bg-transparent leading-normal px-3", "rounded-md", "focused:text-text-primary focused:dark:text-text-primary-dark", invisible ? focusedInvisibleMixin : "", disabled ? fieldBackgroundDisabledMixin : fieldBackgroundHoverMixin, {
    "min-h-[28px]": size4 === "smallest",
    "min-h-[32px]": size4 === "small",
    "min-h-[42px]": size4 === "medium",
    "min-h-[64px]": size4 === "large"
  }, label ? size4 === "large" ? "pt-8 pb-2" : "pt-4 pb-2" : "py-2", endAdornment ? "pr-10" : "pr-3", disabled && "outline-none opacity-50 dark:opacity-50 text-surface-accent-800 dark:text-white", inputClassName), placeholder: focused || hasValue || !label ? placeholder : void 0, autoFocus, onFocus: () => setFocused(true), onBlur: () => setFocused(false), type, value: type === "number" && Number.isNaN(value) ? "" : value ?? "", onChange });
  return (0, import_jsx_runtime29.jsxs)("div", { ref, className: cls("rounded-md relative max-w-full", invisible ? fieldBackgroundInvisibleMixin : fieldBackgroundMixin, disabled ? fieldBackgroundDisabledMixin : fieldBackgroundHoverMixin, error2 ? "border border-red-500 dark:border-red-600" : "", {
    "min-h-[28px]": size4 === "smallest",
    "min-h-[32px]": size4 === "small",
    "min-h-[42px]": size4 === "medium",
    "min-h-[64px]": size4 === "large"
  }, className), style, children: [
    label && (0, import_jsx_runtime29.jsx)(InputLabel, { className: cls("pointer-events-none absolute", size4 === "large" ? "top-1" : "top-[-1px]", !error2 ? focused ? "text-primary dark:text-primary" : "text-text-secondary dark:text-text-secondary-dark" : "text-red-500 dark:text-red-600", disabled ? "opacity-50" : ""), shrink: hasValue || focused, children: label }),
    input,
    endAdornment && (0, import_jsx_runtime29.jsx)("div", { className: cls("flex flex-row justify-center items-center absolute h-full right-0 top-0", {
      "mr-4": size4 === "large",
      "mr-3": size4 === "medium",
      "mr-2": size4 === "small" || size4 === "smallest"
    }), children: endAdornment })
  ] });
});
TextField.displayName = "TextField";
var Tooltip2 = (t0) => {
  const $ = (0, import_react_compiler_runtime.c)(28);
  const {
    open,
    defaultOpen,
    side: t1,
    delayDuration: t2,
    sideOffset,
    align,
    onOpenChange,
    title,
    tooltipClassName,
    tooltipStyle,
    children,
    asChild: t3,
    container,
    className,
    style
  } = t0;
  const side = t1 === void 0 ? "bottom" : t1;
  const delayDuration = t2 === void 0 ? 200 : t2;
  const asChild = t3 === void 0 ? false : t3;
  useInjectStyles("Tooltip", styles);
  if (!title) {
    let t42;
    if ($[0] !== children) {
      t42 = (0, import_jsx_runtime29.jsx)(import_jsx_runtime29.Fragment, { children });
      $[0] = children;
      $[1] = t42;
    } else {
      t42 = $[1];
    }
    return t42;
  }
  let t4;
  if ($[2] !== asChild || $[3] !== children || $[4] !== className || $[5] !== style) {
    t4 = asChild ? (0, import_jsx_runtime29.jsx)(Trigger6, { asChild: true, children }) : (0, import_jsx_runtime29.jsx)(Trigger6, { asChild: true, children: (0, import_jsx_runtime29.jsx)("div", { style, className, children }) });
    $[2] = asChild;
    $[3] = children;
    $[4] = className;
    $[5] = style;
    $[6] = t4;
  } else {
    t4 = $[6];
  }
  const trigger = t4;
  let t5;
  if ($[7] !== tooltipClassName) {
    t5 = cls("TooltipContent", "max-w-lg leading-relaxed", "z-50 rounded px-3 py-2 text-xs leading-none bg-surface-accent-700 dark:bg-surface-accent-800 bg-opacity-90 font-medium text-surface-accent-50 shadow-2xl select-none duration-400 ease-in transform opacity-100", tooltipClassName);
    $[7] = tooltipClassName;
    $[8] = t5;
  } else {
    t5 = $[8];
  }
  const t6 = sideOffset === void 0 ? 4 : sideOffset;
  let t7;
  if ($[9] !== align || $[10] !== side || $[11] !== t5 || $[12] !== t6 || $[13] !== title || $[14] !== tooltipStyle) {
    t7 = (0, import_jsx_runtime29.jsx)(Content27, { className: t5, style: tooltipStyle, sideOffset: t6, align, side, children: title });
    $[9] = align;
    $[10] = side;
    $[11] = t5;
    $[12] = t6;
    $[13] = title;
    $[14] = tooltipStyle;
    $[15] = t7;
  } else {
    t7 = $[15];
  }
  let t8;
  if ($[16] !== container || $[17] !== t7) {
    t8 = (0, import_jsx_runtime29.jsx)(Portal6, { container, children: t7 });
    $[16] = container;
    $[17] = t7;
    $[18] = t8;
  } else {
    t8 = $[18];
  }
  let t9;
  if ($[19] !== defaultOpen || $[20] !== onOpenChange || $[21] !== open || $[22] !== t8 || $[23] !== trigger) {
    t9 = (0, import_jsx_runtime29.jsxs)(Root34, { open, onOpenChange, defaultOpen, children: [
      trigger,
      t8
    ] });
    $[19] = defaultOpen;
    $[20] = onOpenChange;
    $[21] = open;
    $[22] = t8;
    $[23] = trigger;
    $[24] = t9;
  } else {
    t9 = $[24];
  }
  let t10;
  if ($[25] !== delayDuration || $[26] !== t9) {
    t10 = (0, import_jsx_runtime29.jsx)(Provider, { delayDuration, children: t9 });
    $[25] = delayDuration;
    $[26] = t9;
    $[27] = t10;
  } else {
    t10 = $[27];
  }
  return t10;
};
var styles = `

.TooltipContent {
  animation-duration: 220ms;
  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
  will-change: transform, opacity;
}

.TooltipContent[data-state='delayed-open'][data-side='top'] {
  animation-name: slideDownAndFade;
}
.TooltipContent[data-state='delayed-open'][data-side='right'] {
  animation-name: slideLeftAndFade;
}
.TooltipContent[data-state='delayed-open'][data-side='bottom'] {
  animation-name: slideUpAndFade;
}
.TooltipContent[data-state='delayed-open'][data-side='left'] {
  animation-name: slideRightAndFade;
}


@keyframes slideUpAndFade {
  from {
    opacity: 0;
    transform: translateY(4px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideRightAndFade {
  from {
    opacity: 0;
    transform: translateX(-4px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideDownAndFade {
  from {
    opacity: 0;
    transform: translateY(-4px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideLeftAndFade {
  from {
    opacity: 0;
    transform: translateX(4px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}`;
function Tabs2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(10);
  const {
    value,
    onValueChange,
    className,
    innerClassName,
    children
  } = t0;
  let t1;
  if ($[0] !== innerClassName) {
    t1 = cls("w-max", "flex text-sm font-medium text-center text-surface-accent-800 dark:text-white max-w-full overflow-auto no-scrollbar items-end", innerClassName);
    $[0] = innerClassName;
    $[1] = t1;
  } else {
    t1 = $[1];
  }
  let t2;
  if ($[2] !== children || $[3] !== t1) {
    t2 = (0, import_jsx_runtime29.jsx)(List, { className: t1, children });
    $[2] = children;
    $[3] = t1;
    $[4] = t2;
  } else {
    t2 = $[4];
  }
  let t3;
  if ($[5] !== className || $[6] !== onValueChange || $[7] !== t2 || $[8] !== value) {
    t3 = (0, import_jsx_runtime29.jsx)(Root27, { value, onValueChange, className, children: t2 });
    $[5] = className;
    $[6] = onValueChange;
    $[7] = t2;
    $[8] = value;
    $[9] = t3;
  } else {
    t3 = $[9];
  }
  return t3;
}
function Tab(t0) {
  const $ = (0, import_react_compiler_runtime.c)(13);
  const {
    value,
    className,
    innerClassName,
    children,
    disabled
  } = t0;
  let t1;
  if ($[0] !== className || $[1] !== disabled) {
    t1 = cls("border-b-2 border-transparent", "data-[state=active]:border-secondary", disabled ? "text-surface-accent-400 dark:text-surface-accent-500" : cls("text-surface-accent-700 dark:text-surface-accent-300", "data-[state=active]:text-surface-accent-900 data-[state=active]:dark:text-white", "hover:text-surface-accent-800 dark:hover:text-surface-accent-200"), className);
    $[0] = className;
    $[1] = disabled;
    $[2] = t1;
  } else {
    t1 = $[2];
  }
  let t2;
  if ($[3] !== innerClassName) {
    t2 = cls("line-clamp-1", "uppercase inline-block p-2 px-4 rounded", "hover:bg-surface-accent-200 hover:bg-opacity-75 dark:hover:bg-surface-accent-800", innerClassName);
    $[3] = innerClassName;
    $[4] = t2;
  } else {
    t2 = $[4];
  }
  let t3;
  if ($[5] !== children || $[6] !== t2) {
    t3 = (0, import_jsx_runtime29.jsx)("div", { className: t2, children });
    $[5] = children;
    $[6] = t2;
    $[7] = t3;
  } else {
    t3 = $[7];
  }
  let t4;
  if ($[8] !== disabled || $[9] !== t1 || $[10] !== t3 || $[11] !== value) {
    t4 = (0, import_jsx_runtime29.jsx)(Trigger7, { value, disabled, className: t1, children: t3 });
    $[8] = disabled;
    $[9] = t1;
    $[10] = t3;
    $[11] = value;
    $[12] = t4;
  } else {
    t4 = $[12];
  }
  return t4;
}
var Table = ({
  children,
  className,
  style,
  ...rest
}) => (0, import_jsx_runtime29.jsx)("table", { className: cls("text-left text-surface-800 dark:text-white rounded-md overflow-x-auto", className), style, ...rest, children });
var TableBody = ({
  children,
  className,
  ...rest
}) => (0, import_jsx_runtime29.jsx)("tbody", { className: cls("bg-white dark:bg-surface-950 text-sm divide-y divide-surface-100 dark:divide-surface-700 dark:divide-opacity-70", className), ...rest, children });
var TableHeader = ({
  children,
  className,
  ...rest
}) => (0, import_jsx_runtime29.jsx)("thead", { ...rest, children: (0, import_jsx_runtime29.jsx)("tr", { className: cls(defaultBorderMixin, "text-sm font-medium text-surface-700 dark:text-surface-accent-300", "bg-surface-accent-50 border-b dark:bg-surface-900", className), children }) });
var TableRow = ({
  children,
  className,
  onClick,
  style,
  ...rest
}) => (0, import_jsx_runtime29.jsx)("tr", { onClick, style, className: cls("bg-white dark:bg-surface-950", onClick ? "hover:bg-surface-accent-100 dark:hover:bg-surface-accent-800 cursor-pointer" : "", className), ...rest, children });
var TableCell = ({
  children,
  header = false,
  scope = "",
  align,
  className,
  style,
  colspan,
  ...rest
}) => {
  const ref = (0, import_react22.useRef)(null);
  const Tag = header || getParentName(ref.current) === "TableHeader" ? "th" : "td";
  return (0, import_jsx_runtime29.jsx)(Tag, { scope, colSpan: colspan, ref, style, className: cls("px-4 py-3 text-clip ", align === "center" ? "text-center" : align === "right" ? "text-right" : "text-left", className), ...rest, children });
};
function getParentName(element) {
  var _a2;
  if (element) {
    const key = Object.keys(element).find((key2) => {
      return key2.startsWith("__reactFiber$") || key2.startsWith("__reactInternalInstance$");
    });
    const domFiber = element[key];
    const getComponentFiber = (fiber2) => {
      let parentFiber = fiber2.return;
      while (typeof parentFiber.type === "string") {
        parentFiber = parentFiber.return;
      }
      return parentFiber;
    };
    let fiber = getComponentFiber(domFiber);
    fiber = getComponentFiber(fiber);
    return (_a2 = fiber == null ? void 0 : fiber.elementType) == null ? void 0 : _a2.name;
  }
  return void 0;
}
function Popover2(t0) {
  const $ = (0, import_react_compiler_runtime.c)(27);
  const {
    trigger,
    children,
    open,
    onOpenChange,
    side,
    sideOffset: t1,
    align,
    alignOffset,
    arrowPadding,
    sticky,
    hideWhenDetached,
    avoidCollisions,
    enabled: t2,
    modal: t3,
    portalContainer,
    className
  } = t0;
  const sideOffset = t1 === void 0 ? 5 : t1;
  const enabled = t2 === void 0 ? true : t2;
  const modal = t3 === void 0 ? false : t3;
  useInjectStyles("Popover", popoverStyles);
  if (!enabled) {
    let t42;
    if ($[0] !== trigger) {
      t42 = (0, import_jsx_runtime29.jsx)(import_jsx_runtime29.Fragment, { children: trigger });
      $[0] = trigger;
      $[1] = t42;
    } else {
      t42 = $[1];
    }
    return t42;
  }
  let t4;
  if ($[2] !== trigger) {
    t4 = (0, import_jsx_runtime29.jsx)(Trigger4, { asChild: true, children: trigger });
    $[2] = trigger;
    $[3] = t4;
  } else {
    t4 = $[3];
  }
  let t5;
  if ($[4] !== className) {
    t5 = cls(paperMixin, "PopoverContent z-40", className);
    $[4] = className;
    $[5] = t5;
  } else {
    t5 = $[5];
  }
  let t6;
  if ($[6] === Symbol.for("react.memo_cache_sentinel")) {
    t6 = (0, import_jsx_runtime29.jsx)(Arrow23, { className: "fill-white dark:fill-surface-accent-950" });
    $[6] = t6;
  } else {
    t6 = $[6];
  }
  let t7;
  if ($[7] !== align || $[8] !== alignOffset || $[9] !== arrowPadding || $[10] !== avoidCollisions || $[11] !== children || $[12] !== hideWhenDetached || $[13] !== side || $[14] !== sideOffset || $[15] !== sticky || $[16] !== t5) {
    t7 = (0, import_jsx_runtime29.jsxs)(Content25, { className: t5, side, sideOffset, align, alignOffset, arrowPadding, sticky, hideWhenDetached, avoidCollisions, children: [
      children,
      t6
    ] });
    $[7] = align;
    $[8] = alignOffset;
    $[9] = arrowPadding;
    $[10] = avoidCollisions;
    $[11] = children;
    $[12] = hideWhenDetached;
    $[13] = side;
    $[14] = sideOffset;
    $[15] = sticky;
    $[16] = t5;
    $[17] = t7;
  } else {
    t7 = $[17];
  }
  let t8;
  if ($[18] !== portalContainer || $[19] !== t7) {
    t8 = (0, import_jsx_runtime29.jsx)(Portal4, { container: portalContainer, children: t7 });
    $[18] = portalContainer;
    $[19] = t7;
    $[20] = t8;
  } else {
    t8 = $[20];
  }
  let t9;
  if ($[21] !== modal || $[22] !== onOpenChange || $[23] !== open || $[24] !== t4 || $[25] !== t8) {
    t9 = (0, import_jsx_runtime29.jsxs)(Root24, { open, onOpenChange, modal, children: [
      t4,
      t8
    ] });
    $[21] = modal;
    $[22] = onOpenChange;
    $[23] = open;
    $[24] = t4;
    $[25] = t8;
    $[26] = t9;
  } else {
    t9 = $[26];
  }
  return t9;
}
var popoverStyles = `

.PopoverContent {
  animation-duration: 400ms;
  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
  will-change: transform, opacity;
}
.PopoverContent[data-state='open'][data-side='top'] {
  animation-name: slideDownAndFade;
}
.PopoverContent[data-state='open'][data-side='right'] {
  animation-name: slideLeftAndFade;
}
.PopoverContent[data-state='open'][data-side='bottom'] {
  animation-name: slideUpAndFade;
}
.PopoverContent[data-state='open'][data-side='left'] {
  animation-name: slideRightAndFade;
}


@keyframes slideUpAndFade {
  from {
    opacity: 0;
    transform: translateY(2px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideRightAndFade {
  from {
    opacity: 0;
    transform: translateX(-2px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideDownAndFade {
  from {
    opacity: 0;
    transform: translateY(-2px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideLeftAndFade {
  from {
    opacity: 0;
    transform: translateX(2px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}
`;
var getColor = (color) => {
  switch (color) {
    case "primary":
      return "bg-primary";
    case "secondary":
      return "bg-secondary";
    case "error":
      return "bg-red-500";
    default:
      return "bg-surface-accent-300 dark:bg-surface-accent-700";
  }
};
var Badge = (t0) => {
  const $ = (0, import_react_compiler_runtime.c)(5);
  const {
    color: t1,
    invisible: t2,
    children
  } = t0;
  const color = t1 === void 0 ? "primary" : t1;
  const invisible = t2 === void 0 ? false : t2;
  const t3 = `absolute top-0.5 right-0.5 transform translate-x-1/2 -translate-y-1/2 rounded-full
        ${getColor(color)}
        transition-all duration-200 ease-out
        ${invisible ? "w-0 h-0" : "w-2 h-2"}`;
  let t4;
  if ($[0] !== t3) {
    t4 = (0, import_jsx_runtime29.jsx)("span", { className: t3 });
    $[0] = t3;
    $[1] = t4;
  } else {
    t4 = $[1];
  }
  let t5;
  if ($[2] !== children || $[3] !== t4) {
    t5 = (0, import_jsx_runtime29.jsxs)("div", { className: "relative inline-block w-fit", children: [
      children,
      t4
    ] });
    $[2] = children;
    $[3] = t4;
    $[4] = t5;
  } else {
    t5 = $[4];
  }
  return t5;
};
function DebouncedTextField(props) {
  const $ = (0, import_react_compiler_runtime.c)(13);
  const previousEventRef = import_react22.default.useRef();
  const [internalValue, setInternalValue] = import_react22.default.useState(props.value);
  const deferredValue = (0, import_react22.useDeferredValue)(internalValue);
  let t0;
  let t1;
  if ($[0] !== props.value) {
    t0 = () => {
      setInternalValue(props.value);
    };
    t1 = [props.value];
    $[0] = props.value;
    $[1] = t0;
    $[2] = t1;
  } else {
    t0 = $[1];
    t1 = $[2];
  }
  (0, import_react22.useEffect)(t0, t1);
  let t2;
  if ($[3] !== deferredValue || $[4] !== props) {
    t2 = () => {
      const emptyInitialValue = !props.value;
      if (emptyInitialValue && !deferredValue) {
        return;
      }
      if (deferredValue !== props.value && previousEventRef.current && props.onChange) {
        props.onChange(previousEventRef.current);
      }
    };
    $[3] = deferredValue;
    $[4] = props;
    $[5] = t2;
  } else {
    t2 = $[5];
  }
  let t3;
  if ($[6] !== deferredValue || $[7] !== props.value) {
    t3 = [deferredValue, props.value];
    $[6] = deferredValue;
    $[7] = props.value;
    $[8] = t3;
  } else {
    t3 = $[8];
  }
  (0, import_react22.useEffect)(t2, t3);
  let t4;
  if ($[9] === Symbol.for("react.memo_cache_sentinel")) {
    t4 = (event) => {
      previousEventRef.current = event;
      setInternalValue(event.target.value);
    };
    $[9] = t4;
  } else {
    t4 = $[9];
  }
  const internalOnChange = t4;
  let t5;
  if ($[10] !== internalValue || $[11] !== props) {
    t5 = (0, import_jsx_runtime29.jsx)(TextField, { ...props, onChange: internalOnChange, value: internalValue });
    $[10] = internalValue;
    $[11] = props;
    $[12] = t5;
  } else {
    t5 = $[12];
  }
  return t5;
}
function Skeleton(t0) {
  const $ = (0, import_react_compiler_runtime.c)(8);
  const {
    width,
    height,
    className
  } = t0;
  const t1 = width ? `${width}px` : "100%";
  const t2 = height ? `${height}px` : "12px";
  let t3;
  if ($[0] !== t1 || $[1] !== t2) {
    t3 = {
      width: t1,
      height: t2
    };
    $[0] = t1;
    $[1] = t2;
    $[2] = t3;
  } else {
    t3 = $[2];
  }
  let t4;
  if ($[3] !== className) {
    t4 = cls("block", "bg-surface-accent-200 dark:bg-surface-accent-800 rounded-md", "animate-pulse", "max-w-full max-h-full", className);
    $[3] = className;
    $[4] = t4;
  } else {
    t4 = $[4];
  }
  let t5;
  if ($[5] !== t3 || $[6] !== t4) {
    t5 = (0, import_jsx_runtime29.jsx)("span", { style: t3, className: t4 });
    $[5] = t3;
    $[6] = t4;
    $[7] = t5;
  } else {
    t5 = $[7];
  }
  return t5;
}

export {
  require_react_fast_compare,
  __rest,
  require_dist,
  Slot,
  clsx_default,
  Root2 as Root,
  useDropzone,
  lib_default,
  _extends,
  focusedDisabled,
  focusedInvisibleMixin,
  focusedClasses,
  fieldBackgroundMixin,
  fieldBackgroundInvisibleMixin,
  fieldBackgroundDisabledMixin,
  fieldBackgroundHoverMixin,
  defaultBorderMixin,
  paperMixin,
  cardMixin,
  cardClickableMixin,
  cardSelectedMixin,
  cls,
  cn,
  debounce,
  CHIP_COLORS,
  getColorSchemeForKey,
  getColorSchemeForSeed,
  keyToIconComponent,
  useInjectStyles,
  useOutsideAlerter,
  useDebounceValue,
  useIconStyles,
  Collapse,
  useAutoComplete,
  Autocomplete,
  AutocompleteItem,
  Alert,
  Avatar,
  BooleanSwitch,
  BooleanSwitchWithLabel,
  Button,
  Card,
  Container,
  CenteredView,
  CircularProgress,
  iconKeys,
  coolIconKeys,
  Icon2 as Icon,
  GitHubIcon,
  HandleIcon,
  _10kIcon,
  _10mpIcon,
  _11mpIcon,
  _123Icon,
  _12mpIcon,
  _13mpIcon,
  _14mpIcon,
  _15mpIcon,
  _16mpIcon,
  _17mpIcon,
  _18UpRatingIcon,
  _18mpIcon,
  _19mpIcon,
  _1kIcon,
  _1kPlusIcon,
  _1xMobiledataIcon,
  _20mpIcon,
  _21mpIcon,
  _22mpIcon,
  _23mpIcon,
  _24mpIcon,
  _2kIcon,
  _2kPlusIcon,
  _2mpIcon,
  _30fpsIcon,
  _30fpsSelectIcon,
  _360Icon,
  _3dRotationIcon,
  _3gMobiledataIcon,
  _3kIcon,
  _3kPlusIcon,
  _3mpIcon,
  _3pIcon,
  _4gMobiledataIcon,
  _4gPlusMobiledataIcon,
  _4kIcon,
  _4kPlusIcon,
  _4mpIcon,
  _5gIcon,
  _5kIcon,
  _5kPlusIcon,
  _5mpIcon,
  _60fpsIcon,
  _60fpsSelectIcon,
  _6FtApartIcon,
  _6kIcon,
  _6kPlusIcon,
  _6mpIcon,
  _7kIcon,
  _7kPlusIcon,
  _7mpIcon,
  _8kIcon,
  _8kPlusIcon,
  _8mpIcon,
  _9kIcon,
  _9kPlusIcon,
  _9mpIcon,
  AbcIcon,
  AcUnitIcon,
  AccessAlarmIcon,
  AccessAlarmsIcon,
  AccessTimeIcon,
  AccessTimeFilledIcon,
  AccessibilityIcon,
  AccessibilityNewIcon,
  AccessibleIcon,
  AccessibleForwardIcon,
  AccountBalanceIcon,
  AccountBalanceWalletIcon,
  AccountBoxIcon,
  AccountCircleIcon,
  AccountTreeIcon,
  AdUnitsIcon,
  AdbIcon,
  AddIcon,
  AddAPhotoIcon,
  AddAlarmIcon,
  AddAlertIcon,
  AddBoxIcon,
  AddBusinessIcon,
  AddCardIcon,
  AddChartIcon,
  AddCircleIcon,
  AddCircleOutlineIcon,
  AddCommentIcon,
  AddHomeIcon,
  AddHomeWorkIcon,
  AddIcCallIcon,
  AddLinkIcon,
  AddLocationIcon,
  AddLocationAltIcon,
  AddModeratorIcon,
  AddPhotoAlternateIcon,
  AddReactionIcon,
  AddRoadIcon,
  AddShoppingCartIcon,
  AddTaskIcon,
  AddToDriveIcon,
  AddToHomeScreenIcon,
  AddToPhotosIcon,
  AddToQueueIcon,
  AdfScannerIcon,
  AdjustIcon,
  AdminPanelSettingsIcon,
  AdobeIcon,
  AdsClickIcon,
  AgricultureIcon,
  AirIcon,
  AirlineSeatFlatIcon,
  AirlineSeatFlatAngledIcon,
  AirlineSeatIndividualSuiteIcon,
  AirlineSeatLegroomExtraIcon,
  AirlineSeatLegroomNormalIcon,
  AirlineSeatLegroomReducedIcon,
  AirlineSeatReclineExtraIcon,
  AirlineSeatReclineNormalIcon,
  AirlineStopsIcon,
  AirlinesIcon,
  AirplaneTicketIcon,
  AirplanemodeActiveIcon,
  AirplanemodeInactiveIcon,
  AirplanemodeOffIcon,
  AirplanemodeOnIcon,
  AirplayIcon,
  AirportShuttleIcon,
  AlarmIcon,
  AlarmAddIcon,
  AlarmOffIcon,
  AlarmOnIcon,
  AlbumIcon,
  AlignHorizontalCenterIcon,
  AlignHorizontalLeftIcon,
  AlignHorizontalRightIcon,
  AlignVerticalBottomIcon,
  AlignVerticalCenterIcon,
  AlignVerticalTopIcon,
  AllInboxIcon,
  AllInclusiveIcon,
  AllOutIcon,
  AltRouteIcon,
  AlternateEmailIcon,
  AmpStoriesIcon,
  AnalyticsIcon,
  AnchorIcon,
  AndroidIcon,
  AnimationIcon,
  AnnouncementIcon,
  AodIcon,
  ApartmentIcon,
  ApiIcon,
  AppBlockingIcon,
  AppRegistrationIcon,
  AppSettingsAltIcon,
  AppShortcutIcon,
  AppleIcon,
  ApprovalIcon,
  AppsIcon,
  AppsOutageIcon,
  ArchitectureIcon,
  ArchiveIcon,
  AreaChartIcon,
  ArrowBackIcon,
  ArrowBackIosIcon,
  ArrowBackIosNewIcon,
  ArrowCircleDownIcon,
  ArrowCircleLeftIcon,
  ArrowCircleRightIcon,
  ArrowCircleUpIcon,
  ArrowDownwardIcon,
  ArrowDropDownIcon,
  ArrowDropDownCircleIcon,
  ArrowDropUpIcon,
  ArrowForwardIcon,
  ArrowForwardIosIcon,
  ArrowLeftIcon,
  ArrowOutwardIcon,
  ArrowRightIcon,
  ArrowRightAltIcon,
  ArrowUpwardIcon,
  ArtTrackIcon,
  ArticleIcon,
  AspectRatioIcon,
  AssessmentIcon,
  AssignmentIcon,
  AssignmentIndIcon,
  AssignmentLateIcon,
  AssignmentReturnIcon,
  AssignmentReturnedIcon,
  AssignmentTurnedInIcon,
  AssistWalkerIcon,
  AssistantIcon,
  AssistantDirectionIcon,
  AssistantPhotoIcon,
  AssuredWorkloadIcon,
  AtmIcon,
  AttachEmailIcon,
  AttachFileIcon,
  AttachMoneyIcon,
  AttachmentIcon,
  AttractionsIcon,
  AttributionIcon,
  AudioFileIcon,
  AudiotrackIcon,
  AutoAwesomeIcon,
  AutoAwesomeMosaicIcon,
  AutoAwesomeMotionIcon,
  AutoDeleteIcon,
  AutoFixHighIcon,
  AutoFixNormalIcon,
  AutoFixOffIcon,
  AutoGraphIcon,
  AutoModeIcon,
  AutoStoriesIcon,
  AutofpsSelectIcon,
  AutorenewIcon,
  AvTimerIcon,
  BabyChangingStationIcon,
  BackHandIcon,
  BackpackIcon,
  BackspaceIcon,
  BackupIcon,
  BackupTableIcon,
  BadgeIcon,
  BakeryDiningIcon,
  BalanceIcon,
  BalconyIcon,
  BallotIcon,
  BarChartIcon,
  BatchPredictionIcon,
  BathroomIcon,
  BathtubIcon,
  Battery0BarIcon,
  Battery1BarIcon,
  Battery2BarIcon,
  Battery3BarIcon,
  Battery4BarIcon,
  Battery5BarIcon,
  Battery6BarIcon,
  BatteryAlertIcon,
  BatteryChargingFullIcon,
  BatteryFullIcon,
  BatterySaverIcon,
  BatteryStdIcon,
  BatteryUnknownIcon,
  BeachAccessIcon,
  BedIcon,
  BedroomBabyIcon,
  BedroomChildIcon,
  BedroomParentIcon,
  BedtimeIcon,
  BedtimeOffIcon,
  BeenhereIcon,
  BentoIcon,
  BikeScooterIcon,
  BiotechIcon,
  BlenderIcon,
  BlindIcon,
  BlindsIcon,
  BlindsClosedIcon,
  BlockIcon,
  BloodtypeIcon,
  BluetoothIcon,
  BluetoothAudioIcon,
  BluetoothConnectedIcon,
  BluetoothDisabledIcon,
  BluetoothDriveIcon,
  BluetoothSearchingIcon,
  BlurCircularIcon,
  BlurLinearIcon,
  BlurOffIcon,
  BlurOnIcon,
  BoltIcon,
  BookIcon,
  BookOnlineIcon,
  BookmarkIcon,
  BookmarkAddIcon,
  BookmarkAddedIcon,
  BookmarkBorderIcon,
  BookmarkOutlineIcon,
  BookmarkRemoveIcon,
  BookmarksIcon,
  BorderAllIcon,
  BorderBottomIcon,
  BorderClearIcon,
  BorderColorIcon,
  BorderHorizontalIcon,
  BorderInnerIcon,
  BorderLeftIcon,
  BorderOuterIcon,
  BorderRightIcon,
  BorderStyleIcon,
  BorderTopIcon,
  BorderVerticalIcon,
  BoyIcon,
  BrandingWatermarkIcon,
  BreakfastDiningIcon,
  Brightness1Icon,
  Brightness2Icon,
  Brightness3Icon,
  Brightness4Icon,
  Brightness5Icon,
  Brightness6Icon,
  Brightness7Icon,
  BrightnessAutoIcon,
  BrightnessHighIcon,
  BrightnessLowIcon,
  BrightnessMediumIcon,
  BroadcastOnHomeIcon,
  BroadcastOnPersonalIcon,
  BrokenImageIcon,
  BrowseGalleryIcon,
  BrowserNotSupportedIcon,
  BrowserUpdatedIcon,
  BrunchDiningIcon,
  BrushIcon,
  BubbleChartIcon,
  BugReportIcon,
  BuildIcon,
  BuildCircleIcon,
  BungalowIcon,
  BurstModeIcon,
  BusAlertIcon,
  BusinessIcon,
  BusinessCenterIcon,
  CabinIcon,
  CableIcon,
  CachedIcon,
  CakeIcon,
  CalculateIcon,
  CalendarMonthIcon,
  CalendarTodayIcon,
  CalendarViewDayIcon,
  CalendarViewMonthIcon,
  CalendarViewWeekIcon,
  CallIcon,
  CallEndIcon,
  CallMadeIcon,
  CallMergeIcon,
  CallMissedIcon,
  CallMissedOutgoingIcon,
  CallReceivedIcon,
  CallSplitIcon,
  CallToActionIcon,
  CameraIcon,
  CameraAltIcon,
  CameraEnhanceIcon,
  CameraFrontIcon,
  CameraIndoorIcon,
  CameraOutdoorIcon,
  CameraRearIcon,
  CameraRollIcon,
  CameraswitchIcon,
  CampaignIcon,
  CancelIcon,
  CancelPresentationIcon,
  CancelScheduleSendIcon,
  CandlestickChartIcon,
  CarCrashIcon,
  CarRentalIcon,
  CarRepairIcon,
  CardGiftcardIcon,
  CardMembershipIcon,
  CardTravelIcon,
  CarpenterIcon,
  CasesIcon,
  CasinoIcon,
  CastIcon,
  CastConnectedIcon,
  CastForEducationIcon,
  CastleIcon,
  CatchingPokemonIcon,
  CategoryIcon,
  CelebrationIcon,
  CellTowerIcon,
  CellWifiIcon,
  CenterFocusStrongIcon,
  CenterFocusWeakIcon,
  ChairIcon,
  ChairAltIcon,
  ChaletIcon,
  ChangeCircleIcon,
  ChangeHistoryIcon,
  ChargingStationIcon,
  ChatIcon,
  ChatBubbleIcon,
  ChatBubbleOutlineIcon,
  CheckIcon,
  CheckBoxIcon,
  CheckBoxOutlineBlankIcon,
  CheckCircleIcon,
  CheckCircleOutlineIcon,
  ChecklistIcon,
  ChecklistRtlIcon,
  CheckroomIcon,
  ChevronLeftIcon,
  ChevronRightIcon,
  ChildCareIcon,
  ChildFriendlyIcon,
  ChromeReaderModeIcon,
  ChurchIcon,
  CircleIcon,
  CircleNotificationsIcon,
  ClassIcon,
  CleanHandsIcon,
  CleaningServicesIcon,
  ClearIcon,
  ClearAllIcon,
  CloseIcon,
  CloseFullscreenIcon,
  ClosedCaptionIcon,
  ClosedCaptionDisabledIcon,
  ClosedCaptionOffIcon,
  CloudIcon,
  CloudCircleIcon,
  CloudDoneIcon,
  CloudDownloadIcon,
  CloudOffIcon,
  CloudQueueIcon,
  CloudSyncIcon,
  CloudUploadIcon,
  Co2Icon,
  CoPresentIcon,
  CodeIcon,
  CodeOffIcon,
  CoffeeIcon,
  CoffeeMakerIcon,
  CollectionsIcon,
  CollectionsBookmarkIcon,
  ColorLensIcon,
  ColorizeIcon,
  CommentIcon,
  CommentBankIcon,
  CommentsDisabledIcon,
  CommitIcon,
  CommuteIcon,
  CompareIcon,
  CompareArrowsIcon,
  CompassCalibrationIcon,
  CompostIcon,
  CompressIcon,
  ComputerIcon,
  ConfirmationNumIcon,
  ConfirmationNumberIcon,
  ConnectWithoutContactIcon,
  ConnectedTvIcon,
  ConnectingAirportsIcon,
  ConstructionIcon,
  ContactEmergencyIcon,
  ContactMailIcon,
  ContactPageIcon,
  ContactPhoneIcon,
  ContactSupportIcon,
  ContactlessIcon,
  ContactsIcon,
  ContentCopyIcon,
  ContentCutIcon,
  ContentPasteIcon,
  ContentPasteGoIcon,
  ContentPasteOffIcon,
  ContentPasteSearchIcon,
  ContrastIcon,
  ControlCameraIcon,
  ControlPointIcon,
  ControlPointDuplicateIcon,
  CookieIcon,
  CopyIcon,
  CopyAllIcon,
  CopyrightIcon,
  CoronavirusIcon,
  CorporateFareIcon,
  CottageIcon,
  CountertopsIcon,
  CreateIcon,
  CreateNewFolderIcon,
  CreditCardIcon,
  CreditCardOffIcon,
  CreditScoreIcon,
  CribIcon,
  CrisisAlertIcon,
  CropIcon,
  Crop169Icon,
  Crop32Icon,
  Crop54Icon,
  Crop75Icon,
  CropDinIcon,
  CropFreeIcon,
  CropLandscapeIcon,
  CropOriginalIcon,
  CropPortraitIcon,
  CropRotateIcon,
  CropSquareIcon,
  CrueltyFreeIcon,
  CssIcon,
  CurrencyBitcoinIcon,
  CurrencyExchangeIcon,
  CurrencyFrancIcon,
  CurrencyLiraIcon,
  CurrencyPoundIcon,
  CurrencyRubleIcon,
  CurrencyRupeeIcon,
  CurrencyYenIcon,
  CurrencyYuanIcon,
  CurtainsIcon,
  CurtainsClosedIcon,
  CutIcon,
  CycloneIcon,
  DangerousIcon,
  DarkModeIcon,
  DashboardIcon,
  DashboardCustomizeIcon,
  DataArrayIcon,
  DataExplorationIcon,
  DataObjectIcon,
  DataSaverOffIcon,
  DataSaverOnIcon,
  DataThresholdingIcon,
  DataUsageIcon,
  DatasetIcon,
  DatasetLinkedIcon,
  DateRangeIcon,
  DeblurIcon,
  DeckIcon,
  DehazeIcon,
  DeleteIcon,
  DeleteForeverIcon,
  DeleteOutlineIcon,
  DeleteSweepIcon,
  DeliveryDiningIcon,
  DensityLargeIcon,
  DensityMediumIcon,
  DensitySmallIcon,
  DepartureBoardIcon,
  DescriptionIcon,
  DeselectIcon,
  DesignServicesIcon,
  DeskIcon,
  DesktopAccessDisabledIcon,
  DesktopMacIcon,
  DesktopWindowsIcon,
  DetailsIcon,
  DeveloperBoardIcon,
  DeveloperBoardOffIcon,
  DeveloperModeIcon,
  DeviceHubIcon,
  DeviceThermostatIcon,
  DeviceUnknownIcon,
  DevicesIcon,
  DevicesFoldIcon,
  DevicesOtherIcon,
  DialerSipIcon,
  DialpadIcon,
  DiamondIcon,
  DifferenceIcon,
  DiningIcon,
  DinnerDiningIcon,
  DirectionsIcon,
  DirectionsBikeIcon,
  DirectionsBoatIcon,
  DirectionsBoatFilledIcon,
  DirectionsBusIcon,
  DirectionsBusFilledIcon,
  DirectionsCarIcon,
  DirectionsCarFilledIcon,
  DirectionsFerryIcon,
  DirectionsOffIcon,
  DirectionsRailwayIcon,
  DirectionsRailwayFilledIcon,
  DirectionsRunIcon,
  DirectionsSubwayIcon,
  DirectionsSubwayFilledIcon,
  DirectionsTrainIcon,
  DirectionsTransitIcon,
  DirectionsTransitFilledIcon,
  DirectionsWalkIcon,
  DirtyLensIcon,
  DisabledByDefaultIcon,
  DisabledVisibleIcon,
  DiscFullIcon,
  DiscordIcon,
  DiscountIcon,
  DisplaySettingsIcon,
  Diversity1Icon,
  Diversity2Icon,
  Diversity3Icon,
  DndForwardslashIcon,
  DnsIcon,
  DoDisturbIcon,
  DoDisturbAltIcon,
  DoDisturbOffIcon,
  DoDisturbOnIcon,
  DoNotDisturbIcon,
  DoNotDisturbAltIcon,
  DoNotDisturbOffIcon,
  DoNotDisturbOnIcon,
  DoNotDisturbOnTotalSilenceIcon,
  DoNotStepIcon,
  DoNotTouchIcon,
  DockIcon,
  DocumentScannerIcon,
  DomainIcon,
  DomainAddIcon,
  DomainDisabledIcon,
  DomainVerificationIcon,
  DoneIcon,
  DoneAllIcon,
  DoneOutlineIcon,
  DonutLargeIcon,
  DonutSmallIcon,
  DoorBackIcon,
  DoorFrontIcon,
  DoorSlidingIcon,
  DoorbellIcon,
  DoubleArrowIcon,
  DownhillSkiingIcon,
  DownloadIcon,
  DownloadDoneIcon,
  DownloadForOfflineIcon,
  DownloadingIcon,
  DraftsIcon,
  DragHandleIcon,
  DragIndicatorIcon,
  DrawIcon,
  DriveEtaIcon,
  DriveFileMoveIcon,
  DriveFileMoveRtlIcon,
  DriveFileRenameOutlineIcon,
  DriveFolderUploadIcon,
  DryIcon,
  DryCleaningIcon,
  DuoIcon,
  DvrIcon,
  DynamicFeedIcon,
  DynamicFormIcon,
  EMobiledataIcon,
  EarbudsIcon,
  EarbudsBatteryIcon,
  EastIcon,
  EcoIcon,
  EdgesensorHighIcon,
  EdgesensorLowIcon,
  EditIcon,
  EditAttributesIcon,
  EditCalendarIcon,
  EditLocationIcon,
  EditLocationAltIcon,
  EditNoteIcon,
  EditNotificationsIcon,
  EditOffIcon,
  EditRoadIcon,
  EggIcon,
  EggAltIcon,
  EjectIcon,
  ElderlyIcon,
  ElderlyWomanIcon,
  ElectricBikeIcon,
  ElectricBoltIcon,
  ElectricCarIcon,
  ElectricMeterIcon,
  ElectricMopedIcon,
  ElectricRickshawIcon,
  ElectricScooterIcon,
  ElectricalServicesIcon,
  ElevatorIcon,
  EmailIcon,
  EmergencyIcon,
  EmergencyRecordingIcon,
  EmergencyShareIcon,
  EmojiEmotionsIcon,
  EmojiEventsIcon,
  EmojiFlagsIcon,
  EmojiFoodBeverageIcon,
  EmojiNatureIcon,
  EmojiObjectsIcon,
  EmojiPeopleIcon,
  EmojiSymbolsIcon,
  EmojiTransportationIcon,
  EnergySavingsLeafIcon,
  EngineeringIcon,
  EnhancePhotoTranslateIcon,
  EnhancedEncryptionIcon,
  EqualizerIcon,
  ErrorIcon,
  ErrorOutlineIcon,
  EscalatorIcon,
  EscalatorWarningIcon,
  EuroIcon,
  EuroSymbolIcon,
  EvStationIcon,
  EventIcon,
  EventAvailableIcon,
  EventBusyIcon,
  EventNoteIcon,
  EventRepeatIcon,
  EventSeatIcon,
  ExitToAppIcon,
  ExpandIcon,
  ExpandCircleDownIcon,
  ExpandLessIcon,
  ExpandMoreIcon,
  ExplicitIcon,
  ExploreIcon,
  ExploreOffIcon,
  ExposureIcon,
  ExposureMinus1Icon,
  ExposureMinus2Icon,
  ExposureNeg1Icon,
  ExposureNeg2Icon,
  ExposurePlus1Icon,
  ExposurePlus2Icon,
  ExposureZeroIcon,
  ExtensionIcon,
  ExtensionOffIcon,
  FaceIcon,
  Face2Icon,
  Face3Icon,
  Face4Icon,
  Face5Icon,
  Face6Icon,
  FaceRetouchingNaturalIcon,
  FaceRetouchingOffIcon,
  FaceUnlockIcon,
  FacebookIcon,
  FactCheckIcon,
  FactoryIcon,
  FamilyRestroomIcon,
  FastForwardIcon,
  FastRewindIcon,
  FastfoodIcon,
  FavoriteIcon,
  FavoriteBorderIcon,
  FavoriteOutlineIcon,
  FaxIcon,
  FeaturedPlayListIcon,
  FeaturedVideoIcon,
  FeedIcon,
  FeedbackIcon,
  FemaleIcon,
  FenceIcon,
  FestivalIcon,
  FiberDvrIcon,
  FiberManualRecordIcon,
  FiberNewIcon,
  FiberPinIcon,
  FiberSmartRecordIcon,
  FileCopyIcon,
  FileDownloadIcon,
  FileDownloadDoneIcon,
  FileDownloadOffIcon,
  FileOpenIcon,
  FilePresentIcon,
  FileUploadIcon,
  FilterIcon,
  Filter1Icon,
  Filter2Icon,
  Filter3Icon,
  Filter4Icon,
  Filter5Icon,
  Filter6Icon,
  Filter7Icon,
  Filter8Icon,
  Filter9Icon,
  Filter9PlusIcon,
  FilterAltIcon,
  FilterAltOffIcon,
  FilterBAndWIcon,
  FilterCenterFocusIcon,
  FilterDramaIcon,
  FilterFramesIcon,
  FilterHdrIcon,
  FilterListIcon,
  FilterListOffIcon,
  FilterNoneIcon,
  FilterTiltShiftIcon,
  FilterVintageIcon,
  FindInPageIcon,
  FindReplaceIcon,
  FingerprintIcon,
  FireExtinguisherIcon,
  FireHydrantAltIcon,
  FireTruckIcon,
  FireplaceIcon,
  FirstPageIcon,
  FitScreenIcon,
  FitbitIcon,
  FitnessCenterIcon,
  FlagIcon,
  FlagCircleIcon,
  FlakyIcon,
  FlareIcon,
  FlashAutoIcon,
  FlashOffIcon,
  FlashOnIcon,
  FlashlightOffIcon,
  FlashlightOnIcon,
  FlatwareIcon,
  FlightIcon,
  FlightClassIcon,
  FlightLandIcon,
  FlightTakeoffIcon,
  FlipIcon,
  FlipCameraAndroidIcon,
  FlipCameraIosIcon,
  FlipToBackIcon,
  FlipToFrontIcon,
  FloodIcon,
  FlourescentIcon,
  FluorescentIcon,
  FlutterDashIcon,
  FmdBadIcon,
  FmdGoodIcon,
  FolderIcon,
  FolderCopyIcon,
  FolderDeleteIcon,
  FolderOffIcon,
  FolderOpenIcon,
  FolderSharedIcon,
  FolderSpecialIcon,
  FolderZipIcon,
  FollowTheSignsIcon,
  FontDownloadIcon,
  FontDownloadOffIcon,
  FoodBankIcon,
  ForestIcon,
  ForkLeftIcon,
  ForkRightIcon,
  FormatAlignCenterIcon,
  FormatAlignJustifyIcon,
  FormatAlignLeftIcon,
  FormatAlignRightIcon,
  FormatBoldIcon,
  FormatClearIcon,
  FormatColorFillIcon,
  FormatColorResetIcon,
  FormatColorTextIcon,
  FormatIndentDecreaseIcon,
  FormatIndentIncreaseIcon,
  FormatItalicIcon,
  FormatLineSpacingIcon,
  FormatListBulletedIcon,
  FormatListNumberedIcon,
  FormatListNumberedRtlIcon,
  FormatOverlineIcon,
  FormatPaintIcon,
  FormatQuoteIcon,
  FormatShapesIcon,
  FormatSizeIcon,
  FormatStrikethroughIcon,
  FormatTextdirectionLToRIcon,
  FormatTextdirectionRToLIcon,
  FormatUnderlineIcon,
  FormatUnderlinedIcon,
  FortIcon,
  ForumIcon,
  ForwardIcon,
  Forward10Icon,
  Forward30Icon,
  Forward5Icon,
  ForwardToInboxIcon,
  FoundationIcon,
  FreeBreakfastIcon,
  FreeCancellationIcon,
  FrontHandIcon,
  FullscreenIcon,
  FullscreenExitIcon,
  FunctionsIcon,
  GMobiledataIcon,
  GTranslateIcon,
  GamepadIcon,
  GamesIcon,
  GarageIcon,
  GasMeterIcon,
  GavelIcon,
  GeneratingTokensIcon,
  GestureIcon,
  GetAppIcon,
  GifIcon,
  GifBoxIcon,
  GirlIcon,
  GiteIcon,
  GolfCourseIcon,
  GppBadIcon,
  GppGoodIcon,
  GppMaybeIcon,
  GpsFixedIcon,
  GpsNotFixedIcon,
  GpsOffIcon,
  GradeIcon,
  GradientIcon,
  GradingIcon,
  GrainIcon,
  GraphicEqIcon,
  GrassIcon,
  Grid3x3Icon,
  Grid4x4Icon,
  GridGoldenratioIcon,
  GridOffIcon,
  GridOnIcon,
  GridViewIcon,
  GroupIcon,
  GroupAddIcon,
  GroupOffIcon,
  GroupRemoveIcon,
  GroupWorkIcon,
  GroupsIcon,
  Groups2Icon,
  Groups3Icon,
  HMobiledataIcon,
  HPlusMobiledataIcon,
  HailIcon,
  HandshakeIcon,
  HandymanIcon,
  HardwareIcon,
  HdIcon,
  HdrAutoIcon,
  HdrAutoSelectIcon,
  HdrEnhancedSelectIcon,
  HdrOffIcon,
  HdrOffSelectIcon,
  HdrOnIcon,
  HdrOnSelectIcon,
  HdrPlusIcon,
  HdrStrongIcon,
  HdrWeakIcon,
  HeadphonesIcon,
  HeadphonesBatteryIcon,
  HeadsetIcon,
  HeadsetMicIcon,
  HeadsetOffIcon,
  HealingIcon,
  HealthAndSafetyIcon,
  HearingIcon,
  HearingDisabledIcon,
  HeartBrokenIcon,
  HeatPumpIcon,
  HeightIcon,
  HelpIcon,
  HelpCenterIcon,
  HelpOutlineIcon,
  HevcIcon,
  HexagonIcon,
  HideImageIcon,
  HideSourceIcon,
  HighQualityIcon,
  HighlightIcon,
  HighlightAltIcon,
  HighlightOffIcon,
  HighlightRemoveIcon,
  HikingIcon,
  HistoryIcon,
  HistoryEduIcon,
  HistoryToggleOffIcon,
  HiveIcon,
  HlsIcon,
  HlsOffIcon,
  HolidayVillageIcon,
  HomeIcon,
  HomeMaxIcon,
  HomeMiniIcon,
  HomeRepairServiceIcon,
  HomeWorkIcon,
  HorizontalDistributeIcon,
  HorizontalRuleIcon,
  HorizontalSplitIcon,
  HotTubIcon,
  HotelIcon,
  HotelClassIcon,
  HourglassBottomIcon,
  HourglassDisabledIcon,
  HourglassEmptyIcon,
  HourglassFullIcon,
  HourglassTopIcon,
  HouseIcon,
  HouseSidingIcon,
  HouseboatIcon,
  HowToRegIcon,
  HowToVoteIcon,
  HtmlIcon,
  HttpIcon,
  HttpsIcon,
  HubIcon,
  HvacIcon,
  IceSkatingIcon,
  IcecreamIcon,
  ImageIcon,
  ImageAspectRatioIcon,
  ImageNotSupportedIcon,
  ImageSearchIcon,
  ImagesearchRollerIcon,
  ImportContactsIcon,
  ImportExportIcon,
  ImportantDevicesIcon,
  InboxIcon,
  IncompleteCircleIcon,
  IndeterminateCheckBoxIcon,
  InfoIcon,
  InfoOutlineIcon,
  InputIcon,
  InsertChartIcon,
  InsertChartOutlinedIcon,
  InsertCommentIcon,
  InsertDriveFileIcon,
  InsertEmoticonIcon,
  InsertInvitationIcon,
  InsertLinkIcon,
  InsertPageBreakIcon,
  InsertPhotoIcon,
  InsightsIcon,
  InstallDesktopIcon,
  InstallMobileIcon,
  IntegrationInstructionsIcon,
  InterestsIcon,
  InterpreterModeIcon,
  InventoryIcon,
  Inventory2Icon,
  InvertColorsIcon,
  InvertColorsOffIcon,
  InvertColorsOnIcon,
  IosShareIcon,
  IronIcon,
  IsoIcon,
  JavascriptIcon,
  JoinFullIcon,
  JoinInnerIcon,
  JoinLeftIcon,
  JoinRightIcon,
  KayakingIcon,
  KebabDiningIcon,
  KeyIcon,
  KeyOffIcon,
  KeyboardIcon,
  KeyboardAltIcon,
  KeyboardArrowDownIcon,
  KeyboardArrowLeftIcon,
  KeyboardArrowRightIcon,
  KeyboardArrowUpIcon,
  KeyboardBackspaceIcon,
  KeyboardCapslockIcon,
  KeyboardCommandKeyIcon,
  KeyboardControlIcon,
  KeyboardControlKeyIcon,
  KeyboardDoubleArrowDownIcon,
  KeyboardDoubleArrowLeftIcon,
  KeyboardDoubleArrowRightIcon,
  KeyboardDoubleArrowUpIcon,
  KeyboardHideIcon,
  KeyboardOptionKeyIcon,
  KeyboardReturnIcon,
  KeyboardTabIcon,
  KeyboardVoiceIcon,
  KingBedIcon,
  KitchenIcon,
  KitesurfingIcon,
  LabelIcon,
  LabelImportantIcon,
  LabelImportantOutlineIcon,
  LabelOffIcon,
  LabelOutlineIcon,
  LanIcon,
  LandscapeIcon,
  LandslideIcon,
  LanguageIcon,
  LaptopIcon,
  LaptopChromebookIcon,
  LaptopMacIcon,
  LaptopWindowsIcon,
  LastPageIcon,
  LaunchIcon,
  LayersIcon,
  LayersClearIcon,
  LeaderboardIcon,
  LeakAddIcon,
  LeakRemoveIcon,
  LeaveBagsAtHomeIcon,
  LegendToggleIcon,
  LensIcon,
  LensBlurIcon,
  LibraryAddIcon,
  LibraryAddCheckIcon,
  LibraryBooksIcon,
  LibraryMusicIcon,
  LightIcon,
  LightModeIcon,
  LightbulbIcon,
  LightbulbCircleIcon,
  LightbulbOutlineIcon,
  LineAxisIcon,
  LineStyleIcon,
  LineWeightIcon,
  LinearScaleIcon,
  LinkIcon,
  LinkOffIcon,
  LinkedCameraIcon,
  LiquorIcon,
  ListIcon,
  ListAltIcon,
  LiveHelpIcon,
  LiveTvIcon,
  LivingIcon,
  LocalActivityIcon,
  LocalAirportIcon,
  LocalAtmIcon,
  LocalAttractionIcon,
  LocalBarIcon,
  LocalCafeIcon,
  LocalCarWashIcon,
  LocalConvenienceStoreIcon,
  LocalDiningIcon,
  LocalDrinkIcon,
  LocalFireDepartmentIcon,
  LocalFloristIcon,
  LocalGasStationIcon,
  LocalGroceryStoreIcon,
  LocalHospitalIcon,
  LocalHotelIcon,
  LocalLaundryServiceIcon,
  LocalLibraryIcon,
  LocalMallIcon,
  LocalMoviesIcon,
  LocalOfferIcon,
  LocalParkingIcon,
  LocalPharmacyIcon,
  LocalPhoneIcon,
  LocalPizzaIcon,
  LocalPlayIcon,
  LocalPoliceIcon,
  LocalPostOfficeIcon,
  LocalPrintshopIcon,
  LocalRestaurantIcon,
  LocalSeeIcon,
  LocalShippingIcon,
  LocalTaxiIcon,
  LocationCityIcon,
  LocationDisabledIcon,
  LocationHistoryIcon,
  LocationOffIcon,
  LocationOnIcon,
  LocationSearchingIcon,
  LockIcon,
  LockClockIcon,
  LockOpenIcon,
  LockOutlineIcon,
  LockPersonIcon,
  LockResetIcon,
  LoginIcon,
  LogoDevIcon,
  LogoutIcon,
  LooksIcon,
  Looks3Icon,
  Looks4Icon,
  Looks5Icon,
  Looks6Icon,
  LooksOneIcon,
  LooksTwoIcon,
  LoopIcon,
  LoupeIcon,
  LowPriorityIcon,
  LoyaltyIcon,
  LteMobiledataIcon,
  LtePlusMobiledataIcon,
  LuggageIcon,
  LunchDiningIcon,
  LyricsIcon,
  MacroOffIcon,
  MailIcon,
  MailLockIcon,
  MailOutlineIcon,
  MaleIcon,
  ManIcon,
  Man2Icon,
  Man3Icon,
  Man4Icon,
  ManageAccountsIcon,
  ManageHistoryIcon,
  ManageSearchIcon,
  MapIcon,
  MapsHomeWorkIcon,
  MapsUgcIcon,
  MarginIcon,
  MarkAsUnreadIcon,
  MarkChatReadIcon,
  MarkChatUnreadIcon,
  MarkEmailReadIcon,
  MarkEmailUnreadIcon,
  MarkUnreadChatAltIcon,
  MarkunreadIcon,
  MarkunreadMailboxIcon,
  MasksIcon,
  MaximizeIcon,
  MediaBluetoothOffIcon,
  MediaBluetoothOnIcon,
  MediationIcon,
  MedicalInformationIcon,
  MedicalServicesIcon,
  MedicationIcon,
  MedicationLiquidIcon,
  MeetingRoomIcon,
  MemoryIcon,
  MenuIcon,
  MenuBookIcon,
  MenuOpenIcon,
  MergeIcon,
  MergeTypeIcon,
  MessageIcon,
  MessengerIcon,
  MessengerOutlineIcon,
  MicIcon,
  MicExternalOffIcon,
  MicExternalOnIcon,
  MicNoneIcon,
  MicOffIcon,
  MicrowaveIcon,
  MilitaryTechIcon,
  MinimizeIcon,
  MinorCrashIcon,
  MiscellaneousServicesIcon,
  MissedVideoCallIcon,
  MmsIcon,
  MobileFriendlyIcon,
  MobileOffIcon,
  MobileScreenShareIcon,
  MobiledataOffIcon,
  ModeIcon,
  ModeCommentIcon,
  ModeEditIcon,
  ModeEditOutlineIcon,
  ModeFanOffIcon,
  ModeNightIcon,
  ModeOfTravelIcon,
  ModeStandbyIcon,
  ModelTrainingIcon,
  MonetizationOnIcon,
  MoneyIcon,
  MoneyOffIcon,
  MoneyOffCsredIcon,
  MonitorIcon,
  MonitorHeartIcon,
  MonitorWeightIcon,
  MonochromePhotosIcon,
  MoodIcon,
  MoodBadIcon,
  MopedIcon,
  MoreIcon,
  MoreHorizIcon,
  MoreTimeIcon,
  MoreVertIcon,
  MosqueIcon,
  MotionPhotosAutoIcon,
  MotionPhotosOffIcon,
  MotionPhotosOnIcon,
  MotionPhotosPauseIcon,
  MotionPhotosPausedIcon,
  MotorcycleIcon,
  MouseIcon,
  MoveDownIcon,
  MoveToInboxIcon,
  MoveUpIcon,
  MovieIcon,
  MovieCreationIcon,
  MovieFilterIcon,
  MovingIcon,
  MpIcon,
  MultilineChartIcon,
  MultipleStopIcon,
  MultitrackAudioIcon,
  MuseumIcon,
  MusicNoteIcon,
  MusicOffIcon,
  MusicVideoIcon,
  MyLibraryAddIcon,
  MyLibraryBooksIcon,
  MyLibraryMusicIcon,
  MyLocationIcon,
  NatIcon,
  NatureIcon,
  NaturePeopleIcon,
  NavigateBeforeIcon,
  NavigateNextIcon,
  NavigationIcon,
  NearMeIcon,
  NearMeDisabledIcon,
  NearbyErrorIcon,
  NearbyOffIcon,
  NestCamWiredStandIcon,
  NetworkCellIcon,
  NetworkCheckIcon,
  NetworkLockedIcon,
  NetworkPingIcon,
  NetworkWifiIcon,
  NetworkWifi1BarIcon,
  NetworkWifi2BarIcon,
  NetworkWifi3BarIcon,
  NewLabelIcon,
  NewReleasesIcon,
  NewspaperIcon,
  NextPlanIcon,
  NextWeekIcon,
  NfcIcon,
  NightShelterIcon,
  NightlifeIcon,
  NightlightIcon,
  NightlightRoundIcon,
  NightsStayIcon,
  NoAccountsIcon,
  NoAdultContentIcon,
  NoBackpackIcon,
  NoCellIcon,
  NoCrashIcon,
  NoDrinksIcon,
  NoEncryptionIcon,
  NoEncryptionGmailerrorredIcon,
  NoFlashIcon,
  NoFoodIcon,
  NoLuggageIcon,
  NoMealsIcon,
  NoMeetingRoomIcon,
  NoPhotographyIcon,
  NoSimIcon,
  NoStrollerIcon,
  NoTransferIcon,
  NoiseAwareIcon,
  NoiseControlOffIcon,
  NordicWalkingIcon,
  NorthIcon,
  NorthEastIcon,
  NorthWestIcon,
  NotAccessibleIcon,
  NotInterestedIcon,
  NotListedLocationIcon,
  NotStartedIcon,
  NoteIcon,
  NoteAddIcon,
  NoteAltIcon,
  NotesIcon,
  NotificationAddIcon,
  NotificationImportantIcon,
  NotificationsIcon,
  NotificationsActiveIcon,
  NotificationsNoneIcon,
  NotificationsOffIcon,
  NotificationsOnIcon,
  NotificationsPausedIcon,
  NowWallpaperIcon,
  NowWidgetsIcon,
  NumbersIcon,
  OfflineBoltIcon,
  OfflinePinIcon,
  OfflineShareIcon,
  OilBarrelIcon,
  OnDeviceTrainingIcon,
  OndemandVideoIcon,
  OnlinePredictionIcon,
  OpacityIcon,
  OpenInBrowserIcon,
  OpenInFullIcon,
  OpenInNewIcon,
  OpenInNewOffIcon,
  OpenWithIcon,
  OtherHousesIcon,
  OutbondIcon,
  OutboundIcon,
  OutboxIcon,
  OutdoorGrillIcon,
  OutletIcon,
  OutlinedFlagIcon,
  OutputIcon,
  PaddingIcon,
  PagesIcon,
  PageviewIcon,
  PaidIcon,
  PaletteIcon,
  PanToolIcon,
  PanToolAltIcon,
  PanoramaIcon,
  PanoramaFisheyeIcon,
  PanoramaHorizontalIcon,
  PanoramaHorizontalSelectIcon,
  PanoramaPhotosphereIcon,
  PanoramaPhotosphereSelectIcon,
  PanoramaVerticalIcon,
  PanoramaVerticalSelectIcon,
  PanoramaWideAngleIcon,
  PanoramaWideAngleSelectIcon,
  ParaglidingIcon,
  ParkIcon,
  PartyModeIcon,
  PasswordIcon,
  PasteIcon,
  PatternIcon,
  PauseIcon,
  PauseCircleIcon,
  PauseCircleFilledIcon,
  PauseCircleOutlineIcon,
  PausePresentationIcon,
  PaymentIcon,
  PaymentsIcon,
  PaypalIcon,
  PedalBikeIcon,
  PendingIcon,
  PendingActionsIcon,
  PentagonIcon,
  PeopleIcon,
  PeopleAltIcon,
  PeopleOutlineIcon,
  PercentIcon,
  PermCameraMicIcon,
  PermContactCalIcon,
  PermContactCalendarIcon,
  PermDataSettingIcon,
  PermDeviceInfoIcon,
  PermDeviceInformationIcon,
  PermIdentityIcon,
  PermMediaIcon,
  PermPhoneMsgIcon,
  PermScanWifiIcon,
  PersonIcon,
  Person2Icon,
  Person3Icon,
  Person4Icon,
  PersonAddIcon,
  PersonAddAltIcon,
  PersonAddAlt1Icon,
  PersonAddDisabledIcon,
  PersonOffIcon,
  PersonOutlineIcon,
  PersonPinIcon,
  PersonPinCircleIcon,
  PersonRemoveIcon,
  PersonRemoveAlt1Icon,
  PersonSearchIcon,
  PersonalInjuryIcon,
  PersonalVideoIcon,
  PestControlIcon,
  PestControlRodentIcon,
  PetsIcon,
  PhishingIcon,
  PhoneIcon,
  PhoneAndroidIcon,
  PhoneBluetoothSpeakerIcon,
  PhoneCallbackIcon,
  PhoneDisabledIcon,
  PhoneEnabledIcon,
  PhoneForwardedIcon,
  PhoneInTalkIcon,
  PhoneIphoneIcon,
  PhoneLockedIcon,
  PhoneMissedIcon,
  PhonePausedIcon,
  PhonelinkIcon,
  PhonelinkEraseIcon,
  PhonelinkLockIcon,
  PhonelinkOffIcon,
  PhonelinkRingIcon,
  PhonelinkSetupIcon,
  PhotoIcon,
  PhotoAlbumIcon,
  PhotoCameraIcon,
  PhotoCameraBackIcon,
  PhotoCameraFrontIcon,
  PhotoFilterIcon,
  PhotoLibraryIcon,
  PhotoSizeSelectActualIcon,
  PhotoSizeSelectLargeIcon,
  PhotoSizeSelectSmallIcon,
  PhpIcon,
  PianoIcon,
  PianoOffIcon,
  PictureAsPdfIcon,
  PictureInPictureIcon,
  PictureInPictureAltIcon,
  PieChartIcon,
  PieChartOutlineIcon,
  PinIcon,
  PinDropIcon,
  PinEndIcon,
  PinInvokeIcon,
  PinchIcon,
  PivotTableChartIcon,
  PixIcon,
  PlaceIcon,
  PlagiarismIcon,
  PlayArrowIcon,
  PlayCircleIcon,
  PlayCircleFillIcon,
  PlayCircleFilledIcon,
  PlayCircleOutlineIcon,
  PlayDisabledIcon,
  PlayForWorkIcon,
  PlayLessonIcon,
  PlaylistAddIcon,
  PlaylistAddCheckIcon,
  PlaylistAddCheckCircleIcon,
  PlaylistAddCircleIcon,
  PlaylistPlayIcon,
  PlaylistRemoveIcon,
  PlumbingIcon,
  PlusOneIcon,
  PodcastsIcon,
  PointOfSaleIcon,
  PolicyIcon,
  PollIcon,
  PolylineIcon,
  PolymerIcon,
  PoolIcon,
  PortableWifiOffIcon,
  PortraitIcon,
  PostAddIcon,
  PowerIcon,
  PowerInputIcon,
  PowerOffIcon,
  PowerSettingsNewIcon,
  PrecisionManufacturingIcon,
  PregnantWomanIcon,
  PresentToAllIcon,
  PreviewIcon,
  PriceChangeIcon,
  PriceCheckIcon,
  PrintIcon,
  PrintDisabledIcon,
  PriorityHighIcon,
  PrivacyTipIcon,
  PrivateConnectivityIcon,
  ProductionQuantityLimitsIcon,
  PropaneIcon,
  PropaneTankIcon,
  PsychologyIcon,
  PsychologyAltIcon,
  PublicIcon,
  PublicOffIcon,
  PublishIcon,
  PublishedWithChangesIcon,
  PunchClockIcon,
  PushPinIcon,
  QrCodeIcon,
  QrCode2Icon,
  QrCodeScannerIcon,
  QueryBuilderIcon,
  QueryStatsIcon,
  QuestionAnswerIcon,
  QuestionMarkIcon,
  QueueIcon,
  QueueMusicIcon,
  QueuePlayNextIcon,
  QuickContactsDialerIcon,
  QuickContactsMailIcon,
  QuickreplyIcon,
  QuizIcon,
  QuoraIcon,
  RMobiledataIcon,
  RadarIcon,
  RadioIcon,
  RadioButtonCheckedIcon,
  RadioButtonOffIcon,
  RadioButtonOnIcon,
  RadioButtonUncheckedIcon,
  RailwayAlertIcon,
  RamenDiningIcon,
  RampLeftIcon,
  RampRightIcon,
  RateReviewIcon,
  RawOffIcon,
  RawOnIcon,
  ReadMoreIcon,
  RealEstateAgentIcon,
  ReceiptIcon,
  ReceiptLongIcon,
  RecentActorsIcon,
  RecommendIcon,
  RecordVoiceOverIcon,
  RectangleIcon,
  RecyclingIcon,
  RedditIcon,
  RedeemIcon,
  RedoIcon,
  ReduceCapacityIcon,
  RefreshIcon,
  RememberMeIcon,
  RemoveIcon,
  RemoveCircleIcon,
  RemoveCircleOutlineIcon,
  RemoveDoneIcon,
  RemoveFromQueueIcon,
  RemoveModeratorIcon,
  RemoveRedEyeIcon,
  RemoveRoadIcon,
  RemoveShoppingCartIcon,
  ReorderIcon,
  RepartitionIcon,
  RepeatIcon,
  RepeatOnIcon,
  RepeatOneIcon,
  RepeatOneOnIcon,
  ReplayIcon,
  Replay10Icon,
  Replay30Icon,
  Replay5Icon,
  ReplayCircleFilledIcon,
  ReplyIcon,
  ReplyAllIcon,
  ReportIcon,
  ReportGmailerrorredIcon,
  ReportOffIcon,
  ReportProblemIcon,
  RequestPageIcon,
  RequestQuoteIcon,
  ResetTvIcon,
  RestartAltIcon,
  RestaurantIcon,
  RestaurantMenuIcon,
  RestoreIcon,
  RestoreFromTrashIcon,
  RestorePageIcon,
  ReviewsIcon,
  RiceBowlIcon,
  RingVolumeIcon,
  RocketIcon,
  RocketLaunchIcon,
  RollerShadesIcon,
  RollerShadesClosedIcon,
  RollerSkatingIcon,
  RoofingIcon,
  RoomIcon,
  RoomPreferencesIcon,
  RoomServiceIcon,
  Rotate90DegreesCcwIcon,
  Rotate90DegreesCwIcon,
  RotateLeftIcon,
  RotateRightIcon,
  RoundaboutLeftIcon,
  RoundaboutRightIcon,
  RoundedCornerIcon,
  RouteIcon,
  RouterIcon,
  RowingIcon,
  RssFeedIcon,
  RsvpIcon,
  RttIcon,
  RuleIcon,
  RuleFolderIcon,
  RunCircleIcon,
  RunningWithErrorsIcon,
  RvHookupIcon,
  SafetyCheckIcon,
  SafetyDividerIcon,
  SailingIcon,
  SanitizerIcon,
  SatelliteIcon,
  SatelliteAltIcon,
  SaveIcon,
  SaveAltIcon,
  SaveAsIcon,
  SavedSearchIcon,
  SavingsIcon,
  ScaleIcon,
  ScannerIcon,
  ScatterPlotIcon,
  ScheduleIcon,
  ScheduleSendIcon,
  SchemaIcon,
  SchoolIcon,
  ScienceIcon,
  ScoreIcon,
  ScoreboardIcon,
  ScreenLockLandscapeIcon,
  ScreenLockPortraitIcon,
  ScreenLockRotationIcon,
  ScreenRotationIcon,
  ScreenRotationAltIcon,
  ScreenSearchDesktopIcon,
  ScreenShareIcon,
  ScreenshotIcon,
  ScreenshotMonitorIcon,
  ScubaDivingIcon,
  SdIcon,
  SdCardIcon,
  SdCardAlertIcon,
  SdStorageIcon,
  SearchIcon,
  SearchOffIcon,
  SecurityIcon,
  SecurityUpdateIcon,
  SecurityUpdateGoodIcon,
  SecurityUpdateWarningIcon,
  SegmentIcon,
  SelectAllIcon,
  SelfImprovementIcon,
  SellIcon,
  SendIcon,
  SendAndArchiveIcon,
  SendTimeExtensionIcon,
  SendToMobileIcon,
  SensorDoorIcon,
  SensorOccupiedIcon,
  SensorWindowIcon,
  SensorsIcon,
  SensorsOffIcon,
  SentimentDissatisfiedIcon,
  SentimentNeutralIcon,
  SentimentSatisfiedIcon,
  SentimentSatisfiedAltIcon,
  SentimentVeryDissatisfiedIcon,
  SentimentVerySatisfiedIcon,
  SetMealIcon,
  SettingsIcon,
  SettingsAccessibilityIcon,
  SettingsApplicationsIcon,
  SettingsBackupRestoreIcon,
  SettingsBluetoothIcon,
  SettingsBrightnessIcon,
  SettingsCellIcon,
  SettingsDisplayIcon,
  SettingsEthernetIcon,
  SettingsInputAntennaIcon,
  SettingsInputComponentIcon,
  SettingsInputCompositeIcon,
  SettingsInputHdmiIcon,
  SettingsInputSvideoIcon,
  SettingsOverscanIcon,
  SettingsPhoneIcon,
  SettingsPowerIcon,
  SettingsRemoteIcon,
  SettingsSuggestIcon,
  SettingsSystemDaydreamIcon,
  SettingsVoiceIcon,
  SevereColdIcon,
  ShapeLineIcon,
  ShareIcon,
  ShareArrivalTimeIcon,
  ShareLocationIcon,
  ShieldIcon,
  ShieldMoonIcon,
  ShopIcon,
  Shop2Icon,
  ShopTwoIcon,
  ShopifyIcon,
  ShoppingBagIcon,
  ShoppingBasketIcon,
  ShoppingCartIcon,
  ShoppingCartCheckoutIcon,
  ShortTextIcon,
  ShortcutIcon,
  ShowChartIcon,
  ShowerIcon,
  ShuffleIcon,
  ShuffleOnIcon,
  ShutterSpeedIcon,
  SickIcon,
  SignLanguageIcon,
  SignalCellular0BarIcon,
  SignalCellular4BarIcon,
  SignalCellularAltIcon,
  SignalCellularAlt1BarIcon,
  SignalCellularAlt2BarIcon,
  SignalCellularConnectedNoInternet0BarIcon,
  SignalCellularConnectedNoInternet4BarIcon,
  SignalCellularNoSimIcon,
  SignalCellularNodataIcon,
  SignalCellularNullIcon,
  SignalCellularOffIcon,
  SignalWifi0BarIcon,
  SignalWifi4BarIcon,
  SignalWifi4BarLockIcon,
  SignalWifiBadIcon,
  SignalWifiConnectedNoInternet4Icon,
  SignalWifiOffIcon,
  SignalWifiStatusbar4BarIcon,
  SignalWifiStatusbarConnectedNoInternet4Icon,
  SignalWifiStatusbarNullIcon,
  SignpostIcon,
  SimCardIcon,
  SimCardAlertIcon,
  SimCardDownloadIcon,
  SingleBedIcon,
  SipIcon,
  SkateboardingIcon,
  SkipNextIcon,
  SkipPreviousIcon,
  SleddingIcon,
  SlideshowIcon,
  SlowMotionVideoIcon,
  SmartButtonIcon,
  SmartDisplayIcon,
  SmartScreenIcon,
  SmartToyIcon,
  SmartphoneIcon,
  SmokeFreeIcon,
  SmokingRoomsIcon,
  SmsIcon,
  SmsFailedIcon,
  SnapchatIcon,
  SnippetFolderIcon,
  SnoozeIcon,
  SnowboardingIcon,
  SnowmobileIcon,
  SnowshoeingIcon,
  SoapIcon,
  SocialDistanceIcon,
  SolarPowerIcon,
  SortIcon,
  SortByAlphaIcon,
  SosIcon,
  SoupKitchenIcon,
  SourceIcon,
  SouthIcon,
  SouthAmericaIcon,
  SouthEastIcon,
  SouthWestIcon,
  SpaIcon,
  SpaceBarIcon,
  SpaceDashboardIcon,
  SpatialAudioIcon,
  SpatialAudioOffIcon,
  SpatialTrackingIcon,
  SpeakerIcon,
  SpeakerGroupIcon,
  SpeakerNotesIcon,
  SpeakerNotesOffIcon,
  SpeakerPhoneIcon,
  SpeedIcon,
  SpellcheckIcon,
  SplitscreenIcon,
  SpokeIcon,
  SportsIcon,
  SportsBarIcon,
  SportsBaseballIcon,
  SportsBasketballIcon,
  SportsCricketIcon,
  SportsEsportsIcon,
  SportsFootballIcon,
  SportsGolfIcon,
  SportsGymnasticsIcon,
  SportsHandballIcon,
  SportsHockeyIcon,
  SportsKabaddiIcon,
  SportsMartialArtsIcon,
  SportsMmaIcon,
  SportsMotorsportsIcon,
  SportsRugbyIcon,
  SportsScoreIcon,
  SportsSoccerIcon,
  SportsTennisIcon,
  SportsVolleyballIcon,
  SquareIcon,
  SquareFootIcon,
  SsidChartIcon,
  StackedBarChartIcon,
  StackedLineChartIcon,
  StadiumIcon,
  StairsIcon,
  StarIcon,
  StarBorderIcon,
  StarBorderPurple500Icon,
  StarHalfIcon,
  StarOutlineIcon,
  StarPurple500Icon,
  StarRateIcon,
  StarsIcon,
  StartIcon,
  StayCurrentLandscapeIcon,
  StayCurrentPortraitIcon,
  StayPrimaryLandscapeIcon,
  StayPrimaryPortraitIcon,
  StickyNote2Icon,
  StopIcon,
  StopCircleIcon,
  StopScreenShareIcon,
  StorageIcon,
  StoreIcon,
  StoreMallDirectoryIcon,
  StorefrontIcon,
  StormIcon,
  StraightIcon,
  StraightenIcon,
  StreamIcon,
  StreetviewIcon,
  StrikethroughSIcon,
  StrollerIcon,
  StyleIcon,
  SubdirectoryArrowLeftIcon,
  SubdirectoryArrowRightIcon,
  SubjectIcon,
  SubscriptIcon,
  SubscriptionsIcon,
  SubtitlesIcon,
  SubtitlesOffIcon,
  SubwayIcon,
  SummarizeIcon,
  SuperscriptIcon,
  SupervisedUserCircleIcon,
  SupervisorAccountIcon,
  SupportIcon,
  SupportAgentIcon,
  SurfingIcon,
  SurroundSoundIcon,
  SwapCallsIcon,
  SwapHorizIcon,
  SwapHorizontalCircleIcon,
  SwapVertIcon,
  SwapVertCircleIcon,
  SwapVerticalCircleIcon,
  SwipeIcon,
  SwipeDownIcon,
  SwipeDownAltIcon,
  SwipeLeftIcon,
  SwipeLeftAltIcon,
  SwipeRightIcon,
  SwipeRightAltIcon,
  SwipeUpIcon,
  SwipeUpAltIcon,
  SwipeVerticalIcon,
  SwitchAccessShortcutIcon,
  SwitchAccessShortcutAddIcon,
  SwitchAccountIcon,
  SwitchCameraIcon,
  SwitchLeftIcon,
  SwitchRightIcon,
  SwitchVideoIcon,
  SynagogueIcon,
  SyncIcon,
  SyncAltIcon,
  SyncDisabledIcon,
  SyncLockIcon,
  SyncProblemIcon,
  SystemSecurityUpdateIcon,
  SystemSecurityUpdateGoodIcon,
  SystemSecurityUpdateWarningIcon,
  SystemUpdateIcon,
  SystemUpdateAltIcon,
  SystemUpdateTvIcon,
  TabIcon,
  TabUnselectedIcon,
  TableBarIcon,
  TableChartIcon,
  TableRestaurantIcon,
  TableRowsIcon,
  TableViewIcon,
  TabletIcon,
  TabletAndroidIcon,
  TabletMacIcon,
  TagIcon,
  TagFacesIcon,
  TakeoutDiningIcon,
  TapAndPlayIcon,
  TapasIcon,
  TaskIcon,
  TaskAltIcon,
  TaxiAlertIcon,
  TelegramIcon,
  TempleBuddhistIcon,
  TempleHinduIcon,
  TerminalIcon,
  TerrainIcon,
  TextDecreaseIcon,
  TextFieldsIcon,
  TextFormatIcon,
  TextIncreaseIcon,
  TextRotateUpIcon,
  TextRotateVerticalIcon,
  TextRotationAngledownIcon,
  TextRotationAngleupIcon,
  TextRotationDownIcon,
  TextRotationNoneIcon,
  TextSnippetIcon,
  TextsmsIcon,
  TextureIcon,
  TheaterComedyIcon,
  TheatersIcon,
  ThermostatIcon,
  ThermostatAutoIcon,
  ThumbDownIcon,
  ThumbDownAltIcon,
  ThumbDownOffAltIcon,
  ThumbUpIcon,
  ThumbUpAltIcon,
  ThumbUpOffAltIcon,
  ThumbsUpDownIcon,
  ThunderstormIcon,
  TiktokIcon,
  TimeToLeaveIcon,
  TimelapseIcon,
  TimelineIcon,
  TimerIcon,
  Timer10Icon,
  Timer10SelectIcon,
  Timer3Icon,
  Timer3SelectIcon,
  TimerOffIcon,
  TipsAndUpdatesIcon,
  TireRepairIcon,
  TitleIcon,
  TocIcon,
  TodayIcon,
  ToggleOffIcon,
  ToggleOnIcon,
  TokenIcon,
  TollIcon,
  TonalityIcon,
  TopicIcon,
  TornadoIcon,
  TouchAppIcon,
  TourIcon,
  ToysIcon,
  TrackChangesIcon,
  TrafficIcon,
  TrainIcon,
  TramIcon,
  TranscribeIcon,
  TransferWithinAStationIcon,
  TransformIcon,
  TransgenderIcon,
  TransitEnterexitIcon,
  TranslateIcon,
  TravelExploreIcon,
  TrendingDownIcon,
  TrendingFlatIcon,
  TrendingNeutralIcon,
  TrendingUpIcon,
  TripOriginIcon,
  TroubleshootIcon,
  TryIcon,
  TsunamiIcon,
  TtyIcon,
  TuneIcon,
  TungstenIcon,
  TurnLeftIcon,
  TurnRightIcon,
  TurnSharpLeftIcon,
  TurnSharpRightIcon,
  TurnSlightLeftIcon,
  TurnSlightRightIcon,
  TurnedInIcon,
  TurnedInNotIcon,
  TvIcon,
  TvOffIcon,
  TwoWheelerIcon,
  TypeSpecimenIcon,
  UTurnLeftIcon,
  UTurnRightIcon,
  UmbrellaIcon,
  UnarchiveIcon,
  UndoIcon,
  UnfoldLessIcon,
  UnfoldLessDoubleIcon,
  UnfoldMoreIcon,
  UnfoldMoreDoubleIcon,
  UnpublishedIcon,
  UnsubscribeIcon,
  UpcomingIcon,
  UpdateIcon,
  UpdateDisabledIcon,
  UpgradeIcon,
  UploadIcon,
  UploadFileIcon,
  UsbIcon,
  UsbOffIcon,
  VaccinesIcon,
  VapeFreeIcon,
  VapingRoomsIcon,
  VerifiedIcon,
  VerifiedUserIcon,
  VerticalAlignBottomIcon,
  VerticalAlignCenterIcon,
  VerticalAlignTopIcon,
  VerticalDistributeIcon,
  VerticalShadesIcon,
  VerticalShadesClosedIcon,
  VerticalSplitIcon,
  VibrationIcon,
  VideoCallIcon,
  VideoCameraBackIcon,
  VideoCameraFrontIcon,
  VideoChatIcon,
  VideoCollectionIcon,
  VideoFileIcon,
  VideoLabelIcon,
  VideoLibraryIcon,
  VideoSettingsIcon,
  VideoStableIcon,
  VideocamIcon,
  VideocamOffIcon,
  VideogameAssetIcon,
  VideogameAssetOffIcon,
  ViewAgendaIcon,
  ViewArrayIcon,
  ViewCarouselIcon,
  ViewColumnIcon,
  ViewComfortableIcon,
  ViewComfyIcon,
  ViewComfyAltIcon,
  ViewCompactIcon,
  ViewCompactAltIcon,
  ViewCozyIcon,
  ViewDayIcon,
  ViewHeadlineIcon,
  ViewInArIcon,
  ViewKanbanIcon,
  ViewListIcon,
  ViewModuleIcon,
  ViewQuiltIcon,
  ViewSidebarIcon,
  ViewStreamIcon,
  ViewTimelineIcon,
  ViewWeekIcon,
  VignetteIcon,
  VillaIcon,
  VisibilityIcon,
  VisibilityOffIcon,
  VoiceChatIcon,
  VoiceOverOffIcon,
  VoicemailIcon,
  VolcanoIcon,
  VolumeDownIcon,
  VolumeMuteIcon,
  VolumeOffIcon,
  VolumeUpIcon,
  VolunteerActivismIcon,
  VpnKeyIcon,
  VpnKeyOffIcon,
  VpnLockIcon,
  VrpanoIcon,
  WalletIcon,
  WalletGiftcardIcon,
  WalletMembershipIcon,
  WalletTravelIcon,
  WallpaperIcon,
  WarehouseIcon,
  WarningIcon,
  WarningAmberIcon,
  WashIcon,
  WatchIcon,
  WatchLaterIcon,
  WatchOffIcon,
  WaterIcon,
  WaterDamageIcon,
  WaterDropIcon,
  WaterfallChartIcon,
  WavesIcon,
  WavingHandIcon,
  WbAutoIcon,
  WbCloudyIcon,
  WbIncandescentIcon,
  WbIridescentIcon,
  WbShadeIcon,
  WbSunnyIcon,
  WbTwilightIcon,
  WcIcon,
  WebIcon,
  WebAssetIcon,
  WebAssetOffIcon,
  WebStoriesIcon,
  WebhookIcon,
  WechatIcon,
  WeekendIcon,
  WestIcon,
  WhatshotIcon,
  WheelchairPickupIcon,
  WhereToVoteIcon,
  WidgetsIcon,
  WidthFullIcon,
  WidthNormalIcon,
  WidthWideIcon,
  WifiIcon,
  Wifi1BarIcon,
  Wifi2BarIcon,
  WifiCallingIcon,
  WifiCalling3Icon,
  WifiChannelIcon,
  WifiFindIcon,
  WifiLockIcon,
  WifiOffIcon,
  WifiPasswordIcon,
  WifiProtectedSetupIcon,
  WifiTetheringIcon,
  WifiTetheringErrorIcon,
  WifiTetheringErrorRoundedIcon,
  WifiTetheringOffIcon,
  WindPowerIcon,
  WindowIcon,
  WineBarIcon,
  WomanIcon,
  Woman2Icon,
  WooCommerceIcon,
  WordpressIcon,
  WorkIcon,
  WorkHistoryIcon,
  WorkOffIcon,
  WorkOutlineIcon,
  WorkspacePremiumIcon,
  WorkspacesIcon,
  WrapTextIcon,
  WrongLocationIcon,
  WysiwygIcon,
  YardIcon,
  YoutubeSearchedForIcon,
  ZoomInIcon,
  ZoomInMapIcon,
  ZoomOutIcon,
  ZoomOutMapIcon,
  Checkbox2 as Checkbox,
  Chip,
  IconButton,
  InputLabel,
  Typography,
  DateTimeField,
  Dialog2 as Dialog,
  DialogActions,
  DialogContent2 as DialogContent,
  DialogTitle2 as DialogTitle,
  ExpandablePanel,
  FileUpload,
  InfoLabel,
  Label3 as Label,
  LoadingButton,
  Markdown,
  Menu3 as Menu,
  MenuItem2 as MenuItem,
  Menubar2 as Menubar,
  MenubarMenu2 as MenubarMenu,
  MenubarTrigger2 as MenubarTrigger,
  MenubarPortal2 as MenubarPortal,
  MenubarContent2 as MenubarContent,
  MenubarItem2 as MenubarItem,
  MenubarSeparator2 as MenubarSeparator,
  MenubarSub2 as MenubarSub,
  MenubarSubTrigger2 as MenubarSubTrigger,
  MenubarSubContent2 as MenubarSubContent,
  MenubarCheckboxItem2 as MenubarCheckboxItem,
  MenubarItemIndicator2 as MenubarItemIndicator,
  MenubarRadioGroup2 as MenubarRadioGroup,
  MenubarRadioItem2 as MenubarRadioItem,
  MenubarShortcut,
  MenubarSubTriggerIndicator,
  Separator4 as Separator,
  MultiSelectContext,
  MultiSelect,
  MultiSelectItem,
  Paper,
  RadioGroup4 as RadioGroup,
  RadioGroupItem2 as RadioGroupItem,
  SearchBar,
  Select2 as Select,
  SelectItem2 as SelectItem,
  SelectGroup2 as SelectGroup,
  Slider2 as Slider,
  Sheet,
  TextareaAutosize,
  TextField,
  Tooltip2 as Tooltip,
  Tabs2 as Tabs,
  Tab,
  Table,
  TableBody,
  TableHeader,
  TableRow,
  TableCell,
  Popover2 as Popover,
  Badge,
  DebouncedTextField,
  Skeleton
};
/*! Bundled license information:

react-compiler-runtime/dist/index.js:
  (**
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @lightSyntaxTransform
   * @noflow
   * @nolint
   * @preventMunge
   * @preserve-invariant-messages
   *)

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)
*/
//# sourceMappingURL=chunk-ODXTNR6Y.js.map
